//
// File generated by rootcint at Thu Nov 10 13:38:07 2016

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME Dict
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "Dict.h"

#include "TCollectionProxyInfo.h"
#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TInterpreter.h"
#include "TVirtualMutex.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// Direct notice to TROOT of the dictionary's loading.
namespace {
   static struct DictInit {
      DictInit() {
         ROOT::RegisterModule();
      }
   } __TheDictionaryInitializer;
}

// START OF SHADOWS

namespace ROOTShadow {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOTShadow
// END OF SHADOWS

namespace ROOTDict {
   void vectorlETStringgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlETStringgR_Dictionary();
   static void *new_vectorlETStringgR(void *p = 0);
   static void *newArray_vectorlETStringgR(Long_t size, void *p);
   static void delete_vectorlETStringgR(void *p);
   static void deleteArray_vectorlETStringgR(void *p);
   static void destruct_vectorlETStringgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<TString>*)
   {
      vector<TString> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<TString>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<TString>", -2, "prec_stl/vector", 49,
                  typeid(vector<TString>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlETStringgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<TString>) );
      instance.SetNew(&new_vectorlETStringgR);
      instance.SetNewArray(&newArray_vectorlETStringgR);
      instance.SetDelete(&delete_vectorlETStringgR);
      instance.SetDeleteArray(&deleteArray_vectorlETStringgR);
      instance.SetDestructor(&destruct_vectorlETStringgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<TString> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<TString>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlETStringgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<TString>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlETStringgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<TString> : new vector<TString>;
   }
   static void *newArray_vectorlETStringgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<TString>[nElements] : new vector<TString>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlETStringgR(void *p) {
      delete ((vector<TString>*)p);
   }
   static void deleteArray_vectorlETStringgR(void *p) {
      delete [] ((vector<TString>*)p);
   }
   static void destruct_vectorlETStringgR(void *p) {
      typedef vector<TString> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<TString>

namespace ROOTDict {
   void vectorlEboolgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEboolgR_Dictionary();
   static void *new_vectorlEboolgR(void *p = 0);
   static void *newArray_vectorlEboolgR(Long_t size, void *p);
   static void delete_vectorlEboolgR(void *p);
   static void deleteArray_vectorlEboolgR(void *p);
   static void destruct_vectorlEboolgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<bool>*)
   {
      vector<bool> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<bool>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<bool>", -2, "vectorbool.dll", 0,
                  typeid(vector<bool>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlEboolgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<bool>) );
      instance.SetNew(&new_vectorlEboolgR);
      instance.SetNewArray(&newArray_vectorlEboolgR);
      instance.SetDelete(&delete_vectorlEboolgR);
      instance.SetDeleteArray(&deleteArray_vectorlEboolgR);
      instance.SetDestructor(&destruct_vectorlEboolgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<bool> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<bool>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEboolgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<bool>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlEboolgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<bool> : new vector<bool>;
   }
   static void *newArray_vectorlEboolgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<bool>[nElements] : new vector<bool>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEboolgR(void *p) {
      delete ((vector<bool>*)p);
   }
   static void deleteArray_vectorlEboolgR(void *p) {
      delete [] ((vector<bool>*)p);
   }
   static void destruct_vectorlEboolgR(void *p) {
      typedef vector<bool> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<bool>

namespace ROOTDict {
   void vectorlEcharmUgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEcharmUgR_Dictionary();
   static void *new_vectorlEcharmUgR(void *p = 0);
   static void *newArray_vectorlEcharmUgR(Long_t size, void *p);
   static void delete_vectorlEcharmUgR(void *p);
   static void deleteArray_vectorlEcharmUgR(void *p);
   static void destruct_vectorlEcharmUgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<char*>*)
   {
      vector<char*> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<char*>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<char*>", -2, "vector.dll", 0,
                  typeid(vector<char*>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlEcharmUgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<char*>) );
      instance.SetNew(&new_vectorlEcharmUgR);
      instance.SetNewArray(&newArray_vectorlEcharmUgR);
      instance.SetDelete(&delete_vectorlEcharmUgR);
      instance.SetDeleteArray(&deleteArray_vectorlEcharmUgR);
      instance.SetDestructor(&destruct_vectorlEcharmUgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<char*> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<char*>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEcharmUgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<char*>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlEcharmUgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<char*> : new vector<char*>;
   }
   static void *newArray_vectorlEcharmUgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<char*>[nElements] : new vector<char*>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEcharmUgR(void *p) {
      delete ((vector<char*>*)p);
   }
   static void deleteArray_vectorlEcharmUgR(void *p) {
      delete [] ((vector<char*>*)p);
   }
   static void destruct_vectorlEcharmUgR(void *p) {
      typedef vector<char*> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<char*>

namespace ROOTDict {
   void vectorlEchargR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEchargR_Dictionary();
   static void *new_vectorlEchargR(void *p = 0);
   static void *newArray_vectorlEchargR(Long_t size, void *p);
   static void delete_vectorlEchargR(void *p);
   static void deleteArray_vectorlEchargR(void *p);
   static void destruct_vectorlEchargR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<char>*)
   {
      vector<char> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<char>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<char>", -2, "vector.dll", 0,
                  typeid(vector<char>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlEchargR_Dictionary, isa_proxy, 0,
                  sizeof(vector<char>) );
      instance.SetNew(&new_vectorlEchargR);
      instance.SetNewArray(&newArray_vectorlEchargR);
      instance.SetDelete(&delete_vectorlEchargR);
      instance.SetDeleteArray(&deleteArray_vectorlEchargR);
      instance.SetDestructor(&destruct_vectorlEchargR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<char> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<char>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEchargR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<char>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlEchargR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<char> : new vector<char>;
   }
   static void *newArray_vectorlEchargR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<char>[nElements] : new vector<char>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEchargR(void *p) {
      delete ((vector<char>*)p);
   }
   static void deleteArray_vectorlEchargR(void *p) {
      delete [] ((vector<char>*)p);
   }
   static void destruct_vectorlEchargR(void *p) {
      typedef vector<char> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<char>

namespace ROOTDict {
   void vectorlEconstsPcharmUgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEconstsPcharmUgR_Dictionary();
   static void *new_vectorlEconstsPcharmUgR(void *p = 0);
   static void *newArray_vectorlEconstsPcharmUgR(Long_t size, void *p);
   static void delete_vectorlEconstsPcharmUgR(void *p);
   static void deleteArray_vectorlEconstsPcharmUgR(void *p);
   static void destruct_vectorlEconstsPcharmUgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<const char*>*)
   {
      vector<const char*> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<const char*>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<const char*>", -2, "prec_stl/vector", 49,
                  typeid(vector<const char*>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlEconstsPcharmUgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<const char*>) );
      instance.SetNew(&new_vectorlEconstsPcharmUgR);
      instance.SetNewArray(&newArray_vectorlEconstsPcharmUgR);
      instance.SetDelete(&delete_vectorlEconstsPcharmUgR);
      instance.SetDeleteArray(&deleteArray_vectorlEconstsPcharmUgR);
      instance.SetDestructor(&destruct_vectorlEconstsPcharmUgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<const char*> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<const char*>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEconstsPcharmUgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<const char*>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlEconstsPcharmUgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<const char*> : new vector<const char*>;
   }
   static void *newArray_vectorlEconstsPcharmUgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<const char*>[nElements] : new vector<const char*>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEconstsPcharmUgR(void *p) {
      delete ((vector<const char*>*)p);
   }
   static void deleteArray_vectorlEconstsPcharmUgR(void *p) {
      delete [] ((vector<const char*>*)p);
   }
   static void destruct_vectorlEconstsPcharmUgR(void *p) {
      typedef vector<const char*> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<const char*>

namespace ROOTDict {
   void vectorlEdoublegR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEdoublegR_Dictionary();
   static void *new_vectorlEdoublegR(void *p = 0);
   static void *newArray_vectorlEdoublegR(Long_t size, void *p);
   static void delete_vectorlEdoublegR(void *p);
   static void deleteArray_vectorlEdoublegR(void *p);
   static void destruct_vectorlEdoublegR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<double>*)
   {
      vector<double> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<double>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<double>", -2, "vector.dll", 0,
                  typeid(vector<double>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlEdoublegR_Dictionary, isa_proxy, 0,
                  sizeof(vector<double>) );
      instance.SetNew(&new_vectorlEdoublegR);
      instance.SetNewArray(&newArray_vectorlEdoublegR);
      instance.SetDelete(&delete_vectorlEdoublegR);
      instance.SetDeleteArray(&deleteArray_vectorlEdoublegR);
      instance.SetDestructor(&destruct_vectorlEdoublegR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<double> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<double>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEdoublegR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<double>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlEdoublegR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<double> : new vector<double>;
   }
   static void *newArray_vectorlEdoublegR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<double>[nElements] : new vector<double>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEdoublegR(void *p) {
      delete ((vector<double>*)p);
   }
   static void deleteArray_vectorlEdoublegR(void *p) {
      delete [] ((vector<double>*)p);
   }
   static void destruct_vectorlEdoublegR(void *p) {
      typedef vector<double> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<double>

namespace ROOTDict {
   void vectorlEfloatgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEfloatgR_Dictionary();
   static void *new_vectorlEfloatgR(void *p = 0);
   static void *newArray_vectorlEfloatgR(Long_t size, void *p);
   static void delete_vectorlEfloatgR(void *p);
   static void deleteArray_vectorlEfloatgR(void *p);
   static void destruct_vectorlEfloatgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<float>*)
   {
      vector<float> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<float>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<float>", -2, "vector.dll", 0,
                  typeid(vector<float>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlEfloatgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<float>) );
      instance.SetNew(&new_vectorlEfloatgR);
      instance.SetNewArray(&newArray_vectorlEfloatgR);
      instance.SetDelete(&delete_vectorlEfloatgR);
      instance.SetDeleteArray(&deleteArray_vectorlEfloatgR);
      instance.SetDestructor(&destruct_vectorlEfloatgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<float> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<float>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEfloatgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<float>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlEfloatgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<float> : new vector<float>;
   }
   static void *newArray_vectorlEfloatgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<float>[nElements] : new vector<float>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEfloatgR(void *p) {
      delete ((vector<float>*)p);
   }
   static void deleteArray_vectorlEfloatgR(void *p) {
      delete [] ((vector<float>*)p);
   }
   static void destruct_vectorlEfloatgR(void *p) {
      typedef vector<float> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<float>

namespace ROOTDict {
   void vectorlEintgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEintgR_Dictionary();
   static void *new_vectorlEintgR(void *p = 0);
   static void *newArray_vectorlEintgR(Long_t size, void *p);
   static void delete_vectorlEintgR(void *p);
   static void deleteArray_vectorlEintgR(void *p);
   static void destruct_vectorlEintgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<int>*)
   {
      vector<int> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<int>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<int>", -2, "prec_stl/vector", 49,
                  typeid(vector<int>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlEintgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<int>) );
      instance.SetNew(&new_vectorlEintgR);
      instance.SetNewArray(&newArray_vectorlEintgR);
      instance.SetDelete(&delete_vectorlEintgR);
      instance.SetDeleteArray(&deleteArray_vectorlEintgR);
      instance.SetDestructor(&destruct_vectorlEintgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<int> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<int>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEintgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<int>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlEintgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<int> : new vector<int>;
   }
   static void *newArray_vectorlEintgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<int>[nElements] : new vector<int>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEintgR(void *p) {
      delete ((vector<int>*)p);
   }
   static void deleteArray_vectorlEintgR(void *p) {
      delete [] ((vector<int>*)p);
   }
   static void destruct_vectorlEintgR(void *p) {
      typedef vector<int> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<int>

namespace ROOTDict {
   void vectorlELong64_tgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlELong64_tgR_Dictionary();
   static void *new_vectorlELong64_tgR(void *p = 0);
   static void *newArray_vectorlELong64_tgR(Long_t size, void *p);
   static void delete_vectorlELong64_tgR(void *p);
   static void deleteArray_vectorlELong64_tgR(void *p);
   static void destruct_vectorlELong64_tgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<Long64_t>*)
   {
      vector<Long64_t> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<Long64_t>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<Long64_t>", -2, "vector.dll", 0,
                  typeid(vector<Long64_t>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlELong64_tgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<Long64_t>) );
      instance.SetNew(&new_vectorlELong64_tgR);
      instance.SetNewArray(&newArray_vectorlELong64_tgR);
      instance.SetDelete(&delete_vectorlELong64_tgR);
      instance.SetDeleteArray(&deleteArray_vectorlELong64_tgR);
      instance.SetDestructor(&destruct_vectorlELong64_tgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<Long64_t> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<Long64_t>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlELong64_tgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<Long64_t>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlELong64_tgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<Long64_t> : new vector<Long64_t>;
   }
   static void *newArray_vectorlELong64_tgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<Long64_t>[nElements] : new vector<Long64_t>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlELong64_tgR(void *p) {
      delete ((vector<Long64_t>*)p);
   }
   static void deleteArray_vectorlELong64_tgR(void *p) {
      delete [] ((vector<Long64_t>*)p);
   }
   static void destruct_vectorlELong64_tgR(void *p) {
      typedef vector<Long64_t> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<Long64_t>

namespace ROOTDict {
   void vectorlElonggR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlElonggR_Dictionary();
   static void *new_vectorlElonggR(void *p = 0);
   static void *newArray_vectorlElonggR(Long_t size, void *p);
   static void delete_vectorlElonggR(void *p);
   static void deleteArray_vectorlElonggR(void *p);
   static void destruct_vectorlElonggR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<long>*)
   {
      vector<long> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<long>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<long>", -2, "vector.dll", 0,
                  typeid(vector<long>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlElonggR_Dictionary, isa_proxy, 0,
                  sizeof(vector<long>) );
      instance.SetNew(&new_vectorlElonggR);
      instance.SetNewArray(&newArray_vectorlElonggR);
      instance.SetDelete(&delete_vectorlElonggR);
      instance.SetDeleteArray(&deleteArray_vectorlElonggR);
      instance.SetDestructor(&destruct_vectorlElonggR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<long> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<long>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlElonggR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<long>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlElonggR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<long> : new vector<long>;
   }
   static void *newArray_vectorlElonggR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<long>[nElements] : new vector<long>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlElonggR(void *p) {
      delete ((vector<long>*)p);
   }
   static void deleteArray_vectorlElonggR(void *p) {
      delete [] ((vector<long>*)p);
   }
   static void destruct_vectorlElonggR(void *p) {
      typedef vector<long> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<long>

namespace ROOTDict {
   void vectorlEshortgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEshortgR_Dictionary();
   static void *new_vectorlEshortgR(void *p = 0);
   static void *newArray_vectorlEshortgR(Long_t size, void *p);
   static void delete_vectorlEshortgR(void *p);
   static void deleteArray_vectorlEshortgR(void *p);
   static void destruct_vectorlEshortgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<short>*)
   {
      vector<short> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<short>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<short>", -2, "vector.dll", 0,
                  typeid(vector<short>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlEshortgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<short>) );
      instance.SetNew(&new_vectorlEshortgR);
      instance.SetNewArray(&newArray_vectorlEshortgR);
      instance.SetDelete(&delete_vectorlEshortgR);
      instance.SetDeleteArray(&deleteArray_vectorlEshortgR);
      instance.SetDestructor(&destruct_vectorlEshortgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<short> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<short>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEshortgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<short>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlEshortgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<short> : new vector<short>;
   }
   static void *newArray_vectorlEshortgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<short>[nElements] : new vector<short>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEshortgR(void *p) {
      delete ((vector<short>*)p);
   }
   static void deleteArray_vectorlEshortgR(void *p) {
      delete [] ((vector<short>*)p);
   }
   static void destruct_vectorlEshortgR(void *p) {
      typedef vector<short> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<short>

namespace ROOTDict {
   void vectorlEunsignedsPchargR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEunsignedsPchargR_Dictionary();
   static void *new_vectorlEunsignedsPchargR(void *p = 0);
   static void *newArray_vectorlEunsignedsPchargR(Long_t size, void *p);
   static void delete_vectorlEunsignedsPchargR(void *p);
   static void deleteArray_vectorlEunsignedsPchargR(void *p);
   static void destruct_vectorlEunsignedsPchargR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<unsigned char>*)
   {
      vector<unsigned char> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<unsigned char>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<unsigned char>", -2, "vector.dll", 0,
                  typeid(vector<unsigned char>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlEunsignedsPchargR_Dictionary, isa_proxy, 0,
                  sizeof(vector<unsigned char>) );
      instance.SetNew(&new_vectorlEunsignedsPchargR);
      instance.SetNewArray(&newArray_vectorlEunsignedsPchargR);
      instance.SetDelete(&delete_vectorlEunsignedsPchargR);
      instance.SetDeleteArray(&deleteArray_vectorlEunsignedsPchargR);
      instance.SetDestructor(&destruct_vectorlEunsignedsPchargR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<unsigned char> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<unsigned char>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEunsignedsPchargR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<unsigned char>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlEunsignedsPchargR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<unsigned char> : new vector<unsigned char>;
   }
   static void *newArray_vectorlEunsignedsPchargR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<unsigned char>[nElements] : new vector<unsigned char>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEunsignedsPchargR(void *p) {
      delete ((vector<unsigned char>*)p);
   }
   static void deleteArray_vectorlEunsignedsPchargR(void *p) {
      delete [] ((vector<unsigned char>*)p);
   }
   static void destruct_vectorlEunsignedsPchargR(void *p) {
      typedef vector<unsigned char> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<unsigned char>

namespace ROOTDict {
   void vectorlEunsignedsPintgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEunsignedsPintgR_Dictionary();
   static void *new_vectorlEunsignedsPintgR(void *p = 0);
   static void *newArray_vectorlEunsignedsPintgR(Long_t size, void *p);
   static void delete_vectorlEunsignedsPintgR(void *p);
   static void deleteArray_vectorlEunsignedsPintgR(void *p);
   static void destruct_vectorlEunsignedsPintgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<unsigned int>*)
   {
      vector<unsigned int> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<unsigned int>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<unsigned int>", -2, "vector.dll", 0,
                  typeid(vector<unsigned int>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlEunsignedsPintgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<unsigned int>) );
      instance.SetNew(&new_vectorlEunsignedsPintgR);
      instance.SetNewArray(&newArray_vectorlEunsignedsPintgR);
      instance.SetDelete(&delete_vectorlEunsignedsPintgR);
      instance.SetDeleteArray(&deleteArray_vectorlEunsignedsPintgR);
      instance.SetDestructor(&destruct_vectorlEunsignedsPintgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<unsigned int> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<unsigned int>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEunsignedsPintgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<unsigned int>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlEunsignedsPintgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<unsigned int> : new vector<unsigned int>;
   }
   static void *newArray_vectorlEunsignedsPintgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<unsigned int>[nElements] : new vector<unsigned int>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEunsignedsPintgR(void *p) {
      delete ((vector<unsigned int>*)p);
   }
   static void deleteArray_vectorlEunsignedsPintgR(void *p) {
      delete [] ((vector<unsigned int>*)p);
   }
   static void destruct_vectorlEunsignedsPintgR(void *p) {
      typedef vector<unsigned int> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<unsigned int>

namespace ROOTDict {
   void vectorlEULong64_tgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEULong64_tgR_Dictionary();
   static void *new_vectorlEULong64_tgR(void *p = 0);
   static void *newArray_vectorlEULong64_tgR(Long_t size, void *p);
   static void delete_vectorlEULong64_tgR(void *p);
   static void deleteArray_vectorlEULong64_tgR(void *p);
   static void destruct_vectorlEULong64_tgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<ULong64_t>*)
   {
      vector<ULong64_t> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<ULong64_t>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<ULong64_t>", -2, "vector.dll", 0,
                  typeid(vector<ULong64_t>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlEULong64_tgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<ULong64_t>) );
      instance.SetNew(&new_vectorlEULong64_tgR);
      instance.SetNewArray(&newArray_vectorlEULong64_tgR);
      instance.SetDelete(&delete_vectorlEULong64_tgR);
      instance.SetDeleteArray(&deleteArray_vectorlEULong64_tgR);
      instance.SetDestructor(&destruct_vectorlEULong64_tgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<ULong64_t> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<ULong64_t>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEULong64_tgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<ULong64_t>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlEULong64_tgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<ULong64_t> : new vector<ULong64_t>;
   }
   static void *newArray_vectorlEULong64_tgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<ULong64_t>[nElements] : new vector<ULong64_t>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEULong64_tgR(void *p) {
      delete ((vector<ULong64_t>*)p);
   }
   static void deleteArray_vectorlEULong64_tgR(void *p) {
      delete [] ((vector<ULong64_t>*)p);
   }
   static void destruct_vectorlEULong64_tgR(void *p) {
      typedef vector<ULong64_t> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<ULong64_t>

namespace ROOTDict {
   void vectorlEunsignedsPlonggR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEunsignedsPlonggR_Dictionary();
   static void *new_vectorlEunsignedsPlonggR(void *p = 0);
   static void *newArray_vectorlEunsignedsPlonggR(Long_t size, void *p);
   static void delete_vectorlEunsignedsPlonggR(void *p);
   static void deleteArray_vectorlEunsignedsPlonggR(void *p);
   static void destruct_vectorlEunsignedsPlonggR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<unsigned long>*)
   {
      vector<unsigned long> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<unsigned long>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<unsigned long>", -2, "vector.dll", 0,
                  typeid(vector<unsigned long>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlEunsignedsPlonggR_Dictionary, isa_proxy, 0,
                  sizeof(vector<unsigned long>) );
      instance.SetNew(&new_vectorlEunsignedsPlonggR);
      instance.SetNewArray(&newArray_vectorlEunsignedsPlonggR);
      instance.SetDelete(&delete_vectorlEunsignedsPlonggR);
      instance.SetDeleteArray(&deleteArray_vectorlEunsignedsPlonggR);
      instance.SetDestructor(&destruct_vectorlEunsignedsPlonggR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<unsigned long> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<unsigned long>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEunsignedsPlonggR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<unsigned long>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlEunsignedsPlonggR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<unsigned long> : new vector<unsigned long>;
   }
   static void *newArray_vectorlEunsignedsPlonggR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<unsigned long>[nElements] : new vector<unsigned long>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEunsignedsPlonggR(void *p) {
      delete ((vector<unsigned long>*)p);
   }
   static void deleteArray_vectorlEunsignedsPlonggR(void *p) {
      delete [] ((vector<unsigned long>*)p);
   }
   static void destruct_vectorlEunsignedsPlonggR(void *p) {
      typedef vector<unsigned long> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<unsigned long>

namespace ROOTDict {
   void vectorlEunsignedsPshortgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEunsignedsPshortgR_Dictionary();
   static void *new_vectorlEunsignedsPshortgR(void *p = 0);
   static void *newArray_vectorlEunsignedsPshortgR(Long_t size, void *p);
   static void delete_vectorlEunsignedsPshortgR(void *p);
   static void deleteArray_vectorlEunsignedsPshortgR(void *p);
   static void destruct_vectorlEunsignedsPshortgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<unsigned short>*)
   {
      vector<unsigned short> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<unsigned short>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<unsigned short>", -2, "vector.dll", 0,
                  typeid(vector<unsigned short>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlEunsignedsPshortgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<unsigned short>) );
      instance.SetNew(&new_vectorlEunsignedsPshortgR);
      instance.SetNewArray(&newArray_vectorlEunsignedsPshortgR);
      instance.SetDelete(&delete_vectorlEunsignedsPshortgR);
      instance.SetDeleteArray(&deleteArray_vectorlEunsignedsPshortgR);
      instance.SetDestructor(&destruct_vectorlEunsignedsPshortgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<unsigned short> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<unsigned short>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEunsignedsPshortgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<unsigned short>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlEunsignedsPshortgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<unsigned short> : new vector<unsigned short>;
   }
   static void *newArray_vectorlEunsignedsPshortgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<unsigned short>[nElements] : new vector<unsigned short>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEunsignedsPshortgR(void *p) {
      delete ((vector<unsigned short>*)p);
   }
   static void deleteArray_vectorlEunsignedsPshortgR(void *p) {
      delete [] ((vector<unsigned short>*)p);
   }
   static void destruct_vectorlEunsignedsPshortgR(void *p) {
      typedef vector<unsigned short> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<unsigned short>

namespace ROOTDict {
   void vectorlEvectorlETStringgRsPgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEvectorlETStringgRsPgR_Dictionary();
   static void *new_vectorlEvectorlETStringgRsPgR(void *p = 0);
   static void *newArray_vectorlEvectorlETStringgRsPgR(Long_t size, void *p);
   static void delete_vectorlEvectorlETStringgRsPgR(void *p);
   static void deleteArray_vectorlEvectorlETStringgRsPgR(void *p);
   static void destruct_vectorlEvectorlETStringgRsPgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<vector<TString> >*)
   {
      vector<vector<TString> > *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<vector<TString> >),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<vector<TString> >", -2, "prec_stl/vector", 49,
                  typeid(vector<vector<TString> >), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlEvectorlETStringgRsPgR_Dictionary, isa_proxy, 4,
                  sizeof(vector<vector<TString> >) );
      instance.SetNew(&new_vectorlEvectorlETStringgRsPgR);
      instance.SetNewArray(&newArray_vectorlEvectorlETStringgRsPgR);
      instance.SetDelete(&delete_vectorlEvectorlETStringgRsPgR);
      instance.SetDeleteArray(&deleteArray_vectorlEvectorlETStringgRsPgR);
      instance.SetDestructor(&destruct_vectorlEvectorlETStringgRsPgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<vector<TString> > >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<vector<TString> >*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEvectorlETStringgRsPgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<vector<TString> >*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlEvectorlETStringgRsPgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<vector<TString> > : new vector<vector<TString> >;
   }
   static void *newArray_vectorlEvectorlETStringgRsPgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<vector<TString> >[nElements] : new vector<vector<TString> >[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEvectorlETStringgRsPgR(void *p) {
      delete ((vector<vector<TString> >*)p);
   }
   static void deleteArray_vectorlEvectorlETStringgRsPgR(void *p) {
      delete [] ((vector<vector<TString> >*)p);
   }
   static void destruct_vectorlEvectorlETStringgRsPgR(void *p) {
      typedef vector<vector<TString> > current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<vector<TString> >

namespace ROOTDict {
   void vectorlEvectorlEboolgRsPgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEvectorlEboolgRsPgR_Dictionary();
   static void *new_vectorlEvectorlEboolgRsPgR(void *p = 0);
   static void *newArray_vectorlEvectorlEboolgRsPgR(Long_t size, void *p);
   static void delete_vectorlEvectorlEboolgRsPgR(void *p);
   static void deleteArray_vectorlEvectorlEboolgRsPgR(void *p);
   static void destruct_vectorlEvectorlEboolgRsPgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<vector<bool> >*)
   {
      vector<vector<bool> > *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<vector<bool> >),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<vector<bool> >", -2, "prec_stl/vector", 49,
                  typeid(vector<vector<bool> >), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlEvectorlEboolgRsPgR_Dictionary, isa_proxy, 4,
                  sizeof(vector<vector<bool> >) );
      instance.SetNew(&new_vectorlEvectorlEboolgRsPgR);
      instance.SetNewArray(&newArray_vectorlEvectorlEboolgRsPgR);
      instance.SetDelete(&delete_vectorlEvectorlEboolgRsPgR);
      instance.SetDeleteArray(&deleteArray_vectorlEvectorlEboolgRsPgR);
      instance.SetDestructor(&destruct_vectorlEvectorlEboolgRsPgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<vector<bool> > >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<vector<bool> >*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEvectorlEboolgRsPgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<vector<bool> >*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlEvectorlEboolgRsPgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<vector<bool> > : new vector<vector<bool> >;
   }
   static void *newArray_vectorlEvectorlEboolgRsPgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<vector<bool> >[nElements] : new vector<vector<bool> >[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEvectorlEboolgRsPgR(void *p) {
      delete ((vector<vector<bool> >*)p);
   }
   static void deleteArray_vectorlEvectorlEboolgRsPgR(void *p) {
      delete [] ((vector<vector<bool> >*)p);
   }
   static void destruct_vectorlEvectorlEboolgRsPgR(void *p) {
      typedef vector<vector<bool> > current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<vector<bool> >

namespace ROOTDict {
   void vectorlEvectorlEcharmUgRsPgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEvectorlEcharmUgRsPgR_Dictionary();
   static void *new_vectorlEvectorlEcharmUgRsPgR(void *p = 0);
   static void *newArray_vectorlEvectorlEcharmUgRsPgR(Long_t size, void *p);
   static void delete_vectorlEvectorlEcharmUgRsPgR(void *p);
   static void deleteArray_vectorlEvectorlEcharmUgRsPgR(void *p);
   static void destruct_vectorlEvectorlEcharmUgRsPgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<vector<char*> >*)
   {
      vector<vector<char*> > *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<vector<char*> >),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<vector<char*> >", -2, "prec_stl/vector", 49,
                  typeid(vector<vector<char*> >), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlEvectorlEcharmUgRsPgR_Dictionary, isa_proxy, 4,
                  sizeof(vector<vector<char*> >) );
      instance.SetNew(&new_vectorlEvectorlEcharmUgRsPgR);
      instance.SetNewArray(&newArray_vectorlEvectorlEcharmUgRsPgR);
      instance.SetDelete(&delete_vectorlEvectorlEcharmUgRsPgR);
      instance.SetDeleteArray(&deleteArray_vectorlEvectorlEcharmUgRsPgR);
      instance.SetDestructor(&destruct_vectorlEvectorlEcharmUgRsPgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<vector<char*> > >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<vector<char*> >*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEvectorlEcharmUgRsPgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<vector<char*> >*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlEvectorlEcharmUgRsPgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<vector<char*> > : new vector<vector<char*> >;
   }
   static void *newArray_vectorlEvectorlEcharmUgRsPgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<vector<char*> >[nElements] : new vector<vector<char*> >[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEvectorlEcharmUgRsPgR(void *p) {
      delete ((vector<vector<char*> >*)p);
   }
   static void deleteArray_vectorlEvectorlEcharmUgRsPgR(void *p) {
      delete [] ((vector<vector<char*> >*)p);
   }
   static void destruct_vectorlEvectorlEcharmUgRsPgR(void *p) {
      typedef vector<vector<char*> > current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<vector<char*> >

namespace ROOTDict {
   void vectorlEvectorlEchargRsPgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEvectorlEchargRsPgR_Dictionary();
   static void *new_vectorlEvectorlEchargRsPgR(void *p = 0);
   static void *newArray_vectorlEvectorlEchargRsPgR(Long_t size, void *p);
   static void delete_vectorlEvectorlEchargRsPgR(void *p);
   static void deleteArray_vectorlEvectorlEchargRsPgR(void *p);
   static void destruct_vectorlEvectorlEchargRsPgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<vector<char> >*)
   {
      vector<vector<char> > *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<vector<char> >),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<vector<char> >", -2, "prec_stl/vector", 49,
                  typeid(vector<vector<char> >), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlEvectorlEchargRsPgR_Dictionary, isa_proxy, 4,
                  sizeof(vector<vector<char> >) );
      instance.SetNew(&new_vectorlEvectorlEchargRsPgR);
      instance.SetNewArray(&newArray_vectorlEvectorlEchargRsPgR);
      instance.SetDelete(&delete_vectorlEvectorlEchargRsPgR);
      instance.SetDeleteArray(&deleteArray_vectorlEvectorlEchargRsPgR);
      instance.SetDestructor(&destruct_vectorlEvectorlEchargRsPgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<vector<char> > >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<vector<char> >*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEvectorlEchargRsPgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<vector<char> >*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlEvectorlEchargRsPgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<vector<char> > : new vector<vector<char> >;
   }
   static void *newArray_vectorlEvectorlEchargRsPgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<vector<char> >[nElements] : new vector<vector<char> >[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEvectorlEchargRsPgR(void *p) {
      delete ((vector<vector<char> >*)p);
   }
   static void deleteArray_vectorlEvectorlEchargRsPgR(void *p) {
      delete [] ((vector<vector<char> >*)p);
   }
   static void destruct_vectorlEvectorlEchargRsPgR(void *p) {
      typedef vector<vector<char> > current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<vector<char> >

namespace ROOTDict {
   void vectorlEvectorlEconstsPcharmUgRsPgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEvectorlEconstsPcharmUgRsPgR_Dictionary();
   static void *new_vectorlEvectorlEconstsPcharmUgRsPgR(void *p = 0);
   static void *newArray_vectorlEvectorlEconstsPcharmUgRsPgR(Long_t size, void *p);
   static void delete_vectorlEvectorlEconstsPcharmUgRsPgR(void *p);
   static void deleteArray_vectorlEvectorlEconstsPcharmUgRsPgR(void *p);
   static void destruct_vectorlEvectorlEconstsPcharmUgRsPgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<vector<const char*> >*)
   {
      vector<vector<const char*> > *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<vector<const char*> >),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<vector<const char*> >", -2, "prec_stl/vector", 49,
                  typeid(vector<vector<const char*> >), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlEvectorlEconstsPcharmUgRsPgR_Dictionary, isa_proxy, 4,
                  sizeof(vector<vector<const char*> >) );
      instance.SetNew(&new_vectorlEvectorlEconstsPcharmUgRsPgR);
      instance.SetNewArray(&newArray_vectorlEvectorlEconstsPcharmUgRsPgR);
      instance.SetDelete(&delete_vectorlEvectorlEconstsPcharmUgRsPgR);
      instance.SetDeleteArray(&deleteArray_vectorlEvectorlEconstsPcharmUgRsPgR);
      instance.SetDestructor(&destruct_vectorlEvectorlEconstsPcharmUgRsPgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<vector<const char*> > >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<vector<const char*> >*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEvectorlEconstsPcharmUgRsPgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<vector<const char*> >*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlEvectorlEconstsPcharmUgRsPgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<vector<const char*> > : new vector<vector<const char*> >;
   }
   static void *newArray_vectorlEvectorlEconstsPcharmUgRsPgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<vector<const char*> >[nElements] : new vector<vector<const char*> >[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEvectorlEconstsPcharmUgRsPgR(void *p) {
      delete ((vector<vector<const char*> >*)p);
   }
   static void deleteArray_vectorlEvectorlEconstsPcharmUgRsPgR(void *p) {
      delete [] ((vector<vector<const char*> >*)p);
   }
   static void destruct_vectorlEvectorlEconstsPcharmUgRsPgR(void *p) {
      typedef vector<vector<const char*> > current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<vector<const char*> >

namespace ROOTDict {
   void vectorlEvectorlEdoublegRsPgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEvectorlEdoublegRsPgR_Dictionary();
   static void *new_vectorlEvectorlEdoublegRsPgR(void *p = 0);
   static void *newArray_vectorlEvectorlEdoublegRsPgR(Long_t size, void *p);
   static void delete_vectorlEvectorlEdoublegRsPgR(void *p);
   static void deleteArray_vectorlEvectorlEdoublegRsPgR(void *p);
   static void destruct_vectorlEvectorlEdoublegRsPgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<vector<double> >*)
   {
      vector<vector<double> > *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<vector<double> >),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<vector<double> >", -2, "prec_stl/vector", 49,
                  typeid(vector<vector<double> >), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlEvectorlEdoublegRsPgR_Dictionary, isa_proxy, 4,
                  sizeof(vector<vector<double> >) );
      instance.SetNew(&new_vectorlEvectorlEdoublegRsPgR);
      instance.SetNewArray(&newArray_vectorlEvectorlEdoublegRsPgR);
      instance.SetDelete(&delete_vectorlEvectorlEdoublegRsPgR);
      instance.SetDeleteArray(&deleteArray_vectorlEvectorlEdoublegRsPgR);
      instance.SetDestructor(&destruct_vectorlEvectorlEdoublegRsPgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<vector<double> > >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<vector<double> >*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEvectorlEdoublegRsPgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<vector<double> >*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlEvectorlEdoublegRsPgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<vector<double> > : new vector<vector<double> >;
   }
   static void *newArray_vectorlEvectorlEdoublegRsPgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<vector<double> >[nElements] : new vector<vector<double> >[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEvectorlEdoublegRsPgR(void *p) {
      delete ((vector<vector<double> >*)p);
   }
   static void deleteArray_vectorlEvectorlEdoublegRsPgR(void *p) {
      delete [] ((vector<vector<double> >*)p);
   }
   static void destruct_vectorlEvectorlEdoublegRsPgR(void *p) {
      typedef vector<vector<double> > current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<vector<double> >

namespace ROOTDict {
   void vectorlEvectorlEfloatgRsPgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEvectorlEfloatgRsPgR_Dictionary();
   static void *new_vectorlEvectorlEfloatgRsPgR(void *p = 0);
   static void *newArray_vectorlEvectorlEfloatgRsPgR(Long_t size, void *p);
   static void delete_vectorlEvectorlEfloatgRsPgR(void *p);
   static void deleteArray_vectorlEvectorlEfloatgRsPgR(void *p);
   static void destruct_vectorlEvectorlEfloatgRsPgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<vector<float> >*)
   {
      vector<vector<float> > *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<vector<float> >),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<vector<float> >", -2, "prec_stl/vector", 49,
                  typeid(vector<vector<float> >), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlEvectorlEfloatgRsPgR_Dictionary, isa_proxy, 4,
                  sizeof(vector<vector<float> >) );
      instance.SetNew(&new_vectorlEvectorlEfloatgRsPgR);
      instance.SetNewArray(&newArray_vectorlEvectorlEfloatgRsPgR);
      instance.SetDelete(&delete_vectorlEvectorlEfloatgRsPgR);
      instance.SetDeleteArray(&deleteArray_vectorlEvectorlEfloatgRsPgR);
      instance.SetDestructor(&destruct_vectorlEvectorlEfloatgRsPgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<vector<float> > >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<vector<float> >*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEvectorlEfloatgRsPgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<vector<float> >*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlEvectorlEfloatgRsPgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<vector<float> > : new vector<vector<float> >;
   }
   static void *newArray_vectorlEvectorlEfloatgRsPgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<vector<float> >[nElements] : new vector<vector<float> >[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEvectorlEfloatgRsPgR(void *p) {
      delete ((vector<vector<float> >*)p);
   }
   static void deleteArray_vectorlEvectorlEfloatgRsPgR(void *p) {
      delete [] ((vector<vector<float> >*)p);
   }
   static void destruct_vectorlEvectorlEfloatgRsPgR(void *p) {
      typedef vector<vector<float> > current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<vector<float> >

namespace ROOTDict {
   void vectorlEvectorlEintgRsPgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEvectorlEintgRsPgR_Dictionary();
   static void *new_vectorlEvectorlEintgRsPgR(void *p = 0);
   static void *newArray_vectorlEvectorlEintgRsPgR(Long_t size, void *p);
   static void delete_vectorlEvectorlEintgRsPgR(void *p);
   static void deleteArray_vectorlEvectorlEintgRsPgR(void *p);
   static void destruct_vectorlEvectorlEintgRsPgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<vector<int> >*)
   {
      vector<vector<int> > *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<vector<int> >),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<vector<int> >", -2, "prec_stl/vector", 49,
                  typeid(vector<vector<int> >), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlEvectorlEintgRsPgR_Dictionary, isa_proxy, 4,
                  sizeof(vector<vector<int> >) );
      instance.SetNew(&new_vectorlEvectorlEintgRsPgR);
      instance.SetNewArray(&newArray_vectorlEvectorlEintgRsPgR);
      instance.SetDelete(&delete_vectorlEvectorlEintgRsPgR);
      instance.SetDeleteArray(&deleteArray_vectorlEvectorlEintgRsPgR);
      instance.SetDestructor(&destruct_vectorlEvectorlEintgRsPgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<vector<int> > >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<vector<int> >*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEvectorlEintgRsPgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<vector<int> >*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlEvectorlEintgRsPgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<vector<int> > : new vector<vector<int> >;
   }
   static void *newArray_vectorlEvectorlEintgRsPgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<vector<int> >[nElements] : new vector<vector<int> >[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEvectorlEintgRsPgR(void *p) {
      delete ((vector<vector<int> >*)p);
   }
   static void deleteArray_vectorlEvectorlEintgRsPgR(void *p) {
      delete [] ((vector<vector<int> >*)p);
   }
   static void destruct_vectorlEvectorlEintgRsPgR(void *p) {
      typedef vector<vector<int> > current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<vector<int> >

namespace ROOTDict {
   void vectorlEvectorlELong64_tgRsPgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEvectorlELong64_tgRsPgR_Dictionary();
   static void *new_vectorlEvectorlELong64_tgRsPgR(void *p = 0);
   static void *newArray_vectorlEvectorlELong64_tgRsPgR(Long_t size, void *p);
   static void delete_vectorlEvectorlELong64_tgRsPgR(void *p);
   static void deleteArray_vectorlEvectorlELong64_tgRsPgR(void *p);
   static void destruct_vectorlEvectorlELong64_tgRsPgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<vector<Long64_t> >*)
   {
      vector<vector<Long64_t> > *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<vector<Long64_t> >),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<vector<Long64_t> >", -2, "prec_stl/vector", 49,
                  typeid(vector<vector<Long64_t> >), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlEvectorlELong64_tgRsPgR_Dictionary, isa_proxy, 4,
                  sizeof(vector<vector<Long64_t> >) );
      instance.SetNew(&new_vectorlEvectorlELong64_tgRsPgR);
      instance.SetNewArray(&newArray_vectorlEvectorlELong64_tgRsPgR);
      instance.SetDelete(&delete_vectorlEvectorlELong64_tgRsPgR);
      instance.SetDeleteArray(&deleteArray_vectorlEvectorlELong64_tgRsPgR);
      instance.SetDestructor(&destruct_vectorlEvectorlELong64_tgRsPgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<vector<Long64_t> > >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<vector<Long64_t> >*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEvectorlELong64_tgRsPgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<vector<Long64_t> >*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlEvectorlELong64_tgRsPgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<vector<Long64_t> > : new vector<vector<Long64_t> >;
   }
   static void *newArray_vectorlEvectorlELong64_tgRsPgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<vector<Long64_t> >[nElements] : new vector<vector<Long64_t> >[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEvectorlELong64_tgRsPgR(void *p) {
      delete ((vector<vector<Long64_t> >*)p);
   }
   static void deleteArray_vectorlEvectorlELong64_tgRsPgR(void *p) {
      delete [] ((vector<vector<Long64_t> >*)p);
   }
   static void destruct_vectorlEvectorlELong64_tgRsPgR(void *p) {
      typedef vector<vector<Long64_t> > current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<vector<Long64_t> >

namespace ROOTDict {
   void vectorlEvectorlElonggRsPgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEvectorlElonggRsPgR_Dictionary();
   static void *new_vectorlEvectorlElonggRsPgR(void *p = 0);
   static void *newArray_vectorlEvectorlElonggRsPgR(Long_t size, void *p);
   static void delete_vectorlEvectorlElonggRsPgR(void *p);
   static void deleteArray_vectorlEvectorlElonggRsPgR(void *p);
   static void destruct_vectorlEvectorlElonggRsPgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<vector<long> >*)
   {
      vector<vector<long> > *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<vector<long> >),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<vector<long> >", -2, "prec_stl/vector", 49,
                  typeid(vector<vector<long> >), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlEvectorlElonggRsPgR_Dictionary, isa_proxy, 4,
                  sizeof(vector<vector<long> >) );
      instance.SetNew(&new_vectorlEvectorlElonggRsPgR);
      instance.SetNewArray(&newArray_vectorlEvectorlElonggRsPgR);
      instance.SetDelete(&delete_vectorlEvectorlElonggRsPgR);
      instance.SetDeleteArray(&deleteArray_vectorlEvectorlElonggRsPgR);
      instance.SetDestructor(&destruct_vectorlEvectorlElonggRsPgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<vector<long> > >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<vector<long> >*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEvectorlElonggRsPgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<vector<long> >*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlEvectorlElonggRsPgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<vector<long> > : new vector<vector<long> >;
   }
   static void *newArray_vectorlEvectorlElonggRsPgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<vector<long> >[nElements] : new vector<vector<long> >[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEvectorlElonggRsPgR(void *p) {
      delete ((vector<vector<long> >*)p);
   }
   static void deleteArray_vectorlEvectorlElonggRsPgR(void *p) {
      delete [] ((vector<vector<long> >*)p);
   }
   static void destruct_vectorlEvectorlElonggRsPgR(void *p) {
      typedef vector<vector<long> > current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<vector<long> >

namespace ROOTDict {
   void vectorlEvectorlEshortgRsPgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEvectorlEshortgRsPgR_Dictionary();
   static void *new_vectorlEvectorlEshortgRsPgR(void *p = 0);
   static void *newArray_vectorlEvectorlEshortgRsPgR(Long_t size, void *p);
   static void delete_vectorlEvectorlEshortgRsPgR(void *p);
   static void deleteArray_vectorlEvectorlEshortgRsPgR(void *p);
   static void destruct_vectorlEvectorlEshortgRsPgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<vector<short> >*)
   {
      vector<vector<short> > *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<vector<short> >),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<vector<short> >", -2, "prec_stl/vector", 49,
                  typeid(vector<vector<short> >), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlEvectorlEshortgRsPgR_Dictionary, isa_proxy, 4,
                  sizeof(vector<vector<short> >) );
      instance.SetNew(&new_vectorlEvectorlEshortgRsPgR);
      instance.SetNewArray(&newArray_vectorlEvectorlEshortgRsPgR);
      instance.SetDelete(&delete_vectorlEvectorlEshortgRsPgR);
      instance.SetDeleteArray(&deleteArray_vectorlEvectorlEshortgRsPgR);
      instance.SetDestructor(&destruct_vectorlEvectorlEshortgRsPgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<vector<short> > >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<vector<short> >*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEvectorlEshortgRsPgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<vector<short> >*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlEvectorlEshortgRsPgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<vector<short> > : new vector<vector<short> >;
   }
   static void *newArray_vectorlEvectorlEshortgRsPgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<vector<short> >[nElements] : new vector<vector<short> >[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEvectorlEshortgRsPgR(void *p) {
      delete ((vector<vector<short> >*)p);
   }
   static void deleteArray_vectorlEvectorlEshortgRsPgR(void *p) {
      delete [] ((vector<vector<short> >*)p);
   }
   static void destruct_vectorlEvectorlEshortgRsPgR(void *p) {
      typedef vector<vector<short> > current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<vector<short> >

namespace ROOTDict {
   void vectorlEvectorlEunsignedsPchargRsPgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEvectorlEunsignedsPchargRsPgR_Dictionary();
   static void *new_vectorlEvectorlEunsignedsPchargRsPgR(void *p = 0);
   static void *newArray_vectorlEvectorlEunsignedsPchargRsPgR(Long_t size, void *p);
   static void delete_vectorlEvectorlEunsignedsPchargRsPgR(void *p);
   static void deleteArray_vectorlEvectorlEunsignedsPchargRsPgR(void *p);
   static void destruct_vectorlEvectorlEunsignedsPchargRsPgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<vector<unsigned char> >*)
   {
      vector<vector<unsigned char> > *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<vector<unsigned char> >),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<vector<unsigned char> >", -2, "prec_stl/vector", 49,
                  typeid(vector<vector<unsigned char> >), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlEvectorlEunsignedsPchargRsPgR_Dictionary, isa_proxy, 4,
                  sizeof(vector<vector<unsigned char> >) );
      instance.SetNew(&new_vectorlEvectorlEunsignedsPchargRsPgR);
      instance.SetNewArray(&newArray_vectorlEvectorlEunsignedsPchargRsPgR);
      instance.SetDelete(&delete_vectorlEvectorlEunsignedsPchargRsPgR);
      instance.SetDeleteArray(&deleteArray_vectorlEvectorlEunsignedsPchargRsPgR);
      instance.SetDestructor(&destruct_vectorlEvectorlEunsignedsPchargRsPgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<vector<unsigned char> > >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<vector<unsigned char> >*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEvectorlEunsignedsPchargRsPgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<vector<unsigned char> >*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlEvectorlEunsignedsPchargRsPgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<vector<unsigned char> > : new vector<vector<unsigned char> >;
   }
   static void *newArray_vectorlEvectorlEunsignedsPchargRsPgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<vector<unsigned char> >[nElements] : new vector<vector<unsigned char> >[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEvectorlEunsignedsPchargRsPgR(void *p) {
      delete ((vector<vector<unsigned char> >*)p);
   }
   static void deleteArray_vectorlEvectorlEunsignedsPchargRsPgR(void *p) {
      delete [] ((vector<vector<unsigned char> >*)p);
   }
   static void destruct_vectorlEvectorlEunsignedsPchargRsPgR(void *p) {
      typedef vector<vector<unsigned char> > current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<vector<unsigned char> >

namespace ROOTDict {
   void vectorlEvectorlEunsignedsPintgRsPgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEvectorlEunsignedsPintgRsPgR_Dictionary();
   static void *new_vectorlEvectorlEunsignedsPintgRsPgR(void *p = 0);
   static void *newArray_vectorlEvectorlEunsignedsPintgRsPgR(Long_t size, void *p);
   static void delete_vectorlEvectorlEunsignedsPintgRsPgR(void *p);
   static void deleteArray_vectorlEvectorlEunsignedsPintgRsPgR(void *p);
   static void destruct_vectorlEvectorlEunsignedsPintgRsPgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<vector<unsigned int> >*)
   {
      vector<vector<unsigned int> > *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<vector<unsigned int> >),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<vector<unsigned int> >", -2, "prec_stl/vector", 49,
                  typeid(vector<vector<unsigned int> >), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlEvectorlEunsignedsPintgRsPgR_Dictionary, isa_proxy, 4,
                  sizeof(vector<vector<unsigned int> >) );
      instance.SetNew(&new_vectorlEvectorlEunsignedsPintgRsPgR);
      instance.SetNewArray(&newArray_vectorlEvectorlEunsignedsPintgRsPgR);
      instance.SetDelete(&delete_vectorlEvectorlEunsignedsPintgRsPgR);
      instance.SetDeleteArray(&deleteArray_vectorlEvectorlEunsignedsPintgRsPgR);
      instance.SetDestructor(&destruct_vectorlEvectorlEunsignedsPintgRsPgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<vector<unsigned int> > >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<vector<unsigned int> >*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEvectorlEunsignedsPintgRsPgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<vector<unsigned int> >*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlEvectorlEunsignedsPintgRsPgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<vector<unsigned int> > : new vector<vector<unsigned int> >;
   }
   static void *newArray_vectorlEvectorlEunsignedsPintgRsPgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<vector<unsigned int> >[nElements] : new vector<vector<unsigned int> >[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEvectorlEunsignedsPintgRsPgR(void *p) {
      delete ((vector<vector<unsigned int> >*)p);
   }
   static void deleteArray_vectorlEvectorlEunsignedsPintgRsPgR(void *p) {
      delete [] ((vector<vector<unsigned int> >*)p);
   }
   static void destruct_vectorlEvectorlEunsignedsPintgRsPgR(void *p) {
      typedef vector<vector<unsigned int> > current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<vector<unsigned int> >

namespace ROOTDict {
   void vectorlEvectorlEULong64_tgRsPgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEvectorlEULong64_tgRsPgR_Dictionary();
   static void *new_vectorlEvectorlEULong64_tgRsPgR(void *p = 0);
   static void *newArray_vectorlEvectorlEULong64_tgRsPgR(Long_t size, void *p);
   static void delete_vectorlEvectorlEULong64_tgRsPgR(void *p);
   static void deleteArray_vectorlEvectorlEULong64_tgRsPgR(void *p);
   static void destruct_vectorlEvectorlEULong64_tgRsPgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<vector<ULong64_t> >*)
   {
      vector<vector<ULong64_t> > *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<vector<ULong64_t> >),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<vector<ULong64_t> >", -2, "prec_stl/vector", 49,
                  typeid(vector<vector<ULong64_t> >), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlEvectorlEULong64_tgRsPgR_Dictionary, isa_proxy, 4,
                  sizeof(vector<vector<ULong64_t> >) );
      instance.SetNew(&new_vectorlEvectorlEULong64_tgRsPgR);
      instance.SetNewArray(&newArray_vectorlEvectorlEULong64_tgRsPgR);
      instance.SetDelete(&delete_vectorlEvectorlEULong64_tgRsPgR);
      instance.SetDeleteArray(&deleteArray_vectorlEvectorlEULong64_tgRsPgR);
      instance.SetDestructor(&destruct_vectorlEvectorlEULong64_tgRsPgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<vector<ULong64_t> > >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<vector<ULong64_t> >*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEvectorlEULong64_tgRsPgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<vector<ULong64_t> >*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlEvectorlEULong64_tgRsPgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<vector<ULong64_t> > : new vector<vector<ULong64_t> >;
   }
   static void *newArray_vectorlEvectorlEULong64_tgRsPgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<vector<ULong64_t> >[nElements] : new vector<vector<ULong64_t> >[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEvectorlEULong64_tgRsPgR(void *p) {
      delete ((vector<vector<ULong64_t> >*)p);
   }
   static void deleteArray_vectorlEvectorlEULong64_tgRsPgR(void *p) {
      delete [] ((vector<vector<ULong64_t> >*)p);
   }
   static void destruct_vectorlEvectorlEULong64_tgRsPgR(void *p) {
      typedef vector<vector<ULong64_t> > current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<vector<ULong64_t> >

namespace ROOTDict {
   void vectorlEvectorlEunsignedsPlonggRsPgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEvectorlEunsignedsPlonggRsPgR_Dictionary();
   static void *new_vectorlEvectorlEunsignedsPlonggRsPgR(void *p = 0);
   static void *newArray_vectorlEvectorlEunsignedsPlonggRsPgR(Long_t size, void *p);
   static void delete_vectorlEvectorlEunsignedsPlonggRsPgR(void *p);
   static void deleteArray_vectorlEvectorlEunsignedsPlonggRsPgR(void *p);
   static void destruct_vectorlEvectorlEunsignedsPlonggRsPgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<vector<unsigned long> >*)
   {
      vector<vector<unsigned long> > *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<vector<unsigned long> >),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<vector<unsigned long> >", -2, "prec_stl/vector", 49,
                  typeid(vector<vector<unsigned long> >), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlEvectorlEunsignedsPlonggRsPgR_Dictionary, isa_proxy, 4,
                  sizeof(vector<vector<unsigned long> >) );
      instance.SetNew(&new_vectorlEvectorlEunsignedsPlonggRsPgR);
      instance.SetNewArray(&newArray_vectorlEvectorlEunsignedsPlonggRsPgR);
      instance.SetDelete(&delete_vectorlEvectorlEunsignedsPlonggRsPgR);
      instance.SetDeleteArray(&deleteArray_vectorlEvectorlEunsignedsPlonggRsPgR);
      instance.SetDestructor(&destruct_vectorlEvectorlEunsignedsPlonggRsPgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<vector<unsigned long> > >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<vector<unsigned long> >*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEvectorlEunsignedsPlonggRsPgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<vector<unsigned long> >*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlEvectorlEunsignedsPlonggRsPgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<vector<unsigned long> > : new vector<vector<unsigned long> >;
   }
   static void *newArray_vectorlEvectorlEunsignedsPlonggRsPgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<vector<unsigned long> >[nElements] : new vector<vector<unsigned long> >[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEvectorlEunsignedsPlonggRsPgR(void *p) {
      delete ((vector<vector<unsigned long> >*)p);
   }
   static void deleteArray_vectorlEvectorlEunsignedsPlonggRsPgR(void *p) {
      delete [] ((vector<vector<unsigned long> >*)p);
   }
   static void destruct_vectorlEvectorlEunsignedsPlonggRsPgR(void *p) {
      typedef vector<vector<unsigned long> > current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<vector<unsigned long> >

namespace ROOTDict {
   void vectorlEvectorlEunsignedsPshortgRsPgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEvectorlEunsignedsPshortgRsPgR_Dictionary();
   static void *new_vectorlEvectorlEunsignedsPshortgRsPgR(void *p = 0);
   static void *newArray_vectorlEvectorlEunsignedsPshortgRsPgR(Long_t size, void *p);
   static void delete_vectorlEvectorlEunsignedsPshortgRsPgR(void *p);
   static void deleteArray_vectorlEvectorlEunsignedsPshortgRsPgR(void *p);
   static void destruct_vectorlEvectorlEunsignedsPshortgRsPgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<vector<unsigned short> >*)
   {
      vector<vector<unsigned short> > *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<vector<unsigned short> >),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<vector<unsigned short> >", -2, "prec_stl/vector", 49,
                  typeid(vector<vector<unsigned short> >), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlEvectorlEunsignedsPshortgRsPgR_Dictionary, isa_proxy, 4,
                  sizeof(vector<vector<unsigned short> >) );
      instance.SetNew(&new_vectorlEvectorlEunsignedsPshortgRsPgR);
      instance.SetNewArray(&newArray_vectorlEvectorlEunsignedsPshortgRsPgR);
      instance.SetDelete(&delete_vectorlEvectorlEunsignedsPshortgRsPgR);
      instance.SetDeleteArray(&deleteArray_vectorlEvectorlEunsignedsPshortgRsPgR);
      instance.SetDestructor(&destruct_vectorlEvectorlEunsignedsPshortgRsPgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<vector<unsigned short> > >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<vector<unsigned short> >*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEvectorlEunsignedsPshortgRsPgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<vector<unsigned short> >*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlEvectorlEunsignedsPshortgRsPgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<vector<unsigned short> > : new vector<vector<unsigned short> >;
   }
   static void *newArray_vectorlEvectorlEunsignedsPshortgRsPgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<vector<unsigned short> >[nElements] : new vector<vector<unsigned short> >[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEvectorlEunsignedsPshortgRsPgR(void *p) {
      delete ((vector<vector<unsigned short> >*)p);
   }
   static void deleteArray_vectorlEvectorlEunsignedsPshortgRsPgR(void *p) {
      delete [] ((vector<vector<unsigned short> >*)p);
   }
   static void destruct_vectorlEvectorlEunsignedsPshortgRsPgR(void *p) {
      typedef vector<vector<unsigned short> > current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<vector<unsigned short> >

namespace ROOTDict {
   void vectorlEvectorlEvoidmUgRsPgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEvectorlEvoidmUgRsPgR_Dictionary();
   static void *new_vectorlEvectorlEvoidmUgRsPgR(void *p = 0);
   static void *newArray_vectorlEvectorlEvoidmUgRsPgR(Long_t size, void *p);
   static void delete_vectorlEvectorlEvoidmUgRsPgR(void *p);
   static void deleteArray_vectorlEvectorlEvoidmUgRsPgR(void *p);
   static void destruct_vectorlEvectorlEvoidmUgRsPgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<vector<void*> >*)
   {
      vector<vector<void*> > *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<vector<void*> >),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<vector<void*> >", -2, "prec_stl/vector", 49,
                  typeid(vector<vector<void*> >), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlEvectorlEvoidmUgRsPgR_Dictionary, isa_proxy, 4,
                  sizeof(vector<vector<void*> >) );
      instance.SetNew(&new_vectorlEvectorlEvoidmUgRsPgR);
      instance.SetNewArray(&newArray_vectorlEvectorlEvoidmUgRsPgR);
      instance.SetDelete(&delete_vectorlEvectorlEvoidmUgRsPgR);
      instance.SetDeleteArray(&deleteArray_vectorlEvectorlEvoidmUgRsPgR);
      instance.SetDestructor(&destruct_vectorlEvectorlEvoidmUgRsPgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<vector<void*> > >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<vector<void*> >*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEvectorlEvoidmUgRsPgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<vector<void*> >*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlEvectorlEvoidmUgRsPgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<vector<void*> > : new vector<vector<void*> >;
   }
   static void *newArray_vectorlEvectorlEvoidmUgRsPgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<vector<void*> >[nElements] : new vector<vector<void*> >[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEvectorlEvoidmUgRsPgR(void *p) {
      delete ((vector<vector<void*> >*)p);
   }
   static void deleteArray_vectorlEvectorlEvoidmUgRsPgR(void *p) {
      delete [] ((vector<vector<void*> >*)p);
   }
   static void destruct_vectorlEvectorlEvoidmUgRsPgR(void *p) {
      typedef vector<vector<void*> > current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<vector<void*> >

namespace ROOTDict {
   void vectorlEvoidmUgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEvoidmUgR_Dictionary();
   static void *new_vectorlEvoidmUgR(void *p = 0);
   static void *newArray_vectorlEvoidmUgR(Long_t size, void *p);
   static void delete_vectorlEvoidmUgR(void *p);
   static void deleteArray_vectorlEvoidmUgR(void *p);
   static void destruct_vectorlEvoidmUgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<void*>*)
   {
      vector<void*> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<void*>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<void*>", -2, "vector.dll", 0,
                  typeid(vector<void*>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlEvoidmUgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<void*>) );
      instance.SetNew(&new_vectorlEvoidmUgR);
      instance.SetNewArray(&newArray_vectorlEvoidmUgR);
      instance.SetDelete(&delete_vectorlEvoidmUgR);
      instance.SetDeleteArray(&deleteArray_vectorlEvoidmUgR);
      instance.SetDestructor(&destruct_vectorlEvoidmUgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<void*> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<void*>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEvoidmUgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<void*>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlEvoidmUgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<void*> : new vector<void*>;
   }
   static void *newArray_vectorlEvoidmUgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<void*>[nElements] : new vector<void*>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEvoidmUgR(void *p) {
      delete ((vector<void*>*)p);
   }
   static void deleteArray_vectorlEvoidmUgR(void *p) {
      delete [] ((vector<void*>*)p);
   }
   static void destruct_vectorlEvoidmUgR(void *p) {
      typedef vector<void*> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<void*>

/********************************************************
* Dict.cc
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableDict();

extern "C" void G__set_cpp_environmentDict() {
  G__add_compiledheader("TObject.h");
  G__add_compiledheader("TMemberInspector.h");
  G__cpp_reset_tagtableDict();
}
#include <new>
extern "C" int G__cpp_dllrevDict() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > > */
static int G__Dict_173_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >::reference obj = ((vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >*) G__getstructoffset())->at((vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_173_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >::const_reference obj = ((const vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >*) G__getstructoffset())->at((vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_173_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >::iterator* pobj;
         vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >::iterator xobj = ((vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >*) G__getstructoffset())->begin();
         pobj = new vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_173_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >::iterator* pobj;
         vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >::iterator xobj = ((vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >*) G__getstructoffset())->end();
         pobj = new vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_173_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >::reverse_iterator* pobj;
         vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >::reverse_iterator xobj = ((vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >*) G__getstructoffset())->rbegin();
         pobj = new vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_173_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >::reverse_iterator* pobj;
         vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >::reverse_iterator xobj = ((vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >*) G__getstructoffset())->rend();
         pobj = new vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_173_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >*) G__getstructoffset())->size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_173_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >*) G__getstructoffset())->max_size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_173_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >*) G__getstructoffset())->resize((vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_173_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >*) G__getstructoffset())->resize((vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >::size_type) G__int(libp->para[0]), *((vector<int,allocator<int> >*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_173_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >*) G__getstructoffset())->capacity());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_173_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >*) G__getstructoffset())->empty());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_173_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >::reference obj = ((vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >*) G__getstructoffset())->operator[]((vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_173_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >::const_reference obj = ((const vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >*) G__getstructoffset())->operator[]((vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_173_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >[n];
     } else {
       p = new((void*) gvp) vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >;
     } else {
       p = new((void*) gvp) vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_173_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >((vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >::size_type) G__int(libp->para[0]), *(vector<int,allocator<int> >*) libp->para[1].ref);
     } else {
       p = new((void*) gvp) vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >((vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >::size_type) G__int(libp->para[0]), *(vector<int,allocator<int> >*) libp->para[1].ref);
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >((vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >::size_type) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >((vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >::size_type) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_173_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >(*(vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >(*(vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_173_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >(*((vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >::const_iterator*) G__int(libp->para[0])), *((vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >::const_iterator*) G__int(libp->para[1])));
   } else {
     p = new((void*) gvp) vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >(*((vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >::const_iterator*) G__int(libp->para[0])), *((vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >::const_iterator*) G__int(libp->para[1])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_173_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >& obj = ((vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >*) G__getstructoffset())->operator=(*(vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_173_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >*) G__getstructoffset())->reserve((vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_173_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<int,allocator<int> >& obj = ((vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >*) G__getstructoffset())->front();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_173_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<int,allocator<int> >& obj = ((vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >*) G__getstructoffset())->back();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_173_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >*) G__getstructoffset())->push_back(*(vector<int,allocator<int> >*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_173_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >*) G__getstructoffset())->swap(*(vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_173_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >::iterator* pobj;
         vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >::iterator xobj = ((vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >*) G__getstructoffset())->insert(*((vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >::iterator*) G__int(libp->para[0])), *(vector<int,allocator<int> >*) libp->para[1].ref);
         pobj = new vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_173_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >*) G__getstructoffset())->insert(*((vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >::iterator*) G__int(libp->para[0])), *((vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >::const_iterator*) G__int(libp->para[1]))
, *((vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >::const_iterator*) G__int(libp->para[2])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_173_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >*) G__getstructoffset())->insert(*((vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >::iterator*) G__int(libp->para[0])), (vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >::size_type) G__int(libp->para[1])
, *(vector<int,allocator<int> >*) libp->para[2].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_173_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >*) G__getstructoffset())->pop_back();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_173_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >*) G__getstructoffset())->erase(*((vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >::iterator*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_173_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >*) G__getstructoffset())->erase(*((vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >::iterator*) G__int(libp->para[0])), *((vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_173_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >*) G__getstructoffset())->clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > > G__TvectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR;
static int G__Dict_173_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >*) (soff+(sizeof(vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >)*i)))->~G__TvectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >*) (soff))->~G__TvectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* vector<vector<bool,allocator<bool> >,allocator<vector<bool,allocator<bool> > > > */
static int G__Dict_177_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vector<bool,allocator<bool> >,allocator<vector<bool,allocator<bool> > > >::reference obj = ((vector<vector<bool,allocator<bool> >,allocator<vector<bool,allocator<bool> > > >*) G__getstructoffset())->at((vector<vector<bool,allocator<bool> >,allocator<vector<bool,allocator<bool> > > >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_177_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vector<bool,allocator<bool> >,allocator<vector<bool,allocator<bool> > > >::const_reference obj = ((const vector<vector<bool,allocator<bool> >,allocator<vector<bool,allocator<bool> > > >*) G__getstructoffset())->at((vector<vector<bool,allocator<bool> >,allocator<vector<bool,allocator<bool> > > >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_177_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vector<bool,allocator<bool> >,allocator<vector<bool,allocator<bool> > > >::iterator* pobj;
         vector<vector<bool,allocator<bool> >,allocator<vector<bool,allocator<bool> > > >::iterator xobj = ((vector<vector<bool,allocator<bool> >,allocator<vector<bool,allocator<bool> > > >*) G__getstructoffset())->begin();
         pobj = new vector<vector<bool,allocator<bool> >,allocator<vector<bool,allocator<bool> > > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_177_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vector<bool,allocator<bool> >,allocator<vector<bool,allocator<bool> > > >::iterator* pobj;
         vector<vector<bool,allocator<bool> >,allocator<vector<bool,allocator<bool> > > >::iterator xobj = ((vector<vector<bool,allocator<bool> >,allocator<vector<bool,allocator<bool> > > >*) G__getstructoffset())->end();
         pobj = new vector<vector<bool,allocator<bool> >,allocator<vector<bool,allocator<bool> > > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_177_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vector<bool,allocator<bool> >,allocator<vector<bool,allocator<bool> > > >::reverse_iterator* pobj;
         vector<vector<bool,allocator<bool> >,allocator<vector<bool,allocator<bool> > > >::reverse_iterator xobj = ((vector<vector<bool,allocator<bool> >,allocator<vector<bool,allocator<bool> > > >*) G__getstructoffset())->rbegin();
         pobj = new vector<vector<bool,allocator<bool> >,allocator<vector<bool,allocator<bool> > > >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_177_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vector<bool,allocator<bool> >,allocator<vector<bool,allocator<bool> > > >::reverse_iterator* pobj;
         vector<vector<bool,allocator<bool> >,allocator<vector<bool,allocator<bool> > > >::reverse_iterator xobj = ((vector<vector<bool,allocator<bool> >,allocator<vector<bool,allocator<bool> > > >*) G__getstructoffset())->rend();
         pobj = new vector<vector<bool,allocator<bool> >,allocator<vector<bool,allocator<bool> > > >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_177_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<vector<bool,allocator<bool> >,allocator<vector<bool,allocator<bool> > > >*) G__getstructoffset())->size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_177_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<vector<bool,allocator<bool> >,allocator<vector<bool,allocator<bool> > > >*) G__getstructoffset())->max_size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_177_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<bool,allocator<bool> >,allocator<vector<bool,allocator<bool> > > >*) G__getstructoffset())->resize((vector<vector<bool,allocator<bool> >,allocator<vector<bool,allocator<bool> > > >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_177_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<bool,allocator<bool> >,allocator<vector<bool,allocator<bool> > > >*) G__getstructoffset())->resize((vector<vector<bool,allocator<bool> >,allocator<vector<bool,allocator<bool> > > >::size_type) G__int(libp->para[0]), *((vector<bool,allocator<bool> >*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_177_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<vector<bool,allocator<bool> >,allocator<vector<bool,allocator<bool> > > >*) G__getstructoffset())->capacity());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_177_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const vector<vector<bool,allocator<bool> >,allocator<vector<bool,allocator<bool> > > >*) G__getstructoffset())->empty());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_177_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vector<bool,allocator<bool> >,allocator<vector<bool,allocator<bool> > > >::reference obj = ((vector<vector<bool,allocator<bool> >,allocator<vector<bool,allocator<bool> > > >*) G__getstructoffset())->operator[]((vector<vector<bool,allocator<bool> >,allocator<vector<bool,allocator<bool> > > >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_177_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vector<bool,allocator<bool> >,allocator<vector<bool,allocator<bool> > > >::const_reference obj = ((const vector<vector<bool,allocator<bool> >,allocator<vector<bool,allocator<bool> > > >*) G__getstructoffset())->operator[]((vector<vector<bool,allocator<bool> >,allocator<vector<bool,allocator<bool> > > >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_177_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<vector<bool,allocator<bool> >,allocator<vector<bool,allocator<bool> > > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<vector<bool,allocator<bool> >,allocator<vector<bool,allocator<bool> > > >[n];
     } else {
       p = new((void*) gvp) vector<vector<bool,allocator<bool> >,allocator<vector<bool,allocator<bool> > > >[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<vector<bool,allocator<bool> >,allocator<vector<bool,allocator<bool> > > >;
     } else {
       p = new((void*) gvp) vector<vector<bool,allocator<bool> >,allocator<vector<bool,allocator<bool> > > >;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEboolcOallocatorlEboolgRsPgRcOallocatorlEvectorlEboolcOallocatorlEboolgRsPgRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_177_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<vector<bool,allocator<bool> >,allocator<vector<bool,allocator<bool> > > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<vector<bool,allocator<bool> >,allocator<vector<bool,allocator<bool> > > >((vector<vector<bool,allocator<bool> >,allocator<vector<bool,allocator<bool> > > >::size_type) G__int(libp->para[0]), *(vector<bool,allocator<bool> >*) libp->para[1].ref);
     } else {
       p = new((void*) gvp) vector<vector<bool,allocator<bool> >,allocator<vector<bool,allocator<bool> > > >((vector<vector<bool,allocator<bool> >,allocator<vector<bool,allocator<bool> > > >::size_type) G__int(libp->para[0]), *(vector<bool,allocator<bool> >*) libp->para[1].ref);
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<vector<bool,allocator<bool> >,allocator<vector<bool,allocator<bool> > > >((vector<vector<bool,allocator<bool> >,allocator<vector<bool,allocator<bool> > > >::size_type) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) vector<vector<bool,allocator<bool> >,allocator<vector<bool,allocator<bool> > > >((vector<vector<bool,allocator<bool> >,allocator<vector<bool,allocator<bool> > > >::size_type) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEboolcOallocatorlEboolgRsPgRcOallocatorlEvectorlEboolcOallocatorlEboolgRsPgRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_177_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<vector<bool,allocator<bool> >,allocator<vector<bool,allocator<bool> > > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<vector<bool,allocator<bool> >,allocator<vector<bool,allocator<bool> > > >(*(vector<vector<bool,allocator<bool> >,allocator<vector<bool,allocator<bool> > > >*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) vector<vector<bool,allocator<bool> >,allocator<vector<bool,allocator<bool> > > >(*(vector<vector<bool,allocator<bool> >,allocator<vector<bool,allocator<bool> > > >*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEboolcOallocatorlEboolgRsPgRcOallocatorlEvectorlEboolcOallocatorlEboolgRsPgRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_177_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<vector<bool,allocator<bool> >,allocator<vector<bool,allocator<bool> > > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<vector<bool,allocator<bool> >,allocator<vector<bool,allocator<bool> > > >(*((vector<vector<bool,allocator<bool> >,allocator<vector<bool,allocator<bool> > > >::const_iterator*) G__int(libp->para[0])), *((vector<vector<bool,allocator<bool> >,allocator<vector<bool,allocator<bool> > > >::const_iterator*) G__int(libp->para[1])));
   } else {
     p = new((void*) gvp) vector<vector<bool,allocator<bool> >,allocator<vector<bool,allocator<bool> > > >(*((vector<vector<bool,allocator<bool> >,allocator<vector<bool,allocator<bool> > > >::const_iterator*) G__int(libp->para[0])), *((vector<vector<bool,allocator<bool> >,allocator<vector<bool,allocator<bool> > > >::const_iterator*) G__int(libp->para[1])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEboolcOallocatorlEboolgRsPgRcOallocatorlEvectorlEboolcOallocatorlEboolgRsPgRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_177_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<vector<bool,allocator<bool> >,allocator<vector<bool,allocator<bool> > > >& obj = ((vector<vector<bool,allocator<bool> >,allocator<vector<bool,allocator<bool> > > >*) G__getstructoffset())->operator=(*(vector<vector<bool,allocator<bool> >,allocator<vector<bool,allocator<bool> > > >*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_177_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<bool,allocator<bool> >,allocator<vector<bool,allocator<bool> > > >*) G__getstructoffset())->reserve((vector<vector<bool,allocator<bool> >,allocator<vector<bool,allocator<bool> > > >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_177_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<bool,allocator<bool> >& obj = ((vector<vector<bool,allocator<bool> >,allocator<vector<bool,allocator<bool> > > >*) G__getstructoffset())->front();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_177_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<bool,allocator<bool> >& obj = ((vector<vector<bool,allocator<bool> >,allocator<vector<bool,allocator<bool> > > >*) G__getstructoffset())->back();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_177_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<bool,allocator<bool> >,allocator<vector<bool,allocator<bool> > > >*) G__getstructoffset())->push_back(*(vector<bool,allocator<bool> >*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_177_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<bool,allocator<bool> >,allocator<vector<bool,allocator<bool> > > >*) G__getstructoffset())->swap(*(vector<vector<bool,allocator<bool> >,allocator<vector<bool,allocator<bool> > > >*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_177_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vector<bool,allocator<bool> >,allocator<vector<bool,allocator<bool> > > >::iterator* pobj;
         vector<vector<bool,allocator<bool> >,allocator<vector<bool,allocator<bool> > > >::iterator xobj = ((vector<vector<bool,allocator<bool> >,allocator<vector<bool,allocator<bool> > > >*) G__getstructoffset())->insert(*((vector<vector<bool,allocator<bool> >,allocator<vector<bool,allocator<bool> > > >::iterator*) G__int(libp->para[0])), *(vector<bool,allocator<bool> >*) libp->para[1].ref);
         pobj = new vector<vector<bool,allocator<bool> >,allocator<vector<bool,allocator<bool> > > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_177_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<bool,allocator<bool> >,allocator<vector<bool,allocator<bool> > > >*) G__getstructoffset())->insert(*((vector<vector<bool,allocator<bool> >,allocator<vector<bool,allocator<bool> > > >::iterator*) G__int(libp->para[0])), *((vector<vector<bool,allocator<bool> >,allocator<vector<bool,allocator<bool> > > >::const_iterator*) G__int(libp->para[1]))
, *((vector<vector<bool,allocator<bool> >,allocator<vector<bool,allocator<bool> > > >::const_iterator*) G__int(libp->para[2])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_177_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<bool,allocator<bool> >,allocator<vector<bool,allocator<bool> > > >*) G__getstructoffset())->insert(*((vector<vector<bool,allocator<bool> >,allocator<vector<bool,allocator<bool> > > >::iterator*) G__int(libp->para[0])), (vector<vector<bool,allocator<bool> >,allocator<vector<bool,allocator<bool> > > >::size_type) G__int(libp->para[1])
, *(vector<bool,allocator<bool> >*) libp->para[2].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_177_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<bool,allocator<bool> >,allocator<vector<bool,allocator<bool> > > >*) G__getstructoffset())->pop_back();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_177_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<bool,allocator<bool> >,allocator<vector<bool,allocator<bool> > > >*) G__getstructoffset())->erase(*((vector<vector<bool,allocator<bool> >,allocator<vector<bool,allocator<bool> > > >::iterator*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_177_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<bool,allocator<bool> >,allocator<vector<bool,allocator<bool> > > >*) G__getstructoffset())->erase(*((vector<vector<bool,allocator<bool> >,allocator<vector<bool,allocator<bool> > > >::iterator*) G__int(libp->para[0])), *((vector<vector<bool,allocator<bool> >,allocator<vector<bool,allocator<bool> > > >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_177_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<bool,allocator<bool> >,allocator<vector<bool,allocator<bool> > > >*) G__getstructoffset())->clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef vector<vector<bool,allocator<bool> >,allocator<vector<bool,allocator<bool> > > > G__TvectorlEvectorlEboolcOallocatorlEboolgRsPgRcOallocatorlEvectorlEboolcOallocatorlEboolgRsPgRsPgRsPgR;
static int G__Dict_177_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (vector<vector<bool,allocator<bool> >,allocator<vector<bool,allocator<bool> > > >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((vector<vector<bool,allocator<bool> >,allocator<vector<bool,allocator<bool> > > >*) (soff+(sizeof(vector<vector<bool,allocator<bool> >,allocator<vector<bool,allocator<bool> > > >)*i)))->~G__TvectorlEvectorlEboolcOallocatorlEboolgRsPgRcOallocatorlEvectorlEboolcOallocatorlEboolgRsPgRsPgRsPgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (vector<vector<bool,allocator<bool> >,allocator<vector<bool,allocator<bool> > > >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((vector<vector<bool,allocator<bool> >,allocator<vector<bool,allocator<bool> > > >*) (soff))->~G__TvectorlEvectorlEboolcOallocatorlEboolgRsPgRcOallocatorlEvectorlEboolcOallocatorlEboolgRsPgRsPgRsPgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* vector<vector<char,allocator<char> >,allocator<vector<char,allocator<char> > > > */
static int G__Dict_181_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vector<char,allocator<char> >,allocator<vector<char,allocator<char> > > >::reference obj = ((vector<vector<char,allocator<char> >,allocator<vector<char,allocator<char> > > >*) G__getstructoffset())->at((vector<vector<char,allocator<char> >,allocator<vector<char,allocator<char> > > >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_181_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vector<char,allocator<char> >,allocator<vector<char,allocator<char> > > >::const_reference obj = ((const vector<vector<char,allocator<char> >,allocator<vector<char,allocator<char> > > >*) G__getstructoffset())->at((vector<vector<char,allocator<char> >,allocator<vector<char,allocator<char> > > >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_181_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vector<char,allocator<char> >,allocator<vector<char,allocator<char> > > >::iterator* pobj;
         vector<vector<char,allocator<char> >,allocator<vector<char,allocator<char> > > >::iterator xobj = ((vector<vector<char,allocator<char> >,allocator<vector<char,allocator<char> > > >*) G__getstructoffset())->begin();
         pobj = new vector<vector<char,allocator<char> >,allocator<vector<char,allocator<char> > > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_181_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vector<char,allocator<char> >,allocator<vector<char,allocator<char> > > >::iterator* pobj;
         vector<vector<char,allocator<char> >,allocator<vector<char,allocator<char> > > >::iterator xobj = ((vector<vector<char,allocator<char> >,allocator<vector<char,allocator<char> > > >*) G__getstructoffset())->end();
         pobj = new vector<vector<char,allocator<char> >,allocator<vector<char,allocator<char> > > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_181_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vector<char,allocator<char> >,allocator<vector<char,allocator<char> > > >::reverse_iterator* pobj;
         vector<vector<char,allocator<char> >,allocator<vector<char,allocator<char> > > >::reverse_iterator xobj = ((vector<vector<char,allocator<char> >,allocator<vector<char,allocator<char> > > >*) G__getstructoffset())->rbegin();
         pobj = new vector<vector<char,allocator<char> >,allocator<vector<char,allocator<char> > > >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_181_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vector<char,allocator<char> >,allocator<vector<char,allocator<char> > > >::reverse_iterator* pobj;
         vector<vector<char,allocator<char> >,allocator<vector<char,allocator<char> > > >::reverse_iterator xobj = ((vector<vector<char,allocator<char> >,allocator<vector<char,allocator<char> > > >*) G__getstructoffset())->rend();
         pobj = new vector<vector<char,allocator<char> >,allocator<vector<char,allocator<char> > > >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_181_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<vector<char,allocator<char> >,allocator<vector<char,allocator<char> > > >*) G__getstructoffset())->size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_181_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<vector<char,allocator<char> >,allocator<vector<char,allocator<char> > > >*) G__getstructoffset())->max_size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_181_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<char,allocator<char> >,allocator<vector<char,allocator<char> > > >*) G__getstructoffset())->resize((vector<vector<char,allocator<char> >,allocator<vector<char,allocator<char> > > >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_181_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<char,allocator<char> >,allocator<vector<char,allocator<char> > > >*) G__getstructoffset())->resize((vector<vector<char,allocator<char> >,allocator<vector<char,allocator<char> > > >::size_type) G__int(libp->para[0]), *((vector<char,allocator<char> >*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_181_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<vector<char,allocator<char> >,allocator<vector<char,allocator<char> > > >*) G__getstructoffset())->capacity());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_181_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const vector<vector<char,allocator<char> >,allocator<vector<char,allocator<char> > > >*) G__getstructoffset())->empty());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_181_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vector<char,allocator<char> >,allocator<vector<char,allocator<char> > > >::reference obj = ((vector<vector<char,allocator<char> >,allocator<vector<char,allocator<char> > > >*) G__getstructoffset())->operator[]((vector<vector<char,allocator<char> >,allocator<vector<char,allocator<char> > > >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_181_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vector<char,allocator<char> >,allocator<vector<char,allocator<char> > > >::const_reference obj = ((const vector<vector<char,allocator<char> >,allocator<vector<char,allocator<char> > > >*) G__getstructoffset())->operator[]((vector<vector<char,allocator<char> >,allocator<vector<char,allocator<char> > > >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_181_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<vector<char,allocator<char> >,allocator<vector<char,allocator<char> > > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<vector<char,allocator<char> >,allocator<vector<char,allocator<char> > > >[n];
     } else {
       p = new((void*) gvp) vector<vector<char,allocator<char> >,allocator<vector<char,allocator<char> > > >[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<vector<char,allocator<char> >,allocator<vector<char,allocator<char> > > >;
     } else {
       p = new((void*) gvp) vector<vector<char,allocator<char> >,allocator<vector<char,allocator<char> > > >;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEcharcOallocatorlEchargRsPgRcOallocatorlEvectorlEcharcOallocatorlEchargRsPgRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_181_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<vector<char,allocator<char> >,allocator<vector<char,allocator<char> > > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<vector<char,allocator<char> >,allocator<vector<char,allocator<char> > > >((vector<vector<char,allocator<char> >,allocator<vector<char,allocator<char> > > >::size_type) G__int(libp->para[0]), *(vector<char,allocator<char> >*) libp->para[1].ref);
     } else {
       p = new((void*) gvp) vector<vector<char,allocator<char> >,allocator<vector<char,allocator<char> > > >((vector<vector<char,allocator<char> >,allocator<vector<char,allocator<char> > > >::size_type) G__int(libp->para[0]), *(vector<char,allocator<char> >*) libp->para[1].ref);
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<vector<char,allocator<char> >,allocator<vector<char,allocator<char> > > >((vector<vector<char,allocator<char> >,allocator<vector<char,allocator<char> > > >::size_type) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) vector<vector<char,allocator<char> >,allocator<vector<char,allocator<char> > > >((vector<vector<char,allocator<char> >,allocator<vector<char,allocator<char> > > >::size_type) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEcharcOallocatorlEchargRsPgRcOallocatorlEvectorlEcharcOallocatorlEchargRsPgRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_181_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<vector<char,allocator<char> >,allocator<vector<char,allocator<char> > > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<vector<char,allocator<char> >,allocator<vector<char,allocator<char> > > >(*(vector<vector<char,allocator<char> >,allocator<vector<char,allocator<char> > > >*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) vector<vector<char,allocator<char> >,allocator<vector<char,allocator<char> > > >(*(vector<vector<char,allocator<char> >,allocator<vector<char,allocator<char> > > >*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEcharcOallocatorlEchargRsPgRcOallocatorlEvectorlEcharcOallocatorlEchargRsPgRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_181_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<vector<char,allocator<char> >,allocator<vector<char,allocator<char> > > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<vector<char,allocator<char> >,allocator<vector<char,allocator<char> > > >(*((vector<vector<char,allocator<char> >,allocator<vector<char,allocator<char> > > >::const_iterator*) G__int(libp->para[0])), *((vector<vector<char,allocator<char> >,allocator<vector<char,allocator<char> > > >::const_iterator*) G__int(libp->para[1])));
   } else {
     p = new((void*) gvp) vector<vector<char,allocator<char> >,allocator<vector<char,allocator<char> > > >(*((vector<vector<char,allocator<char> >,allocator<vector<char,allocator<char> > > >::const_iterator*) G__int(libp->para[0])), *((vector<vector<char,allocator<char> >,allocator<vector<char,allocator<char> > > >::const_iterator*) G__int(libp->para[1])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEcharcOallocatorlEchargRsPgRcOallocatorlEvectorlEcharcOallocatorlEchargRsPgRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_181_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<vector<char,allocator<char> >,allocator<vector<char,allocator<char> > > >& obj = ((vector<vector<char,allocator<char> >,allocator<vector<char,allocator<char> > > >*) G__getstructoffset())->operator=(*(vector<vector<char,allocator<char> >,allocator<vector<char,allocator<char> > > >*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_181_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<char,allocator<char> >,allocator<vector<char,allocator<char> > > >*) G__getstructoffset())->reserve((vector<vector<char,allocator<char> >,allocator<vector<char,allocator<char> > > >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_181_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<char,allocator<char> >& obj = ((vector<vector<char,allocator<char> >,allocator<vector<char,allocator<char> > > >*) G__getstructoffset())->front();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_181_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<char,allocator<char> >& obj = ((vector<vector<char,allocator<char> >,allocator<vector<char,allocator<char> > > >*) G__getstructoffset())->back();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_181_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<char,allocator<char> >,allocator<vector<char,allocator<char> > > >*) G__getstructoffset())->push_back(*(vector<char,allocator<char> >*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_181_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<char,allocator<char> >,allocator<vector<char,allocator<char> > > >*) G__getstructoffset())->swap(*(vector<vector<char,allocator<char> >,allocator<vector<char,allocator<char> > > >*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_181_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vector<char,allocator<char> >,allocator<vector<char,allocator<char> > > >::iterator* pobj;
         vector<vector<char,allocator<char> >,allocator<vector<char,allocator<char> > > >::iterator xobj = ((vector<vector<char,allocator<char> >,allocator<vector<char,allocator<char> > > >*) G__getstructoffset())->insert(*((vector<vector<char,allocator<char> >,allocator<vector<char,allocator<char> > > >::iterator*) G__int(libp->para[0])), *(vector<char,allocator<char> >*) libp->para[1].ref);
         pobj = new vector<vector<char,allocator<char> >,allocator<vector<char,allocator<char> > > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_181_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<char,allocator<char> >,allocator<vector<char,allocator<char> > > >*) G__getstructoffset())->insert(*((vector<vector<char,allocator<char> >,allocator<vector<char,allocator<char> > > >::iterator*) G__int(libp->para[0])), *((vector<vector<char,allocator<char> >,allocator<vector<char,allocator<char> > > >::const_iterator*) G__int(libp->para[1]))
, *((vector<vector<char,allocator<char> >,allocator<vector<char,allocator<char> > > >::const_iterator*) G__int(libp->para[2])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_181_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<char,allocator<char> >,allocator<vector<char,allocator<char> > > >*) G__getstructoffset())->insert(*((vector<vector<char,allocator<char> >,allocator<vector<char,allocator<char> > > >::iterator*) G__int(libp->para[0])), (vector<vector<char,allocator<char> >,allocator<vector<char,allocator<char> > > >::size_type) G__int(libp->para[1])
, *(vector<char,allocator<char> >*) libp->para[2].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_181_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<char,allocator<char> >,allocator<vector<char,allocator<char> > > >*) G__getstructoffset())->pop_back();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_181_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<char,allocator<char> >,allocator<vector<char,allocator<char> > > >*) G__getstructoffset())->erase(*((vector<vector<char,allocator<char> >,allocator<vector<char,allocator<char> > > >::iterator*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_181_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<char,allocator<char> >,allocator<vector<char,allocator<char> > > >*) G__getstructoffset())->erase(*((vector<vector<char,allocator<char> >,allocator<vector<char,allocator<char> > > >::iterator*) G__int(libp->para[0])), *((vector<vector<char,allocator<char> >,allocator<vector<char,allocator<char> > > >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_181_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<char,allocator<char> >,allocator<vector<char,allocator<char> > > >*) G__getstructoffset())->clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef vector<vector<char,allocator<char> >,allocator<vector<char,allocator<char> > > > G__TvectorlEvectorlEcharcOallocatorlEchargRsPgRcOallocatorlEvectorlEcharcOallocatorlEchargRsPgRsPgRsPgR;
static int G__Dict_181_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (vector<vector<char,allocator<char> >,allocator<vector<char,allocator<char> > > >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((vector<vector<char,allocator<char> >,allocator<vector<char,allocator<char> > > >*) (soff+(sizeof(vector<vector<char,allocator<char> >,allocator<vector<char,allocator<char> > > >)*i)))->~G__TvectorlEvectorlEcharcOallocatorlEchargRsPgRcOallocatorlEvectorlEcharcOallocatorlEchargRsPgRsPgRsPgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (vector<vector<char,allocator<char> >,allocator<vector<char,allocator<char> > > >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((vector<vector<char,allocator<char> >,allocator<vector<char,allocator<char> > > >*) (soff))->~G__TvectorlEvectorlEcharcOallocatorlEchargRsPgRcOallocatorlEvectorlEcharcOallocatorlEchargRsPgRsPgRsPgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* vector<vector<short,allocator<short> >,allocator<vector<short,allocator<short> > > > */
static int G__Dict_185_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vector<short,allocator<short> >,allocator<vector<short,allocator<short> > > >::reference obj = ((vector<vector<short,allocator<short> >,allocator<vector<short,allocator<short> > > >*) G__getstructoffset())->at((vector<vector<short,allocator<short> >,allocator<vector<short,allocator<short> > > >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_185_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vector<short,allocator<short> >,allocator<vector<short,allocator<short> > > >::const_reference obj = ((const vector<vector<short,allocator<short> >,allocator<vector<short,allocator<short> > > >*) G__getstructoffset())->at((vector<vector<short,allocator<short> >,allocator<vector<short,allocator<short> > > >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_185_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vector<short,allocator<short> >,allocator<vector<short,allocator<short> > > >::iterator* pobj;
         vector<vector<short,allocator<short> >,allocator<vector<short,allocator<short> > > >::iterator xobj = ((vector<vector<short,allocator<short> >,allocator<vector<short,allocator<short> > > >*) G__getstructoffset())->begin();
         pobj = new vector<vector<short,allocator<short> >,allocator<vector<short,allocator<short> > > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_185_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vector<short,allocator<short> >,allocator<vector<short,allocator<short> > > >::iterator* pobj;
         vector<vector<short,allocator<short> >,allocator<vector<short,allocator<short> > > >::iterator xobj = ((vector<vector<short,allocator<short> >,allocator<vector<short,allocator<short> > > >*) G__getstructoffset())->end();
         pobj = new vector<vector<short,allocator<short> >,allocator<vector<short,allocator<short> > > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_185_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vector<short,allocator<short> >,allocator<vector<short,allocator<short> > > >::reverse_iterator* pobj;
         vector<vector<short,allocator<short> >,allocator<vector<short,allocator<short> > > >::reverse_iterator xobj = ((vector<vector<short,allocator<short> >,allocator<vector<short,allocator<short> > > >*) G__getstructoffset())->rbegin();
         pobj = new vector<vector<short,allocator<short> >,allocator<vector<short,allocator<short> > > >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_185_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vector<short,allocator<short> >,allocator<vector<short,allocator<short> > > >::reverse_iterator* pobj;
         vector<vector<short,allocator<short> >,allocator<vector<short,allocator<short> > > >::reverse_iterator xobj = ((vector<vector<short,allocator<short> >,allocator<vector<short,allocator<short> > > >*) G__getstructoffset())->rend();
         pobj = new vector<vector<short,allocator<short> >,allocator<vector<short,allocator<short> > > >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_185_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<vector<short,allocator<short> >,allocator<vector<short,allocator<short> > > >*) G__getstructoffset())->size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_185_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<vector<short,allocator<short> >,allocator<vector<short,allocator<short> > > >*) G__getstructoffset())->max_size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_185_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<short,allocator<short> >,allocator<vector<short,allocator<short> > > >*) G__getstructoffset())->resize((vector<vector<short,allocator<short> >,allocator<vector<short,allocator<short> > > >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_185_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<short,allocator<short> >,allocator<vector<short,allocator<short> > > >*) G__getstructoffset())->resize((vector<vector<short,allocator<short> >,allocator<vector<short,allocator<short> > > >::size_type) G__int(libp->para[0]), *((vector<short,allocator<short> >*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_185_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<vector<short,allocator<short> >,allocator<vector<short,allocator<short> > > >*) G__getstructoffset())->capacity());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_185_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const vector<vector<short,allocator<short> >,allocator<vector<short,allocator<short> > > >*) G__getstructoffset())->empty());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_185_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vector<short,allocator<short> >,allocator<vector<short,allocator<short> > > >::reference obj = ((vector<vector<short,allocator<short> >,allocator<vector<short,allocator<short> > > >*) G__getstructoffset())->operator[]((vector<vector<short,allocator<short> >,allocator<vector<short,allocator<short> > > >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_185_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vector<short,allocator<short> >,allocator<vector<short,allocator<short> > > >::const_reference obj = ((const vector<vector<short,allocator<short> >,allocator<vector<short,allocator<short> > > >*) G__getstructoffset())->operator[]((vector<vector<short,allocator<short> >,allocator<vector<short,allocator<short> > > >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_185_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<vector<short,allocator<short> >,allocator<vector<short,allocator<short> > > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<vector<short,allocator<short> >,allocator<vector<short,allocator<short> > > >[n];
     } else {
       p = new((void*) gvp) vector<vector<short,allocator<short> >,allocator<vector<short,allocator<short> > > >[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<vector<short,allocator<short> >,allocator<vector<short,allocator<short> > > >;
     } else {
       p = new((void*) gvp) vector<vector<short,allocator<short> >,allocator<vector<short,allocator<short> > > >;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEshortcOallocatorlEshortgRsPgRcOallocatorlEvectorlEshortcOallocatorlEshortgRsPgRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_185_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<vector<short,allocator<short> >,allocator<vector<short,allocator<short> > > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<vector<short,allocator<short> >,allocator<vector<short,allocator<short> > > >((vector<vector<short,allocator<short> >,allocator<vector<short,allocator<short> > > >::size_type) G__int(libp->para[0]), *(vector<short,allocator<short> >*) libp->para[1].ref);
     } else {
       p = new((void*) gvp) vector<vector<short,allocator<short> >,allocator<vector<short,allocator<short> > > >((vector<vector<short,allocator<short> >,allocator<vector<short,allocator<short> > > >::size_type) G__int(libp->para[0]), *(vector<short,allocator<short> >*) libp->para[1].ref);
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<vector<short,allocator<short> >,allocator<vector<short,allocator<short> > > >((vector<vector<short,allocator<short> >,allocator<vector<short,allocator<short> > > >::size_type) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) vector<vector<short,allocator<short> >,allocator<vector<short,allocator<short> > > >((vector<vector<short,allocator<short> >,allocator<vector<short,allocator<short> > > >::size_type) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEshortcOallocatorlEshortgRsPgRcOallocatorlEvectorlEshortcOallocatorlEshortgRsPgRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_185_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<vector<short,allocator<short> >,allocator<vector<short,allocator<short> > > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<vector<short,allocator<short> >,allocator<vector<short,allocator<short> > > >(*(vector<vector<short,allocator<short> >,allocator<vector<short,allocator<short> > > >*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) vector<vector<short,allocator<short> >,allocator<vector<short,allocator<short> > > >(*(vector<vector<short,allocator<short> >,allocator<vector<short,allocator<short> > > >*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEshortcOallocatorlEshortgRsPgRcOallocatorlEvectorlEshortcOallocatorlEshortgRsPgRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_185_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<vector<short,allocator<short> >,allocator<vector<short,allocator<short> > > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<vector<short,allocator<short> >,allocator<vector<short,allocator<short> > > >(*((vector<vector<short,allocator<short> >,allocator<vector<short,allocator<short> > > >::const_iterator*) G__int(libp->para[0])), *((vector<vector<short,allocator<short> >,allocator<vector<short,allocator<short> > > >::const_iterator*) G__int(libp->para[1])));
   } else {
     p = new((void*) gvp) vector<vector<short,allocator<short> >,allocator<vector<short,allocator<short> > > >(*((vector<vector<short,allocator<short> >,allocator<vector<short,allocator<short> > > >::const_iterator*) G__int(libp->para[0])), *((vector<vector<short,allocator<short> >,allocator<vector<short,allocator<short> > > >::const_iterator*) G__int(libp->para[1])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEshortcOallocatorlEshortgRsPgRcOallocatorlEvectorlEshortcOallocatorlEshortgRsPgRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_185_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<vector<short,allocator<short> >,allocator<vector<short,allocator<short> > > >& obj = ((vector<vector<short,allocator<short> >,allocator<vector<short,allocator<short> > > >*) G__getstructoffset())->operator=(*(vector<vector<short,allocator<short> >,allocator<vector<short,allocator<short> > > >*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_185_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<short,allocator<short> >,allocator<vector<short,allocator<short> > > >*) G__getstructoffset())->reserve((vector<vector<short,allocator<short> >,allocator<vector<short,allocator<short> > > >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_185_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<short,allocator<short> >& obj = ((vector<vector<short,allocator<short> >,allocator<vector<short,allocator<short> > > >*) G__getstructoffset())->front();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_185_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<short,allocator<short> >& obj = ((vector<vector<short,allocator<short> >,allocator<vector<short,allocator<short> > > >*) G__getstructoffset())->back();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_185_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<short,allocator<short> >,allocator<vector<short,allocator<short> > > >*) G__getstructoffset())->push_back(*(vector<short,allocator<short> >*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_185_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<short,allocator<short> >,allocator<vector<short,allocator<short> > > >*) G__getstructoffset())->swap(*(vector<vector<short,allocator<short> >,allocator<vector<short,allocator<short> > > >*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_185_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vector<short,allocator<short> >,allocator<vector<short,allocator<short> > > >::iterator* pobj;
         vector<vector<short,allocator<short> >,allocator<vector<short,allocator<short> > > >::iterator xobj = ((vector<vector<short,allocator<short> >,allocator<vector<short,allocator<short> > > >*) G__getstructoffset())->insert(*((vector<vector<short,allocator<short> >,allocator<vector<short,allocator<short> > > >::iterator*) G__int(libp->para[0])), *(vector<short,allocator<short> >*) libp->para[1].ref);
         pobj = new vector<vector<short,allocator<short> >,allocator<vector<short,allocator<short> > > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_185_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<short,allocator<short> >,allocator<vector<short,allocator<short> > > >*) G__getstructoffset())->insert(*((vector<vector<short,allocator<short> >,allocator<vector<short,allocator<short> > > >::iterator*) G__int(libp->para[0])), *((vector<vector<short,allocator<short> >,allocator<vector<short,allocator<short> > > >::const_iterator*) G__int(libp->para[1]))
, *((vector<vector<short,allocator<short> >,allocator<vector<short,allocator<short> > > >::const_iterator*) G__int(libp->para[2])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_185_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<short,allocator<short> >,allocator<vector<short,allocator<short> > > >*) G__getstructoffset())->insert(*((vector<vector<short,allocator<short> >,allocator<vector<short,allocator<short> > > >::iterator*) G__int(libp->para[0])), (vector<vector<short,allocator<short> >,allocator<vector<short,allocator<short> > > >::size_type) G__int(libp->para[1])
, *(vector<short,allocator<short> >*) libp->para[2].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_185_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<short,allocator<short> >,allocator<vector<short,allocator<short> > > >*) G__getstructoffset())->pop_back();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_185_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<short,allocator<short> >,allocator<vector<short,allocator<short> > > >*) G__getstructoffset())->erase(*((vector<vector<short,allocator<short> >,allocator<vector<short,allocator<short> > > >::iterator*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_185_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<short,allocator<short> >,allocator<vector<short,allocator<short> > > >*) G__getstructoffset())->erase(*((vector<vector<short,allocator<short> >,allocator<vector<short,allocator<short> > > >::iterator*) G__int(libp->para[0])), *((vector<vector<short,allocator<short> >,allocator<vector<short,allocator<short> > > >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_185_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<short,allocator<short> >,allocator<vector<short,allocator<short> > > >*) G__getstructoffset())->clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef vector<vector<short,allocator<short> >,allocator<vector<short,allocator<short> > > > G__TvectorlEvectorlEshortcOallocatorlEshortgRsPgRcOallocatorlEvectorlEshortcOallocatorlEshortgRsPgRsPgRsPgR;
static int G__Dict_185_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (vector<vector<short,allocator<short> >,allocator<vector<short,allocator<short> > > >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((vector<vector<short,allocator<short> >,allocator<vector<short,allocator<short> > > >*) (soff+(sizeof(vector<vector<short,allocator<short> >,allocator<vector<short,allocator<short> > > >)*i)))->~G__TvectorlEvectorlEshortcOallocatorlEshortgRsPgRcOallocatorlEvectorlEshortcOallocatorlEshortgRsPgRsPgRsPgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (vector<vector<short,allocator<short> >,allocator<vector<short,allocator<short> > > >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((vector<vector<short,allocator<short> >,allocator<vector<short,allocator<short> > > >*) (soff))->~G__TvectorlEvectorlEshortcOallocatorlEshortgRsPgRcOallocatorlEvectorlEshortcOallocatorlEshortgRsPgRsPgRsPgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* vector<vector<long,allocator<long> >,allocator<vector<long,allocator<long> > > > */
static int G__Dict_189_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vector<long,allocator<long> >,allocator<vector<long,allocator<long> > > >::reference obj = ((vector<vector<long,allocator<long> >,allocator<vector<long,allocator<long> > > >*) G__getstructoffset())->at((vector<vector<long,allocator<long> >,allocator<vector<long,allocator<long> > > >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_189_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vector<long,allocator<long> >,allocator<vector<long,allocator<long> > > >::const_reference obj = ((const vector<vector<long,allocator<long> >,allocator<vector<long,allocator<long> > > >*) G__getstructoffset())->at((vector<vector<long,allocator<long> >,allocator<vector<long,allocator<long> > > >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_189_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vector<long,allocator<long> >,allocator<vector<long,allocator<long> > > >::iterator* pobj;
         vector<vector<long,allocator<long> >,allocator<vector<long,allocator<long> > > >::iterator xobj = ((vector<vector<long,allocator<long> >,allocator<vector<long,allocator<long> > > >*) G__getstructoffset())->begin();
         pobj = new vector<vector<long,allocator<long> >,allocator<vector<long,allocator<long> > > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_189_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vector<long,allocator<long> >,allocator<vector<long,allocator<long> > > >::iterator* pobj;
         vector<vector<long,allocator<long> >,allocator<vector<long,allocator<long> > > >::iterator xobj = ((vector<vector<long,allocator<long> >,allocator<vector<long,allocator<long> > > >*) G__getstructoffset())->end();
         pobj = new vector<vector<long,allocator<long> >,allocator<vector<long,allocator<long> > > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_189_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vector<long,allocator<long> >,allocator<vector<long,allocator<long> > > >::reverse_iterator* pobj;
         vector<vector<long,allocator<long> >,allocator<vector<long,allocator<long> > > >::reverse_iterator xobj = ((vector<vector<long,allocator<long> >,allocator<vector<long,allocator<long> > > >*) G__getstructoffset())->rbegin();
         pobj = new vector<vector<long,allocator<long> >,allocator<vector<long,allocator<long> > > >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_189_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vector<long,allocator<long> >,allocator<vector<long,allocator<long> > > >::reverse_iterator* pobj;
         vector<vector<long,allocator<long> >,allocator<vector<long,allocator<long> > > >::reverse_iterator xobj = ((vector<vector<long,allocator<long> >,allocator<vector<long,allocator<long> > > >*) G__getstructoffset())->rend();
         pobj = new vector<vector<long,allocator<long> >,allocator<vector<long,allocator<long> > > >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_189_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<vector<long,allocator<long> >,allocator<vector<long,allocator<long> > > >*) G__getstructoffset())->size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_189_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<vector<long,allocator<long> >,allocator<vector<long,allocator<long> > > >*) G__getstructoffset())->max_size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_189_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<long,allocator<long> >,allocator<vector<long,allocator<long> > > >*) G__getstructoffset())->resize((vector<vector<long,allocator<long> >,allocator<vector<long,allocator<long> > > >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_189_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<long,allocator<long> >,allocator<vector<long,allocator<long> > > >*) G__getstructoffset())->resize((vector<vector<long,allocator<long> >,allocator<vector<long,allocator<long> > > >::size_type) G__int(libp->para[0]), *((vector<long,allocator<long> >*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_189_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<vector<long,allocator<long> >,allocator<vector<long,allocator<long> > > >*) G__getstructoffset())->capacity());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_189_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const vector<vector<long,allocator<long> >,allocator<vector<long,allocator<long> > > >*) G__getstructoffset())->empty());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_189_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vector<long,allocator<long> >,allocator<vector<long,allocator<long> > > >::reference obj = ((vector<vector<long,allocator<long> >,allocator<vector<long,allocator<long> > > >*) G__getstructoffset())->operator[]((vector<vector<long,allocator<long> >,allocator<vector<long,allocator<long> > > >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_189_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vector<long,allocator<long> >,allocator<vector<long,allocator<long> > > >::const_reference obj = ((const vector<vector<long,allocator<long> >,allocator<vector<long,allocator<long> > > >*) G__getstructoffset())->operator[]((vector<vector<long,allocator<long> >,allocator<vector<long,allocator<long> > > >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_189_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<vector<long,allocator<long> >,allocator<vector<long,allocator<long> > > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<vector<long,allocator<long> >,allocator<vector<long,allocator<long> > > >[n];
     } else {
       p = new((void*) gvp) vector<vector<long,allocator<long> >,allocator<vector<long,allocator<long> > > >[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<vector<long,allocator<long> >,allocator<vector<long,allocator<long> > > >;
     } else {
       p = new((void*) gvp) vector<vector<long,allocator<long> >,allocator<vector<long,allocator<long> > > >;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlElongcOallocatorlElonggRsPgRcOallocatorlEvectorlElongcOallocatorlElonggRsPgRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_189_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<vector<long,allocator<long> >,allocator<vector<long,allocator<long> > > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<vector<long,allocator<long> >,allocator<vector<long,allocator<long> > > >((vector<vector<long,allocator<long> >,allocator<vector<long,allocator<long> > > >::size_type) G__int(libp->para[0]), *(vector<long,allocator<long> >*) libp->para[1].ref);
     } else {
       p = new((void*) gvp) vector<vector<long,allocator<long> >,allocator<vector<long,allocator<long> > > >((vector<vector<long,allocator<long> >,allocator<vector<long,allocator<long> > > >::size_type) G__int(libp->para[0]), *(vector<long,allocator<long> >*) libp->para[1].ref);
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<vector<long,allocator<long> >,allocator<vector<long,allocator<long> > > >((vector<vector<long,allocator<long> >,allocator<vector<long,allocator<long> > > >::size_type) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) vector<vector<long,allocator<long> >,allocator<vector<long,allocator<long> > > >((vector<vector<long,allocator<long> >,allocator<vector<long,allocator<long> > > >::size_type) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlElongcOallocatorlElonggRsPgRcOallocatorlEvectorlElongcOallocatorlElonggRsPgRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_189_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<vector<long,allocator<long> >,allocator<vector<long,allocator<long> > > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<vector<long,allocator<long> >,allocator<vector<long,allocator<long> > > >(*(vector<vector<long,allocator<long> >,allocator<vector<long,allocator<long> > > >*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) vector<vector<long,allocator<long> >,allocator<vector<long,allocator<long> > > >(*(vector<vector<long,allocator<long> >,allocator<vector<long,allocator<long> > > >*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlElongcOallocatorlElonggRsPgRcOallocatorlEvectorlElongcOallocatorlElonggRsPgRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_189_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<vector<long,allocator<long> >,allocator<vector<long,allocator<long> > > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<vector<long,allocator<long> >,allocator<vector<long,allocator<long> > > >(*((vector<vector<long,allocator<long> >,allocator<vector<long,allocator<long> > > >::const_iterator*) G__int(libp->para[0])), *((vector<vector<long,allocator<long> >,allocator<vector<long,allocator<long> > > >::const_iterator*) G__int(libp->para[1])));
   } else {
     p = new((void*) gvp) vector<vector<long,allocator<long> >,allocator<vector<long,allocator<long> > > >(*((vector<vector<long,allocator<long> >,allocator<vector<long,allocator<long> > > >::const_iterator*) G__int(libp->para[0])), *((vector<vector<long,allocator<long> >,allocator<vector<long,allocator<long> > > >::const_iterator*) G__int(libp->para[1])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlElongcOallocatorlElonggRsPgRcOallocatorlEvectorlElongcOallocatorlElonggRsPgRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_189_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<vector<long,allocator<long> >,allocator<vector<long,allocator<long> > > >& obj = ((vector<vector<long,allocator<long> >,allocator<vector<long,allocator<long> > > >*) G__getstructoffset())->operator=(*(vector<vector<long,allocator<long> >,allocator<vector<long,allocator<long> > > >*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_189_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<long,allocator<long> >,allocator<vector<long,allocator<long> > > >*) G__getstructoffset())->reserve((vector<vector<long,allocator<long> >,allocator<vector<long,allocator<long> > > >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_189_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<long,allocator<long> >& obj = ((vector<vector<long,allocator<long> >,allocator<vector<long,allocator<long> > > >*) G__getstructoffset())->front();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_189_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<long,allocator<long> >& obj = ((vector<vector<long,allocator<long> >,allocator<vector<long,allocator<long> > > >*) G__getstructoffset())->back();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_189_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<long,allocator<long> >,allocator<vector<long,allocator<long> > > >*) G__getstructoffset())->push_back(*(vector<long,allocator<long> >*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_189_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<long,allocator<long> >,allocator<vector<long,allocator<long> > > >*) G__getstructoffset())->swap(*(vector<vector<long,allocator<long> >,allocator<vector<long,allocator<long> > > >*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_189_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vector<long,allocator<long> >,allocator<vector<long,allocator<long> > > >::iterator* pobj;
         vector<vector<long,allocator<long> >,allocator<vector<long,allocator<long> > > >::iterator xobj = ((vector<vector<long,allocator<long> >,allocator<vector<long,allocator<long> > > >*) G__getstructoffset())->insert(*((vector<vector<long,allocator<long> >,allocator<vector<long,allocator<long> > > >::iterator*) G__int(libp->para[0])), *(vector<long,allocator<long> >*) libp->para[1].ref);
         pobj = new vector<vector<long,allocator<long> >,allocator<vector<long,allocator<long> > > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_189_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<long,allocator<long> >,allocator<vector<long,allocator<long> > > >*) G__getstructoffset())->insert(*((vector<vector<long,allocator<long> >,allocator<vector<long,allocator<long> > > >::iterator*) G__int(libp->para[0])), *((vector<vector<long,allocator<long> >,allocator<vector<long,allocator<long> > > >::const_iterator*) G__int(libp->para[1]))
, *((vector<vector<long,allocator<long> >,allocator<vector<long,allocator<long> > > >::const_iterator*) G__int(libp->para[2])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_189_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<long,allocator<long> >,allocator<vector<long,allocator<long> > > >*) G__getstructoffset())->insert(*((vector<vector<long,allocator<long> >,allocator<vector<long,allocator<long> > > >::iterator*) G__int(libp->para[0])), (vector<vector<long,allocator<long> >,allocator<vector<long,allocator<long> > > >::size_type) G__int(libp->para[1])
, *(vector<long,allocator<long> >*) libp->para[2].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_189_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<long,allocator<long> >,allocator<vector<long,allocator<long> > > >*) G__getstructoffset())->pop_back();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_189_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<long,allocator<long> >,allocator<vector<long,allocator<long> > > >*) G__getstructoffset())->erase(*((vector<vector<long,allocator<long> >,allocator<vector<long,allocator<long> > > >::iterator*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_189_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<long,allocator<long> >,allocator<vector<long,allocator<long> > > >*) G__getstructoffset())->erase(*((vector<vector<long,allocator<long> >,allocator<vector<long,allocator<long> > > >::iterator*) G__int(libp->para[0])), *((vector<vector<long,allocator<long> >,allocator<vector<long,allocator<long> > > >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_189_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<long,allocator<long> >,allocator<vector<long,allocator<long> > > >*) G__getstructoffset())->clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef vector<vector<long,allocator<long> >,allocator<vector<long,allocator<long> > > > G__TvectorlEvectorlElongcOallocatorlElonggRsPgRcOallocatorlEvectorlElongcOallocatorlElonggRsPgRsPgRsPgR;
static int G__Dict_189_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (vector<vector<long,allocator<long> >,allocator<vector<long,allocator<long> > > >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((vector<vector<long,allocator<long> >,allocator<vector<long,allocator<long> > > >*) (soff+(sizeof(vector<vector<long,allocator<long> >,allocator<vector<long,allocator<long> > > >)*i)))->~G__TvectorlEvectorlElongcOallocatorlElonggRsPgRcOallocatorlEvectorlElongcOallocatorlElonggRsPgRsPgRsPgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (vector<vector<long,allocator<long> >,allocator<vector<long,allocator<long> > > >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((vector<vector<long,allocator<long> >,allocator<vector<long,allocator<long> > > >*) (soff))->~G__TvectorlEvectorlElongcOallocatorlElonggRsPgRcOallocatorlEvectorlElongcOallocatorlElonggRsPgRsPgRsPgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* vector<vector<unsigned char,allocator<unsigned char> >,allocator<vector<unsigned char,allocator<unsigned char> > > > */
static int G__Dict_193_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vector<unsigned char,allocator<unsigned char> >,allocator<vector<unsigned char,allocator<unsigned char> > > >::reference obj = ((vector<vector<unsigned char,allocator<unsigned char> >,allocator<vector<unsigned char,allocator<unsigned char> > > >*) G__getstructoffset())->at((vector<vector<unsigned char,allocator<unsigned char> >,allocator<vector<unsigned char,allocator<unsigned char> > > >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_193_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vector<unsigned char,allocator<unsigned char> >,allocator<vector<unsigned char,allocator<unsigned char> > > >::const_reference obj = ((const vector<vector<unsigned char,allocator<unsigned char> >,allocator<vector<unsigned char,allocator<unsigned char> > > >*) G__getstructoffset())->at((vector<vector<unsigned char,allocator<unsigned char> >,allocator<vector<unsigned char,allocator<unsigned char> > > >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_193_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vector<unsigned char,allocator<unsigned char> >,allocator<vector<unsigned char,allocator<unsigned char> > > >::iterator* pobj;
         vector<vector<unsigned char,allocator<unsigned char> >,allocator<vector<unsigned char,allocator<unsigned char> > > >::iterator xobj = ((vector<vector<unsigned char,allocator<unsigned char> >,allocator<vector<unsigned char,allocator<unsigned char> > > >*) G__getstructoffset())->begin();
         pobj = new vector<vector<unsigned char,allocator<unsigned char> >,allocator<vector<unsigned char,allocator<unsigned char> > > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_193_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vector<unsigned char,allocator<unsigned char> >,allocator<vector<unsigned char,allocator<unsigned char> > > >::iterator* pobj;
         vector<vector<unsigned char,allocator<unsigned char> >,allocator<vector<unsigned char,allocator<unsigned char> > > >::iterator xobj = ((vector<vector<unsigned char,allocator<unsigned char> >,allocator<vector<unsigned char,allocator<unsigned char> > > >*) G__getstructoffset())->end();
         pobj = new vector<vector<unsigned char,allocator<unsigned char> >,allocator<vector<unsigned char,allocator<unsigned char> > > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_193_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vector<unsigned char,allocator<unsigned char> >,allocator<vector<unsigned char,allocator<unsigned char> > > >::reverse_iterator* pobj;
         vector<vector<unsigned char,allocator<unsigned char> >,allocator<vector<unsigned char,allocator<unsigned char> > > >::reverse_iterator xobj = ((vector<vector<unsigned char,allocator<unsigned char> >,allocator<vector<unsigned char,allocator<unsigned char> > > >*) G__getstructoffset())->rbegin();
         pobj = new vector<vector<unsigned char,allocator<unsigned char> >,allocator<vector<unsigned char,allocator<unsigned char> > > >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_193_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vector<unsigned char,allocator<unsigned char> >,allocator<vector<unsigned char,allocator<unsigned char> > > >::reverse_iterator* pobj;
         vector<vector<unsigned char,allocator<unsigned char> >,allocator<vector<unsigned char,allocator<unsigned char> > > >::reverse_iterator xobj = ((vector<vector<unsigned char,allocator<unsigned char> >,allocator<vector<unsigned char,allocator<unsigned char> > > >*) G__getstructoffset())->rend();
         pobj = new vector<vector<unsigned char,allocator<unsigned char> >,allocator<vector<unsigned char,allocator<unsigned char> > > >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_193_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<vector<unsigned char,allocator<unsigned char> >,allocator<vector<unsigned char,allocator<unsigned char> > > >*) G__getstructoffset())->size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_193_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<vector<unsigned char,allocator<unsigned char> >,allocator<vector<unsigned char,allocator<unsigned char> > > >*) G__getstructoffset())->max_size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_193_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<unsigned char,allocator<unsigned char> >,allocator<vector<unsigned char,allocator<unsigned char> > > >*) G__getstructoffset())->resize((vector<vector<unsigned char,allocator<unsigned char> >,allocator<vector<unsigned char,allocator<unsigned char> > > >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_193_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<unsigned char,allocator<unsigned char> >,allocator<vector<unsigned char,allocator<unsigned char> > > >*) G__getstructoffset())->resize((vector<vector<unsigned char,allocator<unsigned char> >,allocator<vector<unsigned char,allocator<unsigned char> > > >::size_type) G__int(libp->para[0]), *((vector<unsigned char,allocator<unsigned char> >*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_193_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<vector<unsigned char,allocator<unsigned char> >,allocator<vector<unsigned char,allocator<unsigned char> > > >*) G__getstructoffset())->capacity());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_193_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const vector<vector<unsigned char,allocator<unsigned char> >,allocator<vector<unsigned char,allocator<unsigned char> > > >*) G__getstructoffset())->empty());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_193_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vector<unsigned char,allocator<unsigned char> >,allocator<vector<unsigned char,allocator<unsigned char> > > >::reference obj = ((vector<vector<unsigned char,allocator<unsigned char> >,allocator<vector<unsigned char,allocator<unsigned char> > > >*) G__getstructoffset())->operator[]((vector<vector<unsigned char,allocator<unsigned char> >,allocator<vector<unsigned char,allocator<unsigned char> > > >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_193_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vector<unsigned char,allocator<unsigned char> >,allocator<vector<unsigned char,allocator<unsigned char> > > >::const_reference obj = ((const vector<vector<unsigned char,allocator<unsigned char> >,allocator<vector<unsigned char,allocator<unsigned char> > > >*) G__getstructoffset())->operator[]((vector<vector<unsigned char,allocator<unsigned char> >,allocator<vector<unsigned char,allocator<unsigned char> > > >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_193_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<vector<unsigned char,allocator<unsigned char> >,allocator<vector<unsigned char,allocator<unsigned char> > > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<vector<unsigned char,allocator<unsigned char> >,allocator<vector<unsigned char,allocator<unsigned char> > > >[n];
     } else {
       p = new((void*) gvp) vector<vector<unsigned char,allocator<unsigned char> >,allocator<vector<unsigned char,allocator<unsigned char> > > >[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<vector<unsigned char,allocator<unsigned char> >,allocator<vector<unsigned char,allocator<unsigned char> > > >;
     } else {
       p = new((void*) gvp) vector<vector<unsigned char,allocator<unsigned char> >,allocator<vector<unsigned char,allocator<unsigned char> > > >;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgRcOallocatorlEvectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_193_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<vector<unsigned char,allocator<unsigned char> >,allocator<vector<unsigned char,allocator<unsigned char> > > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<vector<unsigned char,allocator<unsigned char> >,allocator<vector<unsigned char,allocator<unsigned char> > > >((vector<vector<unsigned char,allocator<unsigned char> >,allocator<vector<unsigned char,allocator<unsigned char> > > >::size_type) G__int(libp->para[0]), *(vector<unsigned char,allocator<unsigned char> >*) libp->para[1].ref);
     } else {
       p = new((void*) gvp) vector<vector<unsigned char,allocator<unsigned char> >,allocator<vector<unsigned char,allocator<unsigned char> > > >((vector<vector<unsigned char,allocator<unsigned char> >,allocator<vector<unsigned char,allocator<unsigned char> > > >::size_type) G__int(libp->para[0]), *(vector<unsigned char,allocator<unsigned char> >*) libp->para[1].ref);
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<vector<unsigned char,allocator<unsigned char> >,allocator<vector<unsigned char,allocator<unsigned char> > > >((vector<vector<unsigned char,allocator<unsigned char> >,allocator<vector<unsigned char,allocator<unsigned char> > > >::size_type) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) vector<vector<unsigned char,allocator<unsigned char> >,allocator<vector<unsigned char,allocator<unsigned char> > > >((vector<vector<unsigned char,allocator<unsigned char> >,allocator<vector<unsigned char,allocator<unsigned char> > > >::size_type) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgRcOallocatorlEvectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_193_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<vector<unsigned char,allocator<unsigned char> >,allocator<vector<unsigned char,allocator<unsigned char> > > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<vector<unsigned char,allocator<unsigned char> >,allocator<vector<unsigned char,allocator<unsigned char> > > >(*(vector<vector<unsigned char,allocator<unsigned char> >,allocator<vector<unsigned char,allocator<unsigned char> > > >*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) vector<vector<unsigned char,allocator<unsigned char> >,allocator<vector<unsigned char,allocator<unsigned char> > > >(*(vector<vector<unsigned char,allocator<unsigned char> >,allocator<vector<unsigned char,allocator<unsigned char> > > >*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgRcOallocatorlEvectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_193_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<vector<unsigned char,allocator<unsigned char> >,allocator<vector<unsigned char,allocator<unsigned char> > > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<vector<unsigned char,allocator<unsigned char> >,allocator<vector<unsigned char,allocator<unsigned char> > > >(*((vector<vector<unsigned char,allocator<unsigned char> >,allocator<vector<unsigned char,allocator<unsigned char> > > >::const_iterator*) G__int(libp->para[0])), *((vector<vector<unsigned char,allocator<unsigned char> >,allocator<vector<unsigned char,allocator<unsigned char> > > >::const_iterator*) G__int(libp->para[1])));
   } else {
     p = new((void*) gvp) vector<vector<unsigned char,allocator<unsigned char> >,allocator<vector<unsigned char,allocator<unsigned char> > > >(*((vector<vector<unsigned char,allocator<unsigned char> >,allocator<vector<unsigned char,allocator<unsigned char> > > >::const_iterator*) G__int(libp->para[0])), *((vector<vector<unsigned char,allocator<unsigned char> >,allocator<vector<unsigned char,allocator<unsigned char> > > >::const_iterator*) G__int(libp->para[1])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgRcOallocatorlEvectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_193_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<vector<unsigned char,allocator<unsigned char> >,allocator<vector<unsigned char,allocator<unsigned char> > > >& obj = ((vector<vector<unsigned char,allocator<unsigned char> >,allocator<vector<unsigned char,allocator<unsigned char> > > >*) G__getstructoffset())->operator=(*(vector<vector<unsigned char,allocator<unsigned char> >,allocator<vector<unsigned char,allocator<unsigned char> > > >*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_193_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<unsigned char,allocator<unsigned char> >,allocator<vector<unsigned char,allocator<unsigned char> > > >*) G__getstructoffset())->reserve((vector<vector<unsigned char,allocator<unsigned char> >,allocator<vector<unsigned char,allocator<unsigned char> > > >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_193_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<unsigned char,allocator<unsigned char> >& obj = ((vector<vector<unsigned char,allocator<unsigned char> >,allocator<vector<unsigned char,allocator<unsigned char> > > >*) G__getstructoffset())->front();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_193_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<unsigned char,allocator<unsigned char> >& obj = ((vector<vector<unsigned char,allocator<unsigned char> >,allocator<vector<unsigned char,allocator<unsigned char> > > >*) G__getstructoffset())->back();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_193_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<unsigned char,allocator<unsigned char> >,allocator<vector<unsigned char,allocator<unsigned char> > > >*) G__getstructoffset())->push_back(*(vector<unsigned char,allocator<unsigned char> >*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_193_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<unsigned char,allocator<unsigned char> >,allocator<vector<unsigned char,allocator<unsigned char> > > >*) G__getstructoffset())->swap(*(vector<vector<unsigned char,allocator<unsigned char> >,allocator<vector<unsigned char,allocator<unsigned char> > > >*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_193_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vector<unsigned char,allocator<unsigned char> >,allocator<vector<unsigned char,allocator<unsigned char> > > >::iterator* pobj;
         vector<vector<unsigned char,allocator<unsigned char> >,allocator<vector<unsigned char,allocator<unsigned char> > > >::iterator xobj = ((vector<vector<unsigned char,allocator<unsigned char> >,allocator<vector<unsigned char,allocator<unsigned char> > > >*) G__getstructoffset())->insert(*((vector<vector<unsigned char,allocator<unsigned char> >,allocator<vector<unsigned char,allocator<unsigned char> > > >::iterator*) G__int(libp->para[0])), *(vector<unsigned char,allocator<unsigned char> >*) libp->para[1].ref);
         pobj = new vector<vector<unsigned char,allocator<unsigned char> >,allocator<vector<unsigned char,allocator<unsigned char> > > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_193_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<unsigned char,allocator<unsigned char> >,allocator<vector<unsigned char,allocator<unsigned char> > > >*) G__getstructoffset())->insert(*((vector<vector<unsigned char,allocator<unsigned char> >,allocator<vector<unsigned char,allocator<unsigned char> > > >::iterator*) G__int(libp->para[0])), *((vector<vector<unsigned char,allocator<unsigned char> >,allocator<vector<unsigned char,allocator<unsigned char> > > >::const_iterator*) G__int(libp->para[1]))
, *((vector<vector<unsigned char,allocator<unsigned char> >,allocator<vector<unsigned char,allocator<unsigned char> > > >::const_iterator*) G__int(libp->para[2])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_193_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<unsigned char,allocator<unsigned char> >,allocator<vector<unsigned char,allocator<unsigned char> > > >*) G__getstructoffset())->insert(*((vector<vector<unsigned char,allocator<unsigned char> >,allocator<vector<unsigned char,allocator<unsigned char> > > >::iterator*) G__int(libp->para[0])), (vector<vector<unsigned char,allocator<unsigned char> >,allocator<vector<unsigned char,allocator<unsigned char> > > >::size_type) G__int(libp->para[1])
, *(vector<unsigned char,allocator<unsigned char> >*) libp->para[2].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_193_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<unsigned char,allocator<unsigned char> >,allocator<vector<unsigned char,allocator<unsigned char> > > >*) G__getstructoffset())->pop_back();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_193_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<unsigned char,allocator<unsigned char> >,allocator<vector<unsigned char,allocator<unsigned char> > > >*) G__getstructoffset())->erase(*((vector<vector<unsigned char,allocator<unsigned char> >,allocator<vector<unsigned char,allocator<unsigned char> > > >::iterator*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_193_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<unsigned char,allocator<unsigned char> >,allocator<vector<unsigned char,allocator<unsigned char> > > >*) G__getstructoffset())->erase(*((vector<vector<unsigned char,allocator<unsigned char> >,allocator<vector<unsigned char,allocator<unsigned char> > > >::iterator*) G__int(libp->para[0])), *((vector<vector<unsigned char,allocator<unsigned char> >,allocator<vector<unsigned char,allocator<unsigned char> > > >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_193_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<unsigned char,allocator<unsigned char> >,allocator<vector<unsigned char,allocator<unsigned char> > > >*) G__getstructoffset())->clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef vector<vector<unsigned char,allocator<unsigned char> >,allocator<vector<unsigned char,allocator<unsigned char> > > > G__TvectorlEvectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgRcOallocatorlEvectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgRsPgRsPgR;
static int G__Dict_193_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (vector<vector<unsigned char,allocator<unsigned char> >,allocator<vector<unsigned char,allocator<unsigned char> > > >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((vector<vector<unsigned char,allocator<unsigned char> >,allocator<vector<unsigned char,allocator<unsigned char> > > >*) (soff+(sizeof(vector<vector<unsigned char,allocator<unsigned char> >,allocator<vector<unsigned char,allocator<unsigned char> > > >)*i)))->~G__TvectorlEvectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgRcOallocatorlEvectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgRsPgRsPgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (vector<vector<unsigned char,allocator<unsigned char> >,allocator<vector<unsigned char,allocator<unsigned char> > > >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((vector<vector<unsigned char,allocator<unsigned char> >,allocator<vector<unsigned char,allocator<unsigned char> > > >*) (soff))->~G__TvectorlEvectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgRcOallocatorlEvectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgRsPgRsPgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > > */
static int G__Dict_197_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >::reference obj = ((vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >*) G__getstructoffset())->at((vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_197_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >::const_reference obj = ((const vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >*) G__getstructoffset())->at((vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_197_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >::iterator* pobj;
         vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >::iterator xobj = ((vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >*) G__getstructoffset())->begin();
         pobj = new vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_197_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >::iterator* pobj;
         vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >::iterator xobj = ((vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >*) G__getstructoffset())->end();
         pobj = new vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_197_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >::reverse_iterator* pobj;
         vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >::reverse_iterator xobj = ((vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >*) G__getstructoffset())->rbegin();
         pobj = new vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_197_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >::reverse_iterator* pobj;
         vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >::reverse_iterator xobj = ((vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >*) G__getstructoffset())->rend();
         pobj = new vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_197_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >*) G__getstructoffset())->size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_197_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >*) G__getstructoffset())->max_size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_197_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >*) G__getstructoffset())->resize((vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_197_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >*) G__getstructoffset())->resize((vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >::size_type) G__int(libp->para[0]), *((vector<unsigned short,allocator<unsigned short> >*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_197_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >*) G__getstructoffset())->capacity());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_197_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >*) G__getstructoffset())->empty());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_197_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >::reference obj = ((vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >*) G__getstructoffset())->operator[]((vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_197_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >::const_reference obj = ((const vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >*) G__getstructoffset())->operator[]((vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_197_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >[n];
     } else {
       p = new((void*) gvp) vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >;
     } else {
       p = new((void*) gvp) vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcOallocatorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_197_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >((vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >::size_type) G__int(libp->para[0]), *(vector<unsigned short,allocator<unsigned short> >*) libp->para[1].ref);
     } else {
       p = new((void*) gvp) vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >((vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >::size_type) G__int(libp->para[0]), *(vector<unsigned short,allocator<unsigned short> >*) libp->para[1].ref);
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >((vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >::size_type) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >((vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >::size_type) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcOallocatorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_197_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >(*(vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >(*(vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcOallocatorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_197_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >(*((vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >::const_iterator*) G__int(libp->para[0])), *((vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >::const_iterator*) G__int(libp->para[1])));
   } else {
     p = new((void*) gvp) vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >(*((vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >::const_iterator*) G__int(libp->para[0])), *((vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >::const_iterator*) G__int(libp->para[1])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcOallocatorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_197_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >& obj = ((vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >*) G__getstructoffset())->operator=(*(vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_197_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >*) G__getstructoffset())->reserve((vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_197_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<unsigned short,allocator<unsigned short> >& obj = ((vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >*) G__getstructoffset())->front();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_197_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<unsigned short,allocator<unsigned short> >& obj = ((vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >*) G__getstructoffset())->back();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_197_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >*) G__getstructoffset())->push_back(*(vector<unsigned short,allocator<unsigned short> >*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_197_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >*) G__getstructoffset())->swap(*(vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_197_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >::iterator* pobj;
         vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >::iterator xobj = ((vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >*) G__getstructoffset())->insert(*((vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >::iterator*) G__int(libp->para[0])), *(vector<unsigned short,allocator<unsigned short> >*) libp->para[1].ref);
         pobj = new vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_197_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >*) G__getstructoffset())->insert(*((vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >::iterator*) G__int(libp->para[0])), *((vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >::const_iterator*) G__int(libp->para[1]))
, *((vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >::const_iterator*) G__int(libp->para[2])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_197_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >*) G__getstructoffset())->insert(*((vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >::iterator*) G__int(libp->para[0])), (vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >::size_type) G__int(libp->para[1])
, *(vector<unsigned short,allocator<unsigned short> >*) libp->para[2].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_197_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >*) G__getstructoffset())->pop_back();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_197_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >*) G__getstructoffset())->erase(*((vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >::iterator*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_197_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >*) G__getstructoffset())->erase(*((vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >::iterator*) G__int(libp->para[0])), *((vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_197_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >*) G__getstructoffset())->clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > > G__TvectorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcOallocatorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRsPgRsPgR;
static int G__Dict_197_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >*) (soff+(sizeof(vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >)*i)))->~G__TvectorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcOallocatorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRsPgRsPgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >*) (soff))->~G__TvectorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcOallocatorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRsPgRsPgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* vector<vector<unsigned int,allocator<unsigned int> >,allocator<vector<unsigned int,allocator<unsigned int> > > > */
static int G__Dict_201_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vector<unsigned int,allocator<unsigned int> >,allocator<vector<unsigned int,allocator<unsigned int> > > >::reference obj = ((vector<vector<unsigned int,allocator<unsigned int> >,allocator<vector<unsigned int,allocator<unsigned int> > > >*) G__getstructoffset())->at((vector<vector<unsigned int,allocator<unsigned int> >,allocator<vector<unsigned int,allocator<unsigned int> > > >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_201_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vector<unsigned int,allocator<unsigned int> >,allocator<vector<unsigned int,allocator<unsigned int> > > >::const_reference obj = ((const vector<vector<unsigned int,allocator<unsigned int> >,allocator<vector<unsigned int,allocator<unsigned int> > > >*) G__getstructoffset())->at((vector<vector<unsigned int,allocator<unsigned int> >,allocator<vector<unsigned int,allocator<unsigned int> > > >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_201_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vector<unsigned int,allocator<unsigned int> >,allocator<vector<unsigned int,allocator<unsigned int> > > >::iterator* pobj;
         vector<vector<unsigned int,allocator<unsigned int> >,allocator<vector<unsigned int,allocator<unsigned int> > > >::iterator xobj = ((vector<vector<unsigned int,allocator<unsigned int> >,allocator<vector<unsigned int,allocator<unsigned int> > > >*) G__getstructoffset())->begin();
         pobj = new vector<vector<unsigned int,allocator<unsigned int> >,allocator<vector<unsigned int,allocator<unsigned int> > > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_201_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vector<unsigned int,allocator<unsigned int> >,allocator<vector<unsigned int,allocator<unsigned int> > > >::iterator* pobj;
         vector<vector<unsigned int,allocator<unsigned int> >,allocator<vector<unsigned int,allocator<unsigned int> > > >::iterator xobj = ((vector<vector<unsigned int,allocator<unsigned int> >,allocator<vector<unsigned int,allocator<unsigned int> > > >*) G__getstructoffset())->end();
         pobj = new vector<vector<unsigned int,allocator<unsigned int> >,allocator<vector<unsigned int,allocator<unsigned int> > > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_201_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vector<unsigned int,allocator<unsigned int> >,allocator<vector<unsigned int,allocator<unsigned int> > > >::reverse_iterator* pobj;
         vector<vector<unsigned int,allocator<unsigned int> >,allocator<vector<unsigned int,allocator<unsigned int> > > >::reverse_iterator xobj = ((vector<vector<unsigned int,allocator<unsigned int> >,allocator<vector<unsigned int,allocator<unsigned int> > > >*) G__getstructoffset())->rbegin();
         pobj = new vector<vector<unsigned int,allocator<unsigned int> >,allocator<vector<unsigned int,allocator<unsigned int> > > >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_201_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vector<unsigned int,allocator<unsigned int> >,allocator<vector<unsigned int,allocator<unsigned int> > > >::reverse_iterator* pobj;
         vector<vector<unsigned int,allocator<unsigned int> >,allocator<vector<unsigned int,allocator<unsigned int> > > >::reverse_iterator xobj = ((vector<vector<unsigned int,allocator<unsigned int> >,allocator<vector<unsigned int,allocator<unsigned int> > > >*) G__getstructoffset())->rend();
         pobj = new vector<vector<unsigned int,allocator<unsigned int> >,allocator<vector<unsigned int,allocator<unsigned int> > > >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_201_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<vector<unsigned int,allocator<unsigned int> >,allocator<vector<unsigned int,allocator<unsigned int> > > >*) G__getstructoffset())->size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_201_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<vector<unsigned int,allocator<unsigned int> >,allocator<vector<unsigned int,allocator<unsigned int> > > >*) G__getstructoffset())->max_size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_201_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<unsigned int,allocator<unsigned int> >,allocator<vector<unsigned int,allocator<unsigned int> > > >*) G__getstructoffset())->resize((vector<vector<unsigned int,allocator<unsigned int> >,allocator<vector<unsigned int,allocator<unsigned int> > > >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_201_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<unsigned int,allocator<unsigned int> >,allocator<vector<unsigned int,allocator<unsigned int> > > >*) G__getstructoffset())->resize((vector<vector<unsigned int,allocator<unsigned int> >,allocator<vector<unsigned int,allocator<unsigned int> > > >::size_type) G__int(libp->para[0]), *((vector<unsigned int,allocator<unsigned int> >*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_201_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<vector<unsigned int,allocator<unsigned int> >,allocator<vector<unsigned int,allocator<unsigned int> > > >*) G__getstructoffset())->capacity());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_201_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const vector<vector<unsigned int,allocator<unsigned int> >,allocator<vector<unsigned int,allocator<unsigned int> > > >*) G__getstructoffset())->empty());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_201_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vector<unsigned int,allocator<unsigned int> >,allocator<vector<unsigned int,allocator<unsigned int> > > >::reference obj = ((vector<vector<unsigned int,allocator<unsigned int> >,allocator<vector<unsigned int,allocator<unsigned int> > > >*) G__getstructoffset())->operator[]((vector<vector<unsigned int,allocator<unsigned int> >,allocator<vector<unsigned int,allocator<unsigned int> > > >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_201_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vector<unsigned int,allocator<unsigned int> >,allocator<vector<unsigned int,allocator<unsigned int> > > >::const_reference obj = ((const vector<vector<unsigned int,allocator<unsigned int> >,allocator<vector<unsigned int,allocator<unsigned int> > > >*) G__getstructoffset())->operator[]((vector<vector<unsigned int,allocator<unsigned int> >,allocator<vector<unsigned int,allocator<unsigned int> > > >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_201_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<vector<unsigned int,allocator<unsigned int> >,allocator<vector<unsigned int,allocator<unsigned int> > > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<vector<unsigned int,allocator<unsigned int> >,allocator<vector<unsigned int,allocator<unsigned int> > > >[n];
     } else {
       p = new((void*) gvp) vector<vector<unsigned int,allocator<unsigned int> >,allocator<vector<unsigned int,allocator<unsigned int> > > >[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<vector<unsigned int,allocator<unsigned int> >,allocator<vector<unsigned int,allocator<unsigned int> > > >;
     } else {
       p = new((void*) gvp) vector<vector<unsigned int,allocator<unsigned int> >,allocator<vector<unsigned int,allocator<unsigned int> > > >;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcOallocatorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_201_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<vector<unsigned int,allocator<unsigned int> >,allocator<vector<unsigned int,allocator<unsigned int> > > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<vector<unsigned int,allocator<unsigned int> >,allocator<vector<unsigned int,allocator<unsigned int> > > >((vector<vector<unsigned int,allocator<unsigned int> >,allocator<vector<unsigned int,allocator<unsigned int> > > >::size_type) G__int(libp->para[0]), *(vector<unsigned int,allocator<unsigned int> >*) libp->para[1].ref);
     } else {
       p = new((void*) gvp) vector<vector<unsigned int,allocator<unsigned int> >,allocator<vector<unsigned int,allocator<unsigned int> > > >((vector<vector<unsigned int,allocator<unsigned int> >,allocator<vector<unsigned int,allocator<unsigned int> > > >::size_type) G__int(libp->para[0]), *(vector<unsigned int,allocator<unsigned int> >*) libp->para[1].ref);
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<vector<unsigned int,allocator<unsigned int> >,allocator<vector<unsigned int,allocator<unsigned int> > > >((vector<vector<unsigned int,allocator<unsigned int> >,allocator<vector<unsigned int,allocator<unsigned int> > > >::size_type) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) vector<vector<unsigned int,allocator<unsigned int> >,allocator<vector<unsigned int,allocator<unsigned int> > > >((vector<vector<unsigned int,allocator<unsigned int> >,allocator<vector<unsigned int,allocator<unsigned int> > > >::size_type) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcOallocatorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_201_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<vector<unsigned int,allocator<unsigned int> >,allocator<vector<unsigned int,allocator<unsigned int> > > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<vector<unsigned int,allocator<unsigned int> >,allocator<vector<unsigned int,allocator<unsigned int> > > >(*(vector<vector<unsigned int,allocator<unsigned int> >,allocator<vector<unsigned int,allocator<unsigned int> > > >*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) vector<vector<unsigned int,allocator<unsigned int> >,allocator<vector<unsigned int,allocator<unsigned int> > > >(*(vector<vector<unsigned int,allocator<unsigned int> >,allocator<vector<unsigned int,allocator<unsigned int> > > >*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcOallocatorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_201_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<vector<unsigned int,allocator<unsigned int> >,allocator<vector<unsigned int,allocator<unsigned int> > > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<vector<unsigned int,allocator<unsigned int> >,allocator<vector<unsigned int,allocator<unsigned int> > > >(*((vector<vector<unsigned int,allocator<unsigned int> >,allocator<vector<unsigned int,allocator<unsigned int> > > >::const_iterator*) G__int(libp->para[0])), *((vector<vector<unsigned int,allocator<unsigned int> >,allocator<vector<unsigned int,allocator<unsigned int> > > >::const_iterator*) G__int(libp->para[1])));
   } else {
     p = new((void*) gvp) vector<vector<unsigned int,allocator<unsigned int> >,allocator<vector<unsigned int,allocator<unsigned int> > > >(*((vector<vector<unsigned int,allocator<unsigned int> >,allocator<vector<unsigned int,allocator<unsigned int> > > >::const_iterator*) G__int(libp->para[0])), *((vector<vector<unsigned int,allocator<unsigned int> >,allocator<vector<unsigned int,allocator<unsigned int> > > >::const_iterator*) G__int(libp->para[1])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcOallocatorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_201_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<vector<unsigned int,allocator<unsigned int> >,allocator<vector<unsigned int,allocator<unsigned int> > > >& obj = ((vector<vector<unsigned int,allocator<unsigned int> >,allocator<vector<unsigned int,allocator<unsigned int> > > >*) G__getstructoffset())->operator=(*(vector<vector<unsigned int,allocator<unsigned int> >,allocator<vector<unsigned int,allocator<unsigned int> > > >*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_201_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<unsigned int,allocator<unsigned int> >,allocator<vector<unsigned int,allocator<unsigned int> > > >*) G__getstructoffset())->reserve((vector<vector<unsigned int,allocator<unsigned int> >,allocator<vector<unsigned int,allocator<unsigned int> > > >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_201_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<unsigned int,allocator<unsigned int> >& obj = ((vector<vector<unsigned int,allocator<unsigned int> >,allocator<vector<unsigned int,allocator<unsigned int> > > >*) G__getstructoffset())->front();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_201_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<unsigned int,allocator<unsigned int> >& obj = ((vector<vector<unsigned int,allocator<unsigned int> >,allocator<vector<unsigned int,allocator<unsigned int> > > >*) G__getstructoffset())->back();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_201_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<unsigned int,allocator<unsigned int> >,allocator<vector<unsigned int,allocator<unsigned int> > > >*) G__getstructoffset())->push_back(*(vector<unsigned int,allocator<unsigned int> >*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_201_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<unsigned int,allocator<unsigned int> >,allocator<vector<unsigned int,allocator<unsigned int> > > >*) G__getstructoffset())->swap(*(vector<vector<unsigned int,allocator<unsigned int> >,allocator<vector<unsigned int,allocator<unsigned int> > > >*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_201_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vector<unsigned int,allocator<unsigned int> >,allocator<vector<unsigned int,allocator<unsigned int> > > >::iterator* pobj;
         vector<vector<unsigned int,allocator<unsigned int> >,allocator<vector<unsigned int,allocator<unsigned int> > > >::iterator xobj = ((vector<vector<unsigned int,allocator<unsigned int> >,allocator<vector<unsigned int,allocator<unsigned int> > > >*) G__getstructoffset())->insert(*((vector<vector<unsigned int,allocator<unsigned int> >,allocator<vector<unsigned int,allocator<unsigned int> > > >::iterator*) G__int(libp->para[0])), *(vector<unsigned int,allocator<unsigned int> >*) libp->para[1].ref);
         pobj = new vector<vector<unsigned int,allocator<unsigned int> >,allocator<vector<unsigned int,allocator<unsigned int> > > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_201_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<unsigned int,allocator<unsigned int> >,allocator<vector<unsigned int,allocator<unsigned int> > > >*) G__getstructoffset())->insert(*((vector<vector<unsigned int,allocator<unsigned int> >,allocator<vector<unsigned int,allocator<unsigned int> > > >::iterator*) G__int(libp->para[0])), *((vector<vector<unsigned int,allocator<unsigned int> >,allocator<vector<unsigned int,allocator<unsigned int> > > >::const_iterator*) G__int(libp->para[1]))
, *((vector<vector<unsigned int,allocator<unsigned int> >,allocator<vector<unsigned int,allocator<unsigned int> > > >::const_iterator*) G__int(libp->para[2])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_201_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<unsigned int,allocator<unsigned int> >,allocator<vector<unsigned int,allocator<unsigned int> > > >*) G__getstructoffset())->insert(*((vector<vector<unsigned int,allocator<unsigned int> >,allocator<vector<unsigned int,allocator<unsigned int> > > >::iterator*) G__int(libp->para[0])), (vector<vector<unsigned int,allocator<unsigned int> >,allocator<vector<unsigned int,allocator<unsigned int> > > >::size_type) G__int(libp->para[1])
, *(vector<unsigned int,allocator<unsigned int> >*) libp->para[2].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_201_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<unsigned int,allocator<unsigned int> >,allocator<vector<unsigned int,allocator<unsigned int> > > >*) G__getstructoffset())->pop_back();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_201_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<unsigned int,allocator<unsigned int> >,allocator<vector<unsigned int,allocator<unsigned int> > > >*) G__getstructoffset())->erase(*((vector<vector<unsigned int,allocator<unsigned int> >,allocator<vector<unsigned int,allocator<unsigned int> > > >::iterator*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_201_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<unsigned int,allocator<unsigned int> >,allocator<vector<unsigned int,allocator<unsigned int> > > >*) G__getstructoffset())->erase(*((vector<vector<unsigned int,allocator<unsigned int> >,allocator<vector<unsigned int,allocator<unsigned int> > > >::iterator*) G__int(libp->para[0])), *((vector<vector<unsigned int,allocator<unsigned int> >,allocator<vector<unsigned int,allocator<unsigned int> > > >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_201_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<unsigned int,allocator<unsigned int> >,allocator<vector<unsigned int,allocator<unsigned int> > > >*) G__getstructoffset())->clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef vector<vector<unsigned int,allocator<unsigned int> >,allocator<vector<unsigned int,allocator<unsigned int> > > > G__TvectorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcOallocatorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRsPgRsPgR;
static int G__Dict_201_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (vector<vector<unsigned int,allocator<unsigned int> >,allocator<vector<unsigned int,allocator<unsigned int> > > >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((vector<vector<unsigned int,allocator<unsigned int> >,allocator<vector<unsigned int,allocator<unsigned int> > > >*) (soff+(sizeof(vector<vector<unsigned int,allocator<unsigned int> >,allocator<vector<unsigned int,allocator<unsigned int> > > >)*i)))->~G__TvectorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcOallocatorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRsPgRsPgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (vector<vector<unsigned int,allocator<unsigned int> >,allocator<vector<unsigned int,allocator<unsigned int> > > >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((vector<vector<unsigned int,allocator<unsigned int> >,allocator<vector<unsigned int,allocator<unsigned int> > > >*) (soff))->~G__TvectorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcOallocatorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRsPgRsPgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* vector<vector<unsigned long,allocator<unsigned long> >,allocator<vector<unsigned long,allocator<unsigned long> > > > */
static int G__Dict_205_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vector<unsigned long,allocator<unsigned long> >,allocator<vector<unsigned long,allocator<unsigned long> > > >::reference obj = ((vector<vector<unsigned long,allocator<unsigned long> >,allocator<vector<unsigned long,allocator<unsigned long> > > >*) G__getstructoffset())->at((vector<vector<unsigned long,allocator<unsigned long> >,allocator<vector<unsigned long,allocator<unsigned long> > > >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_205_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vector<unsigned long,allocator<unsigned long> >,allocator<vector<unsigned long,allocator<unsigned long> > > >::const_reference obj = ((const vector<vector<unsigned long,allocator<unsigned long> >,allocator<vector<unsigned long,allocator<unsigned long> > > >*) G__getstructoffset())->at((vector<vector<unsigned long,allocator<unsigned long> >,allocator<vector<unsigned long,allocator<unsigned long> > > >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_205_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vector<unsigned long,allocator<unsigned long> >,allocator<vector<unsigned long,allocator<unsigned long> > > >::iterator* pobj;
         vector<vector<unsigned long,allocator<unsigned long> >,allocator<vector<unsigned long,allocator<unsigned long> > > >::iterator xobj = ((vector<vector<unsigned long,allocator<unsigned long> >,allocator<vector<unsigned long,allocator<unsigned long> > > >*) G__getstructoffset())->begin();
         pobj = new vector<vector<unsigned long,allocator<unsigned long> >,allocator<vector<unsigned long,allocator<unsigned long> > > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_205_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vector<unsigned long,allocator<unsigned long> >,allocator<vector<unsigned long,allocator<unsigned long> > > >::iterator* pobj;
         vector<vector<unsigned long,allocator<unsigned long> >,allocator<vector<unsigned long,allocator<unsigned long> > > >::iterator xobj = ((vector<vector<unsigned long,allocator<unsigned long> >,allocator<vector<unsigned long,allocator<unsigned long> > > >*) G__getstructoffset())->end();
         pobj = new vector<vector<unsigned long,allocator<unsigned long> >,allocator<vector<unsigned long,allocator<unsigned long> > > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_205_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vector<unsigned long,allocator<unsigned long> >,allocator<vector<unsigned long,allocator<unsigned long> > > >::reverse_iterator* pobj;
         vector<vector<unsigned long,allocator<unsigned long> >,allocator<vector<unsigned long,allocator<unsigned long> > > >::reverse_iterator xobj = ((vector<vector<unsigned long,allocator<unsigned long> >,allocator<vector<unsigned long,allocator<unsigned long> > > >*) G__getstructoffset())->rbegin();
         pobj = new vector<vector<unsigned long,allocator<unsigned long> >,allocator<vector<unsigned long,allocator<unsigned long> > > >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_205_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vector<unsigned long,allocator<unsigned long> >,allocator<vector<unsigned long,allocator<unsigned long> > > >::reverse_iterator* pobj;
         vector<vector<unsigned long,allocator<unsigned long> >,allocator<vector<unsigned long,allocator<unsigned long> > > >::reverse_iterator xobj = ((vector<vector<unsigned long,allocator<unsigned long> >,allocator<vector<unsigned long,allocator<unsigned long> > > >*) G__getstructoffset())->rend();
         pobj = new vector<vector<unsigned long,allocator<unsigned long> >,allocator<vector<unsigned long,allocator<unsigned long> > > >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_205_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<vector<unsigned long,allocator<unsigned long> >,allocator<vector<unsigned long,allocator<unsigned long> > > >*) G__getstructoffset())->size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_205_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<vector<unsigned long,allocator<unsigned long> >,allocator<vector<unsigned long,allocator<unsigned long> > > >*) G__getstructoffset())->max_size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_205_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<unsigned long,allocator<unsigned long> >,allocator<vector<unsigned long,allocator<unsigned long> > > >*) G__getstructoffset())->resize((vector<vector<unsigned long,allocator<unsigned long> >,allocator<vector<unsigned long,allocator<unsigned long> > > >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_205_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<unsigned long,allocator<unsigned long> >,allocator<vector<unsigned long,allocator<unsigned long> > > >*) G__getstructoffset())->resize((vector<vector<unsigned long,allocator<unsigned long> >,allocator<vector<unsigned long,allocator<unsigned long> > > >::size_type) G__int(libp->para[0]), *((vector<unsigned long,allocator<unsigned long> >*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_205_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<vector<unsigned long,allocator<unsigned long> >,allocator<vector<unsigned long,allocator<unsigned long> > > >*) G__getstructoffset())->capacity());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_205_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const vector<vector<unsigned long,allocator<unsigned long> >,allocator<vector<unsigned long,allocator<unsigned long> > > >*) G__getstructoffset())->empty());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_205_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vector<unsigned long,allocator<unsigned long> >,allocator<vector<unsigned long,allocator<unsigned long> > > >::reference obj = ((vector<vector<unsigned long,allocator<unsigned long> >,allocator<vector<unsigned long,allocator<unsigned long> > > >*) G__getstructoffset())->operator[]((vector<vector<unsigned long,allocator<unsigned long> >,allocator<vector<unsigned long,allocator<unsigned long> > > >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_205_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vector<unsigned long,allocator<unsigned long> >,allocator<vector<unsigned long,allocator<unsigned long> > > >::const_reference obj = ((const vector<vector<unsigned long,allocator<unsigned long> >,allocator<vector<unsigned long,allocator<unsigned long> > > >*) G__getstructoffset())->operator[]((vector<vector<unsigned long,allocator<unsigned long> >,allocator<vector<unsigned long,allocator<unsigned long> > > >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_205_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<vector<unsigned long,allocator<unsigned long> >,allocator<vector<unsigned long,allocator<unsigned long> > > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<vector<unsigned long,allocator<unsigned long> >,allocator<vector<unsigned long,allocator<unsigned long> > > >[n];
     } else {
       p = new((void*) gvp) vector<vector<unsigned long,allocator<unsigned long> >,allocator<vector<unsigned long,allocator<unsigned long> > > >[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<vector<unsigned long,allocator<unsigned long> >,allocator<vector<unsigned long,allocator<unsigned long> > > >;
     } else {
       p = new((void*) gvp) vector<vector<unsigned long,allocator<unsigned long> >,allocator<vector<unsigned long,allocator<unsigned long> > > >;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEunsignedsPlongcOallocatorlEunsignedsPlonggRsPgRcOallocatorlEvectorlEunsignedsPlongcOallocatorlEunsignedsPlonggRsPgRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_205_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<vector<unsigned long,allocator<unsigned long> >,allocator<vector<unsigned long,allocator<unsigned long> > > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<vector<unsigned long,allocator<unsigned long> >,allocator<vector<unsigned long,allocator<unsigned long> > > >((vector<vector<unsigned long,allocator<unsigned long> >,allocator<vector<unsigned long,allocator<unsigned long> > > >::size_type) G__int(libp->para[0]), *(vector<unsigned long,allocator<unsigned long> >*) libp->para[1].ref);
     } else {
       p = new((void*) gvp) vector<vector<unsigned long,allocator<unsigned long> >,allocator<vector<unsigned long,allocator<unsigned long> > > >((vector<vector<unsigned long,allocator<unsigned long> >,allocator<vector<unsigned long,allocator<unsigned long> > > >::size_type) G__int(libp->para[0]), *(vector<unsigned long,allocator<unsigned long> >*) libp->para[1].ref);
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<vector<unsigned long,allocator<unsigned long> >,allocator<vector<unsigned long,allocator<unsigned long> > > >((vector<vector<unsigned long,allocator<unsigned long> >,allocator<vector<unsigned long,allocator<unsigned long> > > >::size_type) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) vector<vector<unsigned long,allocator<unsigned long> >,allocator<vector<unsigned long,allocator<unsigned long> > > >((vector<vector<unsigned long,allocator<unsigned long> >,allocator<vector<unsigned long,allocator<unsigned long> > > >::size_type) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEunsignedsPlongcOallocatorlEunsignedsPlonggRsPgRcOallocatorlEvectorlEunsignedsPlongcOallocatorlEunsignedsPlonggRsPgRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_205_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<vector<unsigned long,allocator<unsigned long> >,allocator<vector<unsigned long,allocator<unsigned long> > > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<vector<unsigned long,allocator<unsigned long> >,allocator<vector<unsigned long,allocator<unsigned long> > > >(*(vector<vector<unsigned long,allocator<unsigned long> >,allocator<vector<unsigned long,allocator<unsigned long> > > >*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) vector<vector<unsigned long,allocator<unsigned long> >,allocator<vector<unsigned long,allocator<unsigned long> > > >(*(vector<vector<unsigned long,allocator<unsigned long> >,allocator<vector<unsigned long,allocator<unsigned long> > > >*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEunsignedsPlongcOallocatorlEunsignedsPlonggRsPgRcOallocatorlEvectorlEunsignedsPlongcOallocatorlEunsignedsPlonggRsPgRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_205_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<vector<unsigned long,allocator<unsigned long> >,allocator<vector<unsigned long,allocator<unsigned long> > > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<vector<unsigned long,allocator<unsigned long> >,allocator<vector<unsigned long,allocator<unsigned long> > > >(*((vector<vector<unsigned long,allocator<unsigned long> >,allocator<vector<unsigned long,allocator<unsigned long> > > >::const_iterator*) G__int(libp->para[0])), *((vector<vector<unsigned long,allocator<unsigned long> >,allocator<vector<unsigned long,allocator<unsigned long> > > >::const_iterator*) G__int(libp->para[1])));
   } else {
     p = new((void*) gvp) vector<vector<unsigned long,allocator<unsigned long> >,allocator<vector<unsigned long,allocator<unsigned long> > > >(*((vector<vector<unsigned long,allocator<unsigned long> >,allocator<vector<unsigned long,allocator<unsigned long> > > >::const_iterator*) G__int(libp->para[0])), *((vector<vector<unsigned long,allocator<unsigned long> >,allocator<vector<unsigned long,allocator<unsigned long> > > >::const_iterator*) G__int(libp->para[1])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEunsignedsPlongcOallocatorlEunsignedsPlonggRsPgRcOallocatorlEvectorlEunsignedsPlongcOallocatorlEunsignedsPlonggRsPgRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_205_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<vector<unsigned long,allocator<unsigned long> >,allocator<vector<unsigned long,allocator<unsigned long> > > >& obj = ((vector<vector<unsigned long,allocator<unsigned long> >,allocator<vector<unsigned long,allocator<unsigned long> > > >*) G__getstructoffset())->operator=(*(vector<vector<unsigned long,allocator<unsigned long> >,allocator<vector<unsigned long,allocator<unsigned long> > > >*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_205_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<unsigned long,allocator<unsigned long> >,allocator<vector<unsigned long,allocator<unsigned long> > > >*) G__getstructoffset())->reserve((vector<vector<unsigned long,allocator<unsigned long> >,allocator<vector<unsigned long,allocator<unsigned long> > > >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_205_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<unsigned long,allocator<unsigned long> >& obj = ((vector<vector<unsigned long,allocator<unsigned long> >,allocator<vector<unsigned long,allocator<unsigned long> > > >*) G__getstructoffset())->front();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_205_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<unsigned long,allocator<unsigned long> >& obj = ((vector<vector<unsigned long,allocator<unsigned long> >,allocator<vector<unsigned long,allocator<unsigned long> > > >*) G__getstructoffset())->back();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_205_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<unsigned long,allocator<unsigned long> >,allocator<vector<unsigned long,allocator<unsigned long> > > >*) G__getstructoffset())->push_back(*(vector<unsigned long,allocator<unsigned long> >*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_205_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<unsigned long,allocator<unsigned long> >,allocator<vector<unsigned long,allocator<unsigned long> > > >*) G__getstructoffset())->swap(*(vector<vector<unsigned long,allocator<unsigned long> >,allocator<vector<unsigned long,allocator<unsigned long> > > >*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_205_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vector<unsigned long,allocator<unsigned long> >,allocator<vector<unsigned long,allocator<unsigned long> > > >::iterator* pobj;
         vector<vector<unsigned long,allocator<unsigned long> >,allocator<vector<unsigned long,allocator<unsigned long> > > >::iterator xobj = ((vector<vector<unsigned long,allocator<unsigned long> >,allocator<vector<unsigned long,allocator<unsigned long> > > >*) G__getstructoffset())->insert(*((vector<vector<unsigned long,allocator<unsigned long> >,allocator<vector<unsigned long,allocator<unsigned long> > > >::iterator*) G__int(libp->para[0])), *(vector<unsigned long,allocator<unsigned long> >*) libp->para[1].ref);
         pobj = new vector<vector<unsigned long,allocator<unsigned long> >,allocator<vector<unsigned long,allocator<unsigned long> > > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_205_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<unsigned long,allocator<unsigned long> >,allocator<vector<unsigned long,allocator<unsigned long> > > >*) G__getstructoffset())->insert(*((vector<vector<unsigned long,allocator<unsigned long> >,allocator<vector<unsigned long,allocator<unsigned long> > > >::iterator*) G__int(libp->para[0])), *((vector<vector<unsigned long,allocator<unsigned long> >,allocator<vector<unsigned long,allocator<unsigned long> > > >::const_iterator*) G__int(libp->para[1]))
, *((vector<vector<unsigned long,allocator<unsigned long> >,allocator<vector<unsigned long,allocator<unsigned long> > > >::const_iterator*) G__int(libp->para[2])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_205_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<unsigned long,allocator<unsigned long> >,allocator<vector<unsigned long,allocator<unsigned long> > > >*) G__getstructoffset())->insert(*((vector<vector<unsigned long,allocator<unsigned long> >,allocator<vector<unsigned long,allocator<unsigned long> > > >::iterator*) G__int(libp->para[0])), (vector<vector<unsigned long,allocator<unsigned long> >,allocator<vector<unsigned long,allocator<unsigned long> > > >::size_type) G__int(libp->para[1])
, *(vector<unsigned long,allocator<unsigned long> >*) libp->para[2].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_205_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<unsigned long,allocator<unsigned long> >,allocator<vector<unsigned long,allocator<unsigned long> > > >*) G__getstructoffset())->pop_back();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_205_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<unsigned long,allocator<unsigned long> >,allocator<vector<unsigned long,allocator<unsigned long> > > >*) G__getstructoffset())->erase(*((vector<vector<unsigned long,allocator<unsigned long> >,allocator<vector<unsigned long,allocator<unsigned long> > > >::iterator*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_205_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<unsigned long,allocator<unsigned long> >,allocator<vector<unsigned long,allocator<unsigned long> > > >*) G__getstructoffset())->erase(*((vector<vector<unsigned long,allocator<unsigned long> >,allocator<vector<unsigned long,allocator<unsigned long> > > >::iterator*) G__int(libp->para[0])), *((vector<vector<unsigned long,allocator<unsigned long> >,allocator<vector<unsigned long,allocator<unsigned long> > > >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_205_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<unsigned long,allocator<unsigned long> >,allocator<vector<unsigned long,allocator<unsigned long> > > >*) G__getstructoffset())->clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef vector<vector<unsigned long,allocator<unsigned long> >,allocator<vector<unsigned long,allocator<unsigned long> > > > G__TvectorlEvectorlEunsignedsPlongcOallocatorlEunsignedsPlonggRsPgRcOallocatorlEvectorlEunsignedsPlongcOallocatorlEunsignedsPlonggRsPgRsPgRsPgR;
static int G__Dict_205_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (vector<vector<unsigned long,allocator<unsigned long> >,allocator<vector<unsigned long,allocator<unsigned long> > > >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((vector<vector<unsigned long,allocator<unsigned long> >,allocator<vector<unsigned long,allocator<unsigned long> > > >*) (soff+(sizeof(vector<vector<unsigned long,allocator<unsigned long> >,allocator<vector<unsigned long,allocator<unsigned long> > > >)*i)))->~G__TvectorlEvectorlEunsignedsPlongcOallocatorlEunsignedsPlonggRsPgRcOallocatorlEvectorlEunsignedsPlongcOallocatorlEunsignedsPlonggRsPgRsPgRsPgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (vector<vector<unsigned long,allocator<unsigned long> >,allocator<vector<unsigned long,allocator<unsigned long> > > >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((vector<vector<unsigned long,allocator<unsigned long> >,allocator<vector<unsigned long,allocator<unsigned long> > > >*) (soff))->~G__TvectorlEvectorlEunsignedsPlongcOallocatorlEunsignedsPlonggRsPgRcOallocatorlEvectorlEunsignedsPlongcOallocatorlEunsignedsPlonggRsPgRsPgRsPgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > > */
static int G__Dict_209_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::reference obj = ((vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >*) G__getstructoffset())->at((vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_209_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::const_reference obj = ((const vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >*) G__getstructoffset())->at((vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_209_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::iterator* pobj;
         vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::iterator xobj = ((vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >*) G__getstructoffset())->begin();
         pobj = new vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_209_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::iterator* pobj;
         vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::iterator xobj = ((vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >*) G__getstructoffset())->end();
         pobj = new vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_209_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::reverse_iterator* pobj;
         vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::reverse_iterator xobj = ((vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >*) G__getstructoffset())->rbegin();
         pobj = new vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_209_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::reverse_iterator* pobj;
         vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::reverse_iterator xobj = ((vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >*) G__getstructoffset())->rend();
         pobj = new vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_209_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >*) G__getstructoffset())->size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_209_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >*) G__getstructoffset())->max_size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_209_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >*) G__getstructoffset())->resize((vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_209_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >*) G__getstructoffset())->resize((vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::size_type) G__int(libp->para[0]), *((vector<float,allocator<float> >*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_209_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >*) G__getstructoffset())->capacity());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_209_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >*) G__getstructoffset())->empty());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_209_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::reference obj = ((vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >*) G__getstructoffset())->operator[]((vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_209_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::const_reference obj = ((const vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >*) G__getstructoffset())->operator[]((vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_209_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >[n];
     } else {
       p = new((void*) gvp) vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >;
     } else {
       p = new((void*) gvp) vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_209_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >((vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::size_type) G__int(libp->para[0]), *(vector<float,allocator<float> >*) libp->para[1].ref);
     } else {
       p = new((void*) gvp) vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >((vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::size_type) G__int(libp->para[0]), *(vector<float,allocator<float> >*) libp->para[1].ref);
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >((vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::size_type) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >((vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::size_type) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_209_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >(*(vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >(*(vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_209_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >(*((vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::const_iterator*) G__int(libp->para[0])), *((vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::const_iterator*) G__int(libp->para[1])));
   } else {
     p = new((void*) gvp) vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >(*((vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::const_iterator*) G__int(libp->para[0])), *((vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::const_iterator*) G__int(libp->para[1])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_209_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >& obj = ((vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >*) G__getstructoffset())->operator=(*(vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_209_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >*) G__getstructoffset())->reserve((vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_209_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<float,allocator<float> >& obj = ((vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >*) G__getstructoffset())->front();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_209_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<float,allocator<float> >& obj = ((vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >*) G__getstructoffset())->back();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_209_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >*) G__getstructoffset())->push_back(*(vector<float,allocator<float> >*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_209_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >*) G__getstructoffset())->swap(*(vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_209_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::iterator* pobj;
         vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::iterator xobj = ((vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >*) G__getstructoffset())->insert(*((vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::iterator*) G__int(libp->para[0])), *(vector<float,allocator<float> >*) libp->para[1].ref);
         pobj = new vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_209_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >*) G__getstructoffset())->insert(*((vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::iterator*) G__int(libp->para[0])), *((vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::const_iterator*) G__int(libp->para[1]))
, *((vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::const_iterator*) G__int(libp->para[2])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_209_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >*) G__getstructoffset())->insert(*((vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::iterator*) G__int(libp->para[0])), (vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::size_type) G__int(libp->para[1])
, *(vector<float,allocator<float> >*) libp->para[2].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_209_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >*) G__getstructoffset())->pop_back();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_209_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >*) G__getstructoffset())->erase(*((vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::iterator*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_209_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >*) G__getstructoffset())->erase(*((vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::iterator*) G__int(libp->para[0])), *((vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_209_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >*) G__getstructoffset())->clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > > G__TvectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR;
static int G__Dict_209_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >*) (soff+(sizeof(vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >)*i)))->~G__TvectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >*) (soff))->~G__TvectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > > */
static int G__Dict_213_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::reference obj = ((vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >*) G__getstructoffset())->at((vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_213_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::const_reference obj = ((const vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >*) G__getstructoffset())->at((vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_213_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::iterator* pobj;
         vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::iterator xobj = ((vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >*) G__getstructoffset())->begin();
         pobj = new vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_213_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::iterator* pobj;
         vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::iterator xobj = ((vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >*) G__getstructoffset())->end();
         pobj = new vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_213_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::reverse_iterator* pobj;
         vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::reverse_iterator xobj = ((vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >*) G__getstructoffset())->rbegin();
         pobj = new vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_213_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::reverse_iterator* pobj;
         vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::reverse_iterator xobj = ((vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >*) G__getstructoffset())->rend();
         pobj = new vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_213_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >*) G__getstructoffset())->size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_213_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >*) G__getstructoffset())->max_size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_213_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >*) G__getstructoffset())->resize((vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_213_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >*) G__getstructoffset())->resize((vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::size_type) G__int(libp->para[0]), *((vector<double,allocator<double> >*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_213_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >*) G__getstructoffset())->capacity());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_213_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >*) G__getstructoffset())->empty());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_213_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::reference obj = ((vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >*) G__getstructoffset())->operator[]((vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_213_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::const_reference obj = ((const vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >*) G__getstructoffset())->operator[]((vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_213_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >[n];
     } else {
       p = new((void*) gvp) vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >;
     } else {
       p = new((void*) gvp) vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_213_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >((vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::size_type) G__int(libp->para[0]), *(vector<double,allocator<double> >*) libp->para[1].ref);
     } else {
       p = new((void*) gvp) vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >((vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::size_type) G__int(libp->para[0]), *(vector<double,allocator<double> >*) libp->para[1].ref);
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >((vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::size_type) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >((vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::size_type) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_213_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >(*(vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >(*(vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_213_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >(*((vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::const_iterator*) G__int(libp->para[0])), *((vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::const_iterator*) G__int(libp->para[1])));
   } else {
     p = new((void*) gvp) vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >(*((vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::const_iterator*) G__int(libp->para[0])), *((vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::const_iterator*) G__int(libp->para[1])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_213_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >& obj = ((vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >*) G__getstructoffset())->operator=(*(vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_213_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >*) G__getstructoffset())->reserve((vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_213_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<double,allocator<double> >& obj = ((vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >*) G__getstructoffset())->front();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_213_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<double,allocator<double> >& obj = ((vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >*) G__getstructoffset())->back();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_213_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >*) G__getstructoffset())->push_back(*(vector<double,allocator<double> >*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_213_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >*) G__getstructoffset())->swap(*(vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_213_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::iterator* pobj;
         vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::iterator xobj = ((vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >*) G__getstructoffset())->insert(*((vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::iterator*) G__int(libp->para[0])), *(vector<double,allocator<double> >*) libp->para[1].ref);
         pobj = new vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_213_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >*) G__getstructoffset())->insert(*((vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::iterator*) G__int(libp->para[0])), *((vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::const_iterator*) G__int(libp->para[1]))
, *((vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::const_iterator*) G__int(libp->para[2])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_213_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >*) G__getstructoffset())->insert(*((vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::iterator*) G__int(libp->para[0])), (vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::size_type) G__int(libp->para[1])
, *(vector<double,allocator<double> >*) libp->para[2].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_213_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >*) G__getstructoffset())->pop_back();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_213_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >*) G__getstructoffset())->erase(*((vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::iterator*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_213_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >*) G__getstructoffset())->erase(*((vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::iterator*) G__int(libp->para[0])), *((vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_213_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >*) G__getstructoffset())->clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > > G__TvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR;
static int G__Dict_213_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >*) (soff+(sizeof(vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >)*i)))->~G__TvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >*) (soff))->~G__TvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* vector<vector<char*,allocator<char*> >,allocator<vector<char*,allocator<char*> > > > */
static int G__Dict_217_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vector<char*,allocator<char*> >,allocator<vector<char*,allocator<char*> > > >::reference obj = ((vector<vector<char*,allocator<char*> >,allocator<vector<char*,allocator<char*> > > >*) G__getstructoffset())->at((vector<vector<char*,allocator<char*> >,allocator<vector<char*,allocator<char*> > > >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_217_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vector<char*,allocator<char*> >,allocator<vector<char*,allocator<char*> > > >::const_reference obj = ((const vector<vector<char*,allocator<char*> >,allocator<vector<char*,allocator<char*> > > >*) G__getstructoffset())->at((vector<vector<char*,allocator<char*> >,allocator<vector<char*,allocator<char*> > > >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_217_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vector<char*,allocator<char*> >,allocator<vector<char*,allocator<char*> > > >::iterator* pobj;
         vector<vector<char*,allocator<char*> >,allocator<vector<char*,allocator<char*> > > >::iterator xobj = ((vector<vector<char*,allocator<char*> >,allocator<vector<char*,allocator<char*> > > >*) G__getstructoffset())->begin();
         pobj = new vector<vector<char*,allocator<char*> >,allocator<vector<char*,allocator<char*> > > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_217_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vector<char*,allocator<char*> >,allocator<vector<char*,allocator<char*> > > >::iterator* pobj;
         vector<vector<char*,allocator<char*> >,allocator<vector<char*,allocator<char*> > > >::iterator xobj = ((vector<vector<char*,allocator<char*> >,allocator<vector<char*,allocator<char*> > > >*) G__getstructoffset())->end();
         pobj = new vector<vector<char*,allocator<char*> >,allocator<vector<char*,allocator<char*> > > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_217_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vector<char*,allocator<char*> >,allocator<vector<char*,allocator<char*> > > >::reverse_iterator* pobj;
         vector<vector<char*,allocator<char*> >,allocator<vector<char*,allocator<char*> > > >::reverse_iterator xobj = ((vector<vector<char*,allocator<char*> >,allocator<vector<char*,allocator<char*> > > >*) G__getstructoffset())->rbegin();
         pobj = new vector<vector<char*,allocator<char*> >,allocator<vector<char*,allocator<char*> > > >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_217_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vector<char*,allocator<char*> >,allocator<vector<char*,allocator<char*> > > >::reverse_iterator* pobj;
         vector<vector<char*,allocator<char*> >,allocator<vector<char*,allocator<char*> > > >::reverse_iterator xobj = ((vector<vector<char*,allocator<char*> >,allocator<vector<char*,allocator<char*> > > >*) G__getstructoffset())->rend();
         pobj = new vector<vector<char*,allocator<char*> >,allocator<vector<char*,allocator<char*> > > >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_217_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<vector<char*,allocator<char*> >,allocator<vector<char*,allocator<char*> > > >*) G__getstructoffset())->size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_217_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<vector<char*,allocator<char*> >,allocator<vector<char*,allocator<char*> > > >*) G__getstructoffset())->max_size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_217_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<char*,allocator<char*> >,allocator<vector<char*,allocator<char*> > > >*) G__getstructoffset())->resize((vector<vector<char*,allocator<char*> >,allocator<vector<char*,allocator<char*> > > >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_217_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<char*,allocator<char*> >,allocator<vector<char*,allocator<char*> > > >*) G__getstructoffset())->resize((vector<vector<char*,allocator<char*> >,allocator<vector<char*,allocator<char*> > > >::size_type) G__int(libp->para[0]), *((vector<char*,allocator<char*> >*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_217_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<vector<char*,allocator<char*> >,allocator<vector<char*,allocator<char*> > > >*) G__getstructoffset())->capacity());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_217_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const vector<vector<char*,allocator<char*> >,allocator<vector<char*,allocator<char*> > > >*) G__getstructoffset())->empty());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_217_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vector<char*,allocator<char*> >,allocator<vector<char*,allocator<char*> > > >::reference obj = ((vector<vector<char*,allocator<char*> >,allocator<vector<char*,allocator<char*> > > >*) G__getstructoffset())->operator[]((vector<vector<char*,allocator<char*> >,allocator<vector<char*,allocator<char*> > > >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_217_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vector<char*,allocator<char*> >,allocator<vector<char*,allocator<char*> > > >::const_reference obj = ((const vector<vector<char*,allocator<char*> >,allocator<vector<char*,allocator<char*> > > >*) G__getstructoffset())->operator[]((vector<vector<char*,allocator<char*> >,allocator<vector<char*,allocator<char*> > > >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_217_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<vector<char*,allocator<char*> >,allocator<vector<char*,allocator<char*> > > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<vector<char*,allocator<char*> >,allocator<vector<char*,allocator<char*> > > >[n];
     } else {
       p = new((void*) gvp) vector<vector<char*,allocator<char*> >,allocator<vector<char*,allocator<char*> > > >[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<vector<char*,allocator<char*> >,allocator<vector<char*,allocator<char*> > > >;
     } else {
       p = new((void*) gvp) vector<vector<char*,allocator<char*> >,allocator<vector<char*,allocator<char*> > > >;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEcharmUcOallocatorlEcharmUgRsPgRcOallocatorlEvectorlEcharmUcOallocatorlEcharmUgRsPgRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_217_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<vector<char*,allocator<char*> >,allocator<vector<char*,allocator<char*> > > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<vector<char*,allocator<char*> >,allocator<vector<char*,allocator<char*> > > >((vector<vector<char*,allocator<char*> >,allocator<vector<char*,allocator<char*> > > >::size_type) G__int(libp->para[0]), *(vector<char*,allocator<char*> >*) libp->para[1].ref);
     } else {
       p = new((void*) gvp) vector<vector<char*,allocator<char*> >,allocator<vector<char*,allocator<char*> > > >((vector<vector<char*,allocator<char*> >,allocator<vector<char*,allocator<char*> > > >::size_type) G__int(libp->para[0]), *(vector<char*,allocator<char*> >*) libp->para[1].ref);
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<vector<char*,allocator<char*> >,allocator<vector<char*,allocator<char*> > > >((vector<vector<char*,allocator<char*> >,allocator<vector<char*,allocator<char*> > > >::size_type) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) vector<vector<char*,allocator<char*> >,allocator<vector<char*,allocator<char*> > > >((vector<vector<char*,allocator<char*> >,allocator<vector<char*,allocator<char*> > > >::size_type) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEcharmUcOallocatorlEcharmUgRsPgRcOallocatorlEvectorlEcharmUcOallocatorlEcharmUgRsPgRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_217_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<vector<char*,allocator<char*> >,allocator<vector<char*,allocator<char*> > > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<vector<char*,allocator<char*> >,allocator<vector<char*,allocator<char*> > > >(*(vector<vector<char*,allocator<char*> >,allocator<vector<char*,allocator<char*> > > >*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) vector<vector<char*,allocator<char*> >,allocator<vector<char*,allocator<char*> > > >(*(vector<vector<char*,allocator<char*> >,allocator<vector<char*,allocator<char*> > > >*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEcharmUcOallocatorlEcharmUgRsPgRcOallocatorlEvectorlEcharmUcOallocatorlEcharmUgRsPgRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_217_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<vector<char*,allocator<char*> >,allocator<vector<char*,allocator<char*> > > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<vector<char*,allocator<char*> >,allocator<vector<char*,allocator<char*> > > >(*((vector<vector<char*,allocator<char*> >,allocator<vector<char*,allocator<char*> > > >::const_iterator*) G__int(libp->para[0])), *((vector<vector<char*,allocator<char*> >,allocator<vector<char*,allocator<char*> > > >::const_iterator*) G__int(libp->para[1])));
   } else {
     p = new((void*) gvp) vector<vector<char*,allocator<char*> >,allocator<vector<char*,allocator<char*> > > >(*((vector<vector<char*,allocator<char*> >,allocator<vector<char*,allocator<char*> > > >::const_iterator*) G__int(libp->para[0])), *((vector<vector<char*,allocator<char*> >,allocator<vector<char*,allocator<char*> > > >::const_iterator*) G__int(libp->para[1])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEcharmUcOallocatorlEcharmUgRsPgRcOallocatorlEvectorlEcharmUcOallocatorlEcharmUgRsPgRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_217_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<vector<char*,allocator<char*> >,allocator<vector<char*,allocator<char*> > > >& obj = ((vector<vector<char*,allocator<char*> >,allocator<vector<char*,allocator<char*> > > >*) G__getstructoffset())->operator=(*(vector<vector<char*,allocator<char*> >,allocator<vector<char*,allocator<char*> > > >*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_217_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<char*,allocator<char*> >,allocator<vector<char*,allocator<char*> > > >*) G__getstructoffset())->reserve((vector<vector<char*,allocator<char*> >,allocator<vector<char*,allocator<char*> > > >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_217_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<char*,allocator<char*> >& obj = ((vector<vector<char*,allocator<char*> >,allocator<vector<char*,allocator<char*> > > >*) G__getstructoffset())->front();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_217_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<char*,allocator<char*> >& obj = ((vector<vector<char*,allocator<char*> >,allocator<vector<char*,allocator<char*> > > >*) G__getstructoffset())->back();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_217_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<char*,allocator<char*> >,allocator<vector<char*,allocator<char*> > > >*) G__getstructoffset())->push_back(*(vector<char*,allocator<char*> >*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_217_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<char*,allocator<char*> >,allocator<vector<char*,allocator<char*> > > >*) G__getstructoffset())->swap(*(vector<vector<char*,allocator<char*> >,allocator<vector<char*,allocator<char*> > > >*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_217_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vector<char*,allocator<char*> >,allocator<vector<char*,allocator<char*> > > >::iterator* pobj;
         vector<vector<char*,allocator<char*> >,allocator<vector<char*,allocator<char*> > > >::iterator xobj = ((vector<vector<char*,allocator<char*> >,allocator<vector<char*,allocator<char*> > > >*) G__getstructoffset())->insert(*((vector<vector<char*,allocator<char*> >,allocator<vector<char*,allocator<char*> > > >::iterator*) G__int(libp->para[0])), *(vector<char*,allocator<char*> >*) libp->para[1].ref);
         pobj = new vector<vector<char*,allocator<char*> >,allocator<vector<char*,allocator<char*> > > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_217_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<char*,allocator<char*> >,allocator<vector<char*,allocator<char*> > > >*) G__getstructoffset())->insert(*((vector<vector<char*,allocator<char*> >,allocator<vector<char*,allocator<char*> > > >::iterator*) G__int(libp->para[0])), *((vector<vector<char*,allocator<char*> >,allocator<vector<char*,allocator<char*> > > >::const_iterator*) G__int(libp->para[1]))
, *((vector<vector<char*,allocator<char*> >,allocator<vector<char*,allocator<char*> > > >::const_iterator*) G__int(libp->para[2])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_217_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<char*,allocator<char*> >,allocator<vector<char*,allocator<char*> > > >*) G__getstructoffset())->insert(*((vector<vector<char*,allocator<char*> >,allocator<vector<char*,allocator<char*> > > >::iterator*) G__int(libp->para[0])), (vector<vector<char*,allocator<char*> >,allocator<vector<char*,allocator<char*> > > >::size_type) G__int(libp->para[1])
, *(vector<char*,allocator<char*> >*) libp->para[2].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_217_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<char*,allocator<char*> >,allocator<vector<char*,allocator<char*> > > >*) G__getstructoffset())->pop_back();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_217_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<char*,allocator<char*> >,allocator<vector<char*,allocator<char*> > > >*) G__getstructoffset())->erase(*((vector<vector<char*,allocator<char*> >,allocator<vector<char*,allocator<char*> > > >::iterator*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_217_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<char*,allocator<char*> >,allocator<vector<char*,allocator<char*> > > >*) G__getstructoffset())->erase(*((vector<vector<char*,allocator<char*> >,allocator<vector<char*,allocator<char*> > > >::iterator*) G__int(libp->para[0])), *((vector<vector<char*,allocator<char*> >,allocator<vector<char*,allocator<char*> > > >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_217_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<char*,allocator<char*> >,allocator<vector<char*,allocator<char*> > > >*) G__getstructoffset())->clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef vector<vector<char*,allocator<char*> >,allocator<vector<char*,allocator<char*> > > > G__TvectorlEvectorlEcharmUcOallocatorlEcharmUgRsPgRcOallocatorlEvectorlEcharmUcOallocatorlEcharmUgRsPgRsPgRsPgR;
static int G__Dict_217_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (vector<vector<char*,allocator<char*> >,allocator<vector<char*,allocator<char*> > > >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((vector<vector<char*,allocator<char*> >,allocator<vector<char*,allocator<char*> > > >*) (soff+(sizeof(vector<vector<char*,allocator<char*> >,allocator<vector<char*,allocator<char*> > > >)*i)))->~G__TvectorlEvectorlEcharmUcOallocatorlEcharmUgRsPgRcOallocatorlEvectorlEcharmUcOallocatorlEcharmUgRsPgRsPgRsPgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (vector<vector<char*,allocator<char*> >,allocator<vector<char*,allocator<char*> > > >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((vector<vector<char*,allocator<char*> >,allocator<vector<char*,allocator<char*> > > >*) (soff))->~G__TvectorlEvectorlEcharmUcOallocatorlEcharmUgRsPgRcOallocatorlEvectorlEcharmUcOallocatorlEcharmUgRsPgRsPgRsPgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* vector<vector<const char*,allocator<const char*> >,allocator<vector<const char*,allocator<const char*> > > > */
static int G__Dict_225_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vector<const char*,allocator<const char*> >,allocator<vector<const char*,allocator<const char*> > > >::reference obj = ((vector<vector<const char*,allocator<const char*> >,allocator<vector<const char*,allocator<const char*> > > >*) G__getstructoffset())->at((vector<vector<const char*,allocator<const char*> >,allocator<vector<const char*,allocator<const char*> > > >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_225_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vector<const char*,allocator<const char*> >,allocator<vector<const char*,allocator<const char*> > > >::const_reference obj = ((const vector<vector<const char*,allocator<const char*> >,allocator<vector<const char*,allocator<const char*> > > >*) G__getstructoffset())->at((vector<vector<const char*,allocator<const char*> >,allocator<vector<const char*,allocator<const char*> > > >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_225_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vector<const char*,allocator<const char*> >,allocator<vector<const char*,allocator<const char*> > > >::iterator* pobj;
         vector<vector<const char*,allocator<const char*> >,allocator<vector<const char*,allocator<const char*> > > >::iterator xobj = ((vector<vector<const char*,allocator<const char*> >,allocator<vector<const char*,allocator<const char*> > > >*) G__getstructoffset())->begin();
         pobj = new vector<vector<const char*,allocator<const char*> >,allocator<vector<const char*,allocator<const char*> > > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_225_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vector<const char*,allocator<const char*> >,allocator<vector<const char*,allocator<const char*> > > >::iterator* pobj;
         vector<vector<const char*,allocator<const char*> >,allocator<vector<const char*,allocator<const char*> > > >::iterator xobj = ((vector<vector<const char*,allocator<const char*> >,allocator<vector<const char*,allocator<const char*> > > >*) G__getstructoffset())->end();
         pobj = new vector<vector<const char*,allocator<const char*> >,allocator<vector<const char*,allocator<const char*> > > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_225_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vector<const char*,allocator<const char*> >,allocator<vector<const char*,allocator<const char*> > > >::reverse_iterator* pobj;
         vector<vector<const char*,allocator<const char*> >,allocator<vector<const char*,allocator<const char*> > > >::reverse_iterator xobj = ((vector<vector<const char*,allocator<const char*> >,allocator<vector<const char*,allocator<const char*> > > >*) G__getstructoffset())->rbegin();
         pobj = new vector<vector<const char*,allocator<const char*> >,allocator<vector<const char*,allocator<const char*> > > >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_225_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vector<const char*,allocator<const char*> >,allocator<vector<const char*,allocator<const char*> > > >::reverse_iterator* pobj;
         vector<vector<const char*,allocator<const char*> >,allocator<vector<const char*,allocator<const char*> > > >::reverse_iterator xobj = ((vector<vector<const char*,allocator<const char*> >,allocator<vector<const char*,allocator<const char*> > > >*) G__getstructoffset())->rend();
         pobj = new vector<vector<const char*,allocator<const char*> >,allocator<vector<const char*,allocator<const char*> > > >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_225_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<vector<const char*,allocator<const char*> >,allocator<vector<const char*,allocator<const char*> > > >*) G__getstructoffset())->size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_225_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<vector<const char*,allocator<const char*> >,allocator<vector<const char*,allocator<const char*> > > >*) G__getstructoffset())->max_size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_225_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<const char*,allocator<const char*> >,allocator<vector<const char*,allocator<const char*> > > >*) G__getstructoffset())->resize((vector<vector<const char*,allocator<const char*> >,allocator<vector<const char*,allocator<const char*> > > >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_225_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<const char*,allocator<const char*> >,allocator<vector<const char*,allocator<const char*> > > >*) G__getstructoffset())->resize((vector<vector<const char*,allocator<const char*> >,allocator<vector<const char*,allocator<const char*> > > >::size_type) G__int(libp->para[0]), *((vector<const char*,allocator<const char*> >*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_225_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<vector<const char*,allocator<const char*> >,allocator<vector<const char*,allocator<const char*> > > >*) G__getstructoffset())->capacity());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_225_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const vector<vector<const char*,allocator<const char*> >,allocator<vector<const char*,allocator<const char*> > > >*) G__getstructoffset())->empty());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_225_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vector<const char*,allocator<const char*> >,allocator<vector<const char*,allocator<const char*> > > >::reference obj = ((vector<vector<const char*,allocator<const char*> >,allocator<vector<const char*,allocator<const char*> > > >*) G__getstructoffset())->operator[]((vector<vector<const char*,allocator<const char*> >,allocator<vector<const char*,allocator<const char*> > > >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_225_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vector<const char*,allocator<const char*> >,allocator<vector<const char*,allocator<const char*> > > >::const_reference obj = ((const vector<vector<const char*,allocator<const char*> >,allocator<vector<const char*,allocator<const char*> > > >*) G__getstructoffset())->operator[]((vector<vector<const char*,allocator<const char*> >,allocator<vector<const char*,allocator<const char*> > > >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_225_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<vector<const char*,allocator<const char*> >,allocator<vector<const char*,allocator<const char*> > > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<vector<const char*,allocator<const char*> >,allocator<vector<const char*,allocator<const char*> > > >[n];
     } else {
       p = new((void*) gvp) vector<vector<const char*,allocator<const char*> >,allocator<vector<const char*,allocator<const char*> > > >[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<vector<const char*,allocator<const char*> >,allocator<vector<const char*,allocator<const char*> > > >;
     } else {
       p = new((void*) gvp) vector<vector<const char*,allocator<const char*> >,allocator<vector<const char*,allocator<const char*> > > >;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEconstsPcharmUcOallocatorlEconstsPcharmUgRsPgRcOallocatorlEvectorlEconstsPcharmUcOallocatorlEconstsPcharmUgRsPgRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_225_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<vector<const char*,allocator<const char*> >,allocator<vector<const char*,allocator<const char*> > > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<vector<const char*,allocator<const char*> >,allocator<vector<const char*,allocator<const char*> > > >((vector<vector<const char*,allocator<const char*> >,allocator<vector<const char*,allocator<const char*> > > >::size_type) G__int(libp->para[0]), *(vector<const char*,allocator<const char*> >*) libp->para[1].ref);
     } else {
       p = new((void*) gvp) vector<vector<const char*,allocator<const char*> >,allocator<vector<const char*,allocator<const char*> > > >((vector<vector<const char*,allocator<const char*> >,allocator<vector<const char*,allocator<const char*> > > >::size_type) G__int(libp->para[0]), *(vector<const char*,allocator<const char*> >*) libp->para[1].ref);
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<vector<const char*,allocator<const char*> >,allocator<vector<const char*,allocator<const char*> > > >((vector<vector<const char*,allocator<const char*> >,allocator<vector<const char*,allocator<const char*> > > >::size_type) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) vector<vector<const char*,allocator<const char*> >,allocator<vector<const char*,allocator<const char*> > > >((vector<vector<const char*,allocator<const char*> >,allocator<vector<const char*,allocator<const char*> > > >::size_type) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEconstsPcharmUcOallocatorlEconstsPcharmUgRsPgRcOallocatorlEvectorlEconstsPcharmUcOallocatorlEconstsPcharmUgRsPgRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_225_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<vector<const char*,allocator<const char*> >,allocator<vector<const char*,allocator<const char*> > > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<vector<const char*,allocator<const char*> >,allocator<vector<const char*,allocator<const char*> > > >(*(vector<vector<const char*,allocator<const char*> >,allocator<vector<const char*,allocator<const char*> > > >*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) vector<vector<const char*,allocator<const char*> >,allocator<vector<const char*,allocator<const char*> > > >(*(vector<vector<const char*,allocator<const char*> >,allocator<vector<const char*,allocator<const char*> > > >*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEconstsPcharmUcOallocatorlEconstsPcharmUgRsPgRcOallocatorlEvectorlEconstsPcharmUcOallocatorlEconstsPcharmUgRsPgRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_225_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<vector<const char*,allocator<const char*> >,allocator<vector<const char*,allocator<const char*> > > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<vector<const char*,allocator<const char*> >,allocator<vector<const char*,allocator<const char*> > > >(*((vector<vector<const char*,allocator<const char*> >,allocator<vector<const char*,allocator<const char*> > > >::const_iterator*) G__int(libp->para[0])), *((vector<vector<const char*,allocator<const char*> >,allocator<vector<const char*,allocator<const char*> > > >::const_iterator*) G__int(libp->para[1])));
   } else {
     p = new((void*) gvp) vector<vector<const char*,allocator<const char*> >,allocator<vector<const char*,allocator<const char*> > > >(*((vector<vector<const char*,allocator<const char*> >,allocator<vector<const char*,allocator<const char*> > > >::const_iterator*) G__int(libp->para[0])), *((vector<vector<const char*,allocator<const char*> >,allocator<vector<const char*,allocator<const char*> > > >::const_iterator*) G__int(libp->para[1])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEconstsPcharmUcOallocatorlEconstsPcharmUgRsPgRcOallocatorlEvectorlEconstsPcharmUcOallocatorlEconstsPcharmUgRsPgRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_225_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<vector<const char*,allocator<const char*> >,allocator<vector<const char*,allocator<const char*> > > >& obj = ((vector<vector<const char*,allocator<const char*> >,allocator<vector<const char*,allocator<const char*> > > >*) G__getstructoffset())->operator=(*(vector<vector<const char*,allocator<const char*> >,allocator<vector<const char*,allocator<const char*> > > >*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_225_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<const char*,allocator<const char*> >,allocator<vector<const char*,allocator<const char*> > > >*) G__getstructoffset())->reserve((vector<vector<const char*,allocator<const char*> >,allocator<vector<const char*,allocator<const char*> > > >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_225_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<const char*,allocator<const char*> >& obj = ((vector<vector<const char*,allocator<const char*> >,allocator<vector<const char*,allocator<const char*> > > >*) G__getstructoffset())->front();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_225_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<const char*,allocator<const char*> >& obj = ((vector<vector<const char*,allocator<const char*> >,allocator<vector<const char*,allocator<const char*> > > >*) G__getstructoffset())->back();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_225_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<const char*,allocator<const char*> >,allocator<vector<const char*,allocator<const char*> > > >*) G__getstructoffset())->push_back(*(vector<const char*,allocator<const char*> >*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_225_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<const char*,allocator<const char*> >,allocator<vector<const char*,allocator<const char*> > > >*) G__getstructoffset())->swap(*(vector<vector<const char*,allocator<const char*> >,allocator<vector<const char*,allocator<const char*> > > >*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_225_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vector<const char*,allocator<const char*> >,allocator<vector<const char*,allocator<const char*> > > >::iterator* pobj;
         vector<vector<const char*,allocator<const char*> >,allocator<vector<const char*,allocator<const char*> > > >::iterator xobj = ((vector<vector<const char*,allocator<const char*> >,allocator<vector<const char*,allocator<const char*> > > >*) G__getstructoffset())->insert(*((vector<vector<const char*,allocator<const char*> >,allocator<vector<const char*,allocator<const char*> > > >::iterator*) G__int(libp->para[0])), *(vector<const char*,allocator<const char*> >*) libp->para[1].ref);
         pobj = new vector<vector<const char*,allocator<const char*> >,allocator<vector<const char*,allocator<const char*> > > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_225_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<const char*,allocator<const char*> >,allocator<vector<const char*,allocator<const char*> > > >*) G__getstructoffset())->insert(*((vector<vector<const char*,allocator<const char*> >,allocator<vector<const char*,allocator<const char*> > > >::iterator*) G__int(libp->para[0])), *((vector<vector<const char*,allocator<const char*> >,allocator<vector<const char*,allocator<const char*> > > >::const_iterator*) G__int(libp->para[1]))
, *((vector<vector<const char*,allocator<const char*> >,allocator<vector<const char*,allocator<const char*> > > >::const_iterator*) G__int(libp->para[2])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_225_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<const char*,allocator<const char*> >,allocator<vector<const char*,allocator<const char*> > > >*) G__getstructoffset())->insert(*((vector<vector<const char*,allocator<const char*> >,allocator<vector<const char*,allocator<const char*> > > >::iterator*) G__int(libp->para[0])), (vector<vector<const char*,allocator<const char*> >,allocator<vector<const char*,allocator<const char*> > > >::size_type) G__int(libp->para[1])
, *(vector<const char*,allocator<const char*> >*) libp->para[2].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_225_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<const char*,allocator<const char*> >,allocator<vector<const char*,allocator<const char*> > > >*) G__getstructoffset())->pop_back();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_225_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<const char*,allocator<const char*> >,allocator<vector<const char*,allocator<const char*> > > >*) G__getstructoffset())->erase(*((vector<vector<const char*,allocator<const char*> >,allocator<vector<const char*,allocator<const char*> > > >::iterator*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_225_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<const char*,allocator<const char*> >,allocator<vector<const char*,allocator<const char*> > > >*) G__getstructoffset())->erase(*((vector<vector<const char*,allocator<const char*> >,allocator<vector<const char*,allocator<const char*> > > >::iterator*) G__int(libp->para[0])), *((vector<vector<const char*,allocator<const char*> >,allocator<vector<const char*,allocator<const char*> > > >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_225_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<const char*,allocator<const char*> >,allocator<vector<const char*,allocator<const char*> > > >*) G__getstructoffset())->clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef vector<vector<const char*,allocator<const char*> >,allocator<vector<const char*,allocator<const char*> > > > G__TvectorlEvectorlEconstsPcharmUcOallocatorlEconstsPcharmUgRsPgRcOallocatorlEvectorlEconstsPcharmUcOallocatorlEconstsPcharmUgRsPgRsPgRsPgR;
static int G__Dict_225_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (vector<vector<const char*,allocator<const char*> >,allocator<vector<const char*,allocator<const char*> > > >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((vector<vector<const char*,allocator<const char*> >,allocator<vector<const char*,allocator<const char*> > > >*) (soff+(sizeof(vector<vector<const char*,allocator<const char*> >,allocator<vector<const char*,allocator<const char*> > > >)*i)))->~G__TvectorlEvectorlEconstsPcharmUcOallocatorlEconstsPcharmUgRsPgRcOallocatorlEvectorlEconstsPcharmUcOallocatorlEconstsPcharmUgRsPgRsPgRsPgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (vector<vector<const char*,allocator<const char*> >,allocator<vector<const char*,allocator<const char*> > > >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((vector<vector<const char*,allocator<const char*> >,allocator<vector<const char*,allocator<const char*> > > >*) (soff))->~G__TvectorlEvectorlEconstsPcharmUcOallocatorlEconstsPcharmUgRsPgRcOallocatorlEvectorlEconstsPcharmUcOallocatorlEconstsPcharmUgRsPgRsPgRsPgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* vector<vector<TString,allocator<TString> >,allocator<vector<TString,allocator<TString> > > > */
static int G__Dict_233_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vector<TString,allocator<TString> >,allocator<vector<TString,allocator<TString> > > >::reference obj = ((vector<vector<TString,allocator<TString> >,allocator<vector<TString,allocator<TString> > > >*) G__getstructoffset())->at((vector<vector<TString,allocator<TString> >,allocator<vector<TString,allocator<TString> > > >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_233_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vector<TString,allocator<TString> >,allocator<vector<TString,allocator<TString> > > >::const_reference obj = ((const vector<vector<TString,allocator<TString> >,allocator<vector<TString,allocator<TString> > > >*) G__getstructoffset())->at((vector<vector<TString,allocator<TString> >,allocator<vector<TString,allocator<TString> > > >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_233_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vector<TString,allocator<TString> >,allocator<vector<TString,allocator<TString> > > >::iterator* pobj;
         vector<vector<TString,allocator<TString> >,allocator<vector<TString,allocator<TString> > > >::iterator xobj = ((vector<vector<TString,allocator<TString> >,allocator<vector<TString,allocator<TString> > > >*) G__getstructoffset())->begin();
         pobj = new vector<vector<TString,allocator<TString> >,allocator<vector<TString,allocator<TString> > > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_233_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vector<TString,allocator<TString> >,allocator<vector<TString,allocator<TString> > > >::iterator* pobj;
         vector<vector<TString,allocator<TString> >,allocator<vector<TString,allocator<TString> > > >::iterator xobj = ((vector<vector<TString,allocator<TString> >,allocator<vector<TString,allocator<TString> > > >*) G__getstructoffset())->end();
         pobj = new vector<vector<TString,allocator<TString> >,allocator<vector<TString,allocator<TString> > > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_233_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vector<TString,allocator<TString> >,allocator<vector<TString,allocator<TString> > > >::reverse_iterator* pobj;
         vector<vector<TString,allocator<TString> >,allocator<vector<TString,allocator<TString> > > >::reverse_iterator xobj = ((vector<vector<TString,allocator<TString> >,allocator<vector<TString,allocator<TString> > > >*) G__getstructoffset())->rbegin();
         pobj = new vector<vector<TString,allocator<TString> >,allocator<vector<TString,allocator<TString> > > >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_233_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vector<TString,allocator<TString> >,allocator<vector<TString,allocator<TString> > > >::reverse_iterator* pobj;
         vector<vector<TString,allocator<TString> >,allocator<vector<TString,allocator<TString> > > >::reverse_iterator xobj = ((vector<vector<TString,allocator<TString> >,allocator<vector<TString,allocator<TString> > > >*) G__getstructoffset())->rend();
         pobj = new vector<vector<TString,allocator<TString> >,allocator<vector<TString,allocator<TString> > > >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_233_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<vector<TString,allocator<TString> >,allocator<vector<TString,allocator<TString> > > >*) G__getstructoffset())->size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_233_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<vector<TString,allocator<TString> >,allocator<vector<TString,allocator<TString> > > >*) G__getstructoffset())->max_size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_233_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<TString,allocator<TString> >,allocator<vector<TString,allocator<TString> > > >*) G__getstructoffset())->resize((vector<vector<TString,allocator<TString> >,allocator<vector<TString,allocator<TString> > > >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_233_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<TString,allocator<TString> >,allocator<vector<TString,allocator<TString> > > >*) G__getstructoffset())->resize((vector<vector<TString,allocator<TString> >,allocator<vector<TString,allocator<TString> > > >::size_type) G__int(libp->para[0]), *((vector<TString,allocator<TString> >*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_233_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<vector<TString,allocator<TString> >,allocator<vector<TString,allocator<TString> > > >*) G__getstructoffset())->capacity());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_233_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const vector<vector<TString,allocator<TString> >,allocator<vector<TString,allocator<TString> > > >*) G__getstructoffset())->empty());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_233_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vector<TString,allocator<TString> >,allocator<vector<TString,allocator<TString> > > >::reference obj = ((vector<vector<TString,allocator<TString> >,allocator<vector<TString,allocator<TString> > > >*) G__getstructoffset())->operator[]((vector<vector<TString,allocator<TString> >,allocator<vector<TString,allocator<TString> > > >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_233_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vector<TString,allocator<TString> >,allocator<vector<TString,allocator<TString> > > >::const_reference obj = ((const vector<vector<TString,allocator<TString> >,allocator<vector<TString,allocator<TString> > > >*) G__getstructoffset())->operator[]((vector<vector<TString,allocator<TString> >,allocator<vector<TString,allocator<TString> > > >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_233_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<vector<TString,allocator<TString> >,allocator<vector<TString,allocator<TString> > > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<vector<TString,allocator<TString> >,allocator<vector<TString,allocator<TString> > > >[n];
     } else {
       p = new((void*) gvp) vector<vector<TString,allocator<TString> >,allocator<vector<TString,allocator<TString> > > >[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<vector<TString,allocator<TString> >,allocator<vector<TString,allocator<TString> > > >;
     } else {
       p = new((void*) gvp) vector<vector<TString,allocator<TString> >,allocator<vector<TString,allocator<TString> > > >;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlETStringcOallocatorlETStringgRsPgRcOallocatorlEvectorlETStringcOallocatorlETStringgRsPgRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_233_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<vector<TString,allocator<TString> >,allocator<vector<TString,allocator<TString> > > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<vector<TString,allocator<TString> >,allocator<vector<TString,allocator<TString> > > >((vector<vector<TString,allocator<TString> >,allocator<vector<TString,allocator<TString> > > >::size_type) G__int(libp->para[0]), *(vector<TString,allocator<TString> >*) libp->para[1].ref);
     } else {
       p = new((void*) gvp) vector<vector<TString,allocator<TString> >,allocator<vector<TString,allocator<TString> > > >((vector<vector<TString,allocator<TString> >,allocator<vector<TString,allocator<TString> > > >::size_type) G__int(libp->para[0]), *(vector<TString,allocator<TString> >*) libp->para[1].ref);
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<vector<TString,allocator<TString> >,allocator<vector<TString,allocator<TString> > > >((vector<vector<TString,allocator<TString> >,allocator<vector<TString,allocator<TString> > > >::size_type) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) vector<vector<TString,allocator<TString> >,allocator<vector<TString,allocator<TString> > > >((vector<vector<TString,allocator<TString> >,allocator<vector<TString,allocator<TString> > > >::size_type) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlETStringcOallocatorlETStringgRsPgRcOallocatorlEvectorlETStringcOallocatorlETStringgRsPgRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_233_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<vector<TString,allocator<TString> >,allocator<vector<TString,allocator<TString> > > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<vector<TString,allocator<TString> >,allocator<vector<TString,allocator<TString> > > >(*(vector<vector<TString,allocator<TString> >,allocator<vector<TString,allocator<TString> > > >*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) vector<vector<TString,allocator<TString> >,allocator<vector<TString,allocator<TString> > > >(*(vector<vector<TString,allocator<TString> >,allocator<vector<TString,allocator<TString> > > >*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlETStringcOallocatorlETStringgRsPgRcOallocatorlEvectorlETStringcOallocatorlETStringgRsPgRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_233_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<vector<TString,allocator<TString> >,allocator<vector<TString,allocator<TString> > > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<vector<TString,allocator<TString> >,allocator<vector<TString,allocator<TString> > > >(*((vector<vector<TString,allocator<TString> >,allocator<vector<TString,allocator<TString> > > >::const_iterator*) G__int(libp->para[0])), *((vector<vector<TString,allocator<TString> >,allocator<vector<TString,allocator<TString> > > >::const_iterator*) G__int(libp->para[1])));
   } else {
     p = new((void*) gvp) vector<vector<TString,allocator<TString> >,allocator<vector<TString,allocator<TString> > > >(*((vector<vector<TString,allocator<TString> >,allocator<vector<TString,allocator<TString> > > >::const_iterator*) G__int(libp->para[0])), *((vector<vector<TString,allocator<TString> >,allocator<vector<TString,allocator<TString> > > >::const_iterator*) G__int(libp->para[1])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlETStringcOallocatorlETStringgRsPgRcOallocatorlEvectorlETStringcOallocatorlETStringgRsPgRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_233_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<vector<TString,allocator<TString> >,allocator<vector<TString,allocator<TString> > > >& obj = ((vector<vector<TString,allocator<TString> >,allocator<vector<TString,allocator<TString> > > >*) G__getstructoffset())->operator=(*(vector<vector<TString,allocator<TString> >,allocator<vector<TString,allocator<TString> > > >*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_233_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<TString,allocator<TString> >,allocator<vector<TString,allocator<TString> > > >*) G__getstructoffset())->reserve((vector<vector<TString,allocator<TString> >,allocator<vector<TString,allocator<TString> > > >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_233_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<TString,allocator<TString> >& obj = ((vector<vector<TString,allocator<TString> >,allocator<vector<TString,allocator<TString> > > >*) G__getstructoffset())->front();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_233_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<TString,allocator<TString> >& obj = ((vector<vector<TString,allocator<TString> >,allocator<vector<TString,allocator<TString> > > >*) G__getstructoffset())->back();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_233_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<TString,allocator<TString> >,allocator<vector<TString,allocator<TString> > > >*) G__getstructoffset())->push_back(*(vector<TString,allocator<TString> >*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_233_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<TString,allocator<TString> >,allocator<vector<TString,allocator<TString> > > >*) G__getstructoffset())->swap(*(vector<vector<TString,allocator<TString> >,allocator<vector<TString,allocator<TString> > > >*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_233_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vector<TString,allocator<TString> >,allocator<vector<TString,allocator<TString> > > >::iterator* pobj;
         vector<vector<TString,allocator<TString> >,allocator<vector<TString,allocator<TString> > > >::iterator xobj = ((vector<vector<TString,allocator<TString> >,allocator<vector<TString,allocator<TString> > > >*) G__getstructoffset())->insert(*((vector<vector<TString,allocator<TString> >,allocator<vector<TString,allocator<TString> > > >::iterator*) G__int(libp->para[0])), *(vector<TString,allocator<TString> >*) libp->para[1].ref);
         pobj = new vector<vector<TString,allocator<TString> >,allocator<vector<TString,allocator<TString> > > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_233_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<TString,allocator<TString> >,allocator<vector<TString,allocator<TString> > > >*) G__getstructoffset())->insert(*((vector<vector<TString,allocator<TString> >,allocator<vector<TString,allocator<TString> > > >::iterator*) G__int(libp->para[0])), *((vector<vector<TString,allocator<TString> >,allocator<vector<TString,allocator<TString> > > >::const_iterator*) G__int(libp->para[1]))
, *((vector<vector<TString,allocator<TString> >,allocator<vector<TString,allocator<TString> > > >::const_iterator*) G__int(libp->para[2])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_233_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<TString,allocator<TString> >,allocator<vector<TString,allocator<TString> > > >*) G__getstructoffset())->insert(*((vector<vector<TString,allocator<TString> >,allocator<vector<TString,allocator<TString> > > >::iterator*) G__int(libp->para[0])), (vector<vector<TString,allocator<TString> >,allocator<vector<TString,allocator<TString> > > >::size_type) G__int(libp->para[1])
, *(vector<TString,allocator<TString> >*) libp->para[2].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_233_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<TString,allocator<TString> >,allocator<vector<TString,allocator<TString> > > >*) G__getstructoffset())->pop_back();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_233_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<TString,allocator<TString> >,allocator<vector<TString,allocator<TString> > > >*) G__getstructoffset())->erase(*((vector<vector<TString,allocator<TString> >,allocator<vector<TString,allocator<TString> > > >::iterator*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_233_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<TString,allocator<TString> >,allocator<vector<TString,allocator<TString> > > >*) G__getstructoffset())->erase(*((vector<vector<TString,allocator<TString> >,allocator<vector<TString,allocator<TString> > > >::iterator*) G__int(libp->para[0])), *((vector<vector<TString,allocator<TString> >,allocator<vector<TString,allocator<TString> > > >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_233_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<TString,allocator<TString> >,allocator<vector<TString,allocator<TString> > > >*) G__getstructoffset())->clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef vector<vector<TString,allocator<TString> >,allocator<vector<TString,allocator<TString> > > > G__TvectorlEvectorlETStringcOallocatorlETStringgRsPgRcOallocatorlEvectorlETStringcOallocatorlETStringgRsPgRsPgRsPgR;
static int G__Dict_233_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (vector<vector<TString,allocator<TString> >,allocator<vector<TString,allocator<TString> > > >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((vector<vector<TString,allocator<TString> >,allocator<vector<TString,allocator<TString> > > >*) (soff+(sizeof(vector<vector<TString,allocator<TString> >,allocator<vector<TString,allocator<TString> > > >)*i)))->~G__TvectorlEvectorlETStringcOallocatorlETStringgRsPgRcOallocatorlEvectorlETStringcOallocatorlETStringgRsPgRsPgRsPgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (vector<vector<TString,allocator<TString> >,allocator<vector<TString,allocator<TString> > > >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((vector<vector<TString,allocator<TString> >,allocator<vector<TString,allocator<TString> > > >*) (soff))->~G__TvectorlEvectorlETStringcOallocatorlETStringgRsPgRcOallocatorlEvectorlETStringcOallocatorlETStringgRsPgRsPgRsPgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* vector<vector<long long,allocator<long long> >,allocator<vector<long long,allocator<long long> > > > */
static int G__Dict_237_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vector<long long,allocator<long long> >,allocator<vector<long long,allocator<long long> > > >::reference obj = ((vector<vector<long long,allocator<long long> >,allocator<vector<long long,allocator<long long> > > >*) G__getstructoffset())->at((vector<vector<long long,allocator<long long> >,allocator<vector<long long,allocator<long long> > > >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_237_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vector<long long,allocator<long long> >,allocator<vector<long long,allocator<long long> > > >::const_reference obj = ((const vector<vector<long long,allocator<long long> >,allocator<vector<long long,allocator<long long> > > >*) G__getstructoffset())->at((vector<vector<long long,allocator<long long> >,allocator<vector<long long,allocator<long long> > > >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_237_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vector<long long,allocator<long long> >,allocator<vector<long long,allocator<long long> > > >::iterator* pobj;
         vector<vector<long long,allocator<long long> >,allocator<vector<long long,allocator<long long> > > >::iterator xobj = ((vector<vector<long long,allocator<long long> >,allocator<vector<long long,allocator<long long> > > >*) G__getstructoffset())->begin();
         pobj = new vector<vector<long long,allocator<long long> >,allocator<vector<long long,allocator<long long> > > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_237_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vector<long long,allocator<long long> >,allocator<vector<long long,allocator<long long> > > >::iterator* pobj;
         vector<vector<long long,allocator<long long> >,allocator<vector<long long,allocator<long long> > > >::iterator xobj = ((vector<vector<long long,allocator<long long> >,allocator<vector<long long,allocator<long long> > > >*) G__getstructoffset())->end();
         pobj = new vector<vector<long long,allocator<long long> >,allocator<vector<long long,allocator<long long> > > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_237_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vector<long long,allocator<long long> >,allocator<vector<long long,allocator<long long> > > >::reverse_iterator* pobj;
         vector<vector<long long,allocator<long long> >,allocator<vector<long long,allocator<long long> > > >::reverse_iterator xobj = ((vector<vector<long long,allocator<long long> >,allocator<vector<long long,allocator<long long> > > >*) G__getstructoffset())->rbegin();
         pobj = new vector<vector<long long,allocator<long long> >,allocator<vector<long long,allocator<long long> > > >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_237_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vector<long long,allocator<long long> >,allocator<vector<long long,allocator<long long> > > >::reverse_iterator* pobj;
         vector<vector<long long,allocator<long long> >,allocator<vector<long long,allocator<long long> > > >::reverse_iterator xobj = ((vector<vector<long long,allocator<long long> >,allocator<vector<long long,allocator<long long> > > >*) G__getstructoffset())->rend();
         pobj = new vector<vector<long long,allocator<long long> >,allocator<vector<long long,allocator<long long> > > >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_237_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<vector<long long,allocator<long long> >,allocator<vector<long long,allocator<long long> > > >*) G__getstructoffset())->size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_237_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<vector<long long,allocator<long long> >,allocator<vector<long long,allocator<long long> > > >*) G__getstructoffset())->max_size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_237_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<long long,allocator<long long> >,allocator<vector<long long,allocator<long long> > > >*) G__getstructoffset())->resize((vector<vector<long long,allocator<long long> >,allocator<vector<long long,allocator<long long> > > >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_237_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<long long,allocator<long long> >,allocator<vector<long long,allocator<long long> > > >*) G__getstructoffset())->resize((vector<vector<long long,allocator<long long> >,allocator<vector<long long,allocator<long long> > > >::size_type) G__int(libp->para[0]), *((vector<long long,allocator<long long> >*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_237_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<vector<long long,allocator<long long> >,allocator<vector<long long,allocator<long long> > > >*) G__getstructoffset())->capacity());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_237_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const vector<vector<long long,allocator<long long> >,allocator<vector<long long,allocator<long long> > > >*) G__getstructoffset())->empty());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_237_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vector<long long,allocator<long long> >,allocator<vector<long long,allocator<long long> > > >::reference obj = ((vector<vector<long long,allocator<long long> >,allocator<vector<long long,allocator<long long> > > >*) G__getstructoffset())->operator[]((vector<vector<long long,allocator<long long> >,allocator<vector<long long,allocator<long long> > > >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_237_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vector<long long,allocator<long long> >,allocator<vector<long long,allocator<long long> > > >::const_reference obj = ((const vector<vector<long long,allocator<long long> >,allocator<vector<long long,allocator<long long> > > >*) G__getstructoffset())->operator[]((vector<vector<long long,allocator<long long> >,allocator<vector<long long,allocator<long long> > > >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_237_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<vector<long long,allocator<long long> >,allocator<vector<long long,allocator<long long> > > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<vector<long long,allocator<long long> >,allocator<vector<long long,allocator<long long> > > >[n];
     } else {
       p = new((void*) gvp) vector<vector<long long,allocator<long long> >,allocator<vector<long long,allocator<long long> > > >[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<vector<long long,allocator<long long> >,allocator<vector<long long,allocator<long long> > > >;
     } else {
       p = new((void*) gvp) vector<vector<long long,allocator<long long> >,allocator<vector<long long,allocator<long long> > > >;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlElongsPlongcOallocatorlElongsPlonggRsPgRcOallocatorlEvectorlElongsPlongcOallocatorlElongsPlonggRsPgRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_237_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<vector<long long,allocator<long long> >,allocator<vector<long long,allocator<long long> > > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<vector<long long,allocator<long long> >,allocator<vector<long long,allocator<long long> > > >((vector<vector<long long,allocator<long long> >,allocator<vector<long long,allocator<long long> > > >::size_type) G__int(libp->para[0]), *(vector<long long,allocator<long long> >*) libp->para[1].ref);
     } else {
       p = new((void*) gvp) vector<vector<long long,allocator<long long> >,allocator<vector<long long,allocator<long long> > > >((vector<vector<long long,allocator<long long> >,allocator<vector<long long,allocator<long long> > > >::size_type) G__int(libp->para[0]), *(vector<long long,allocator<long long> >*) libp->para[1].ref);
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<vector<long long,allocator<long long> >,allocator<vector<long long,allocator<long long> > > >((vector<vector<long long,allocator<long long> >,allocator<vector<long long,allocator<long long> > > >::size_type) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) vector<vector<long long,allocator<long long> >,allocator<vector<long long,allocator<long long> > > >((vector<vector<long long,allocator<long long> >,allocator<vector<long long,allocator<long long> > > >::size_type) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlElongsPlongcOallocatorlElongsPlonggRsPgRcOallocatorlEvectorlElongsPlongcOallocatorlElongsPlonggRsPgRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_237_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<vector<long long,allocator<long long> >,allocator<vector<long long,allocator<long long> > > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<vector<long long,allocator<long long> >,allocator<vector<long long,allocator<long long> > > >(*(vector<vector<long long,allocator<long long> >,allocator<vector<long long,allocator<long long> > > >*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) vector<vector<long long,allocator<long long> >,allocator<vector<long long,allocator<long long> > > >(*(vector<vector<long long,allocator<long long> >,allocator<vector<long long,allocator<long long> > > >*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlElongsPlongcOallocatorlElongsPlonggRsPgRcOallocatorlEvectorlElongsPlongcOallocatorlElongsPlonggRsPgRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_237_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<vector<long long,allocator<long long> >,allocator<vector<long long,allocator<long long> > > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<vector<long long,allocator<long long> >,allocator<vector<long long,allocator<long long> > > >(*((vector<vector<long long,allocator<long long> >,allocator<vector<long long,allocator<long long> > > >::const_iterator*) G__int(libp->para[0])), *((vector<vector<long long,allocator<long long> >,allocator<vector<long long,allocator<long long> > > >::const_iterator*) G__int(libp->para[1])));
   } else {
     p = new((void*) gvp) vector<vector<long long,allocator<long long> >,allocator<vector<long long,allocator<long long> > > >(*((vector<vector<long long,allocator<long long> >,allocator<vector<long long,allocator<long long> > > >::const_iterator*) G__int(libp->para[0])), *((vector<vector<long long,allocator<long long> >,allocator<vector<long long,allocator<long long> > > >::const_iterator*) G__int(libp->para[1])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlElongsPlongcOallocatorlElongsPlonggRsPgRcOallocatorlEvectorlElongsPlongcOallocatorlElongsPlonggRsPgRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_237_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<vector<long long,allocator<long long> >,allocator<vector<long long,allocator<long long> > > >& obj = ((vector<vector<long long,allocator<long long> >,allocator<vector<long long,allocator<long long> > > >*) G__getstructoffset())->operator=(*(vector<vector<long long,allocator<long long> >,allocator<vector<long long,allocator<long long> > > >*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_237_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<long long,allocator<long long> >,allocator<vector<long long,allocator<long long> > > >*) G__getstructoffset())->reserve((vector<vector<long long,allocator<long long> >,allocator<vector<long long,allocator<long long> > > >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_237_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<long long,allocator<long long> >& obj = ((vector<vector<long long,allocator<long long> >,allocator<vector<long long,allocator<long long> > > >*) G__getstructoffset())->front();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_237_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<long long,allocator<long long> >& obj = ((vector<vector<long long,allocator<long long> >,allocator<vector<long long,allocator<long long> > > >*) G__getstructoffset())->back();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_237_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<long long,allocator<long long> >,allocator<vector<long long,allocator<long long> > > >*) G__getstructoffset())->push_back(*(vector<long long,allocator<long long> >*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_237_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<long long,allocator<long long> >,allocator<vector<long long,allocator<long long> > > >*) G__getstructoffset())->swap(*(vector<vector<long long,allocator<long long> >,allocator<vector<long long,allocator<long long> > > >*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_237_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vector<long long,allocator<long long> >,allocator<vector<long long,allocator<long long> > > >::iterator* pobj;
         vector<vector<long long,allocator<long long> >,allocator<vector<long long,allocator<long long> > > >::iterator xobj = ((vector<vector<long long,allocator<long long> >,allocator<vector<long long,allocator<long long> > > >*) G__getstructoffset())->insert(*((vector<vector<long long,allocator<long long> >,allocator<vector<long long,allocator<long long> > > >::iterator*) G__int(libp->para[0])), *(vector<long long,allocator<long long> >*) libp->para[1].ref);
         pobj = new vector<vector<long long,allocator<long long> >,allocator<vector<long long,allocator<long long> > > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_237_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<long long,allocator<long long> >,allocator<vector<long long,allocator<long long> > > >*) G__getstructoffset())->insert(*((vector<vector<long long,allocator<long long> >,allocator<vector<long long,allocator<long long> > > >::iterator*) G__int(libp->para[0])), *((vector<vector<long long,allocator<long long> >,allocator<vector<long long,allocator<long long> > > >::const_iterator*) G__int(libp->para[1]))
, *((vector<vector<long long,allocator<long long> >,allocator<vector<long long,allocator<long long> > > >::const_iterator*) G__int(libp->para[2])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_237_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<long long,allocator<long long> >,allocator<vector<long long,allocator<long long> > > >*) G__getstructoffset())->insert(*((vector<vector<long long,allocator<long long> >,allocator<vector<long long,allocator<long long> > > >::iterator*) G__int(libp->para[0])), (vector<vector<long long,allocator<long long> >,allocator<vector<long long,allocator<long long> > > >::size_type) G__int(libp->para[1])
, *(vector<long long,allocator<long long> >*) libp->para[2].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_237_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<long long,allocator<long long> >,allocator<vector<long long,allocator<long long> > > >*) G__getstructoffset())->pop_back();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_237_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<long long,allocator<long long> >,allocator<vector<long long,allocator<long long> > > >*) G__getstructoffset())->erase(*((vector<vector<long long,allocator<long long> >,allocator<vector<long long,allocator<long long> > > >::iterator*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_237_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<long long,allocator<long long> >,allocator<vector<long long,allocator<long long> > > >*) G__getstructoffset())->erase(*((vector<vector<long long,allocator<long long> >,allocator<vector<long long,allocator<long long> > > >::iterator*) G__int(libp->para[0])), *((vector<vector<long long,allocator<long long> >,allocator<vector<long long,allocator<long long> > > >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_237_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<long long,allocator<long long> >,allocator<vector<long long,allocator<long long> > > >*) G__getstructoffset())->clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef vector<vector<long long,allocator<long long> >,allocator<vector<long long,allocator<long long> > > > G__TvectorlEvectorlElongsPlongcOallocatorlElongsPlonggRsPgRcOallocatorlEvectorlElongsPlongcOallocatorlElongsPlonggRsPgRsPgRsPgR;
static int G__Dict_237_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (vector<vector<long long,allocator<long long> >,allocator<vector<long long,allocator<long long> > > >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((vector<vector<long long,allocator<long long> >,allocator<vector<long long,allocator<long long> > > >*) (soff+(sizeof(vector<vector<long long,allocator<long long> >,allocator<vector<long long,allocator<long long> > > >)*i)))->~G__TvectorlEvectorlElongsPlongcOallocatorlElongsPlonggRsPgRcOallocatorlEvectorlElongsPlongcOallocatorlElongsPlonggRsPgRsPgRsPgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (vector<vector<long long,allocator<long long> >,allocator<vector<long long,allocator<long long> > > >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((vector<vector<long long,allocator<long long> >,allocator<vector<long long,allocator<long long> > > >*) (soff))->~G__TvectorlEvectorlElongsPlongcOallocatorlElongsPlonggRsPgRcOallocatorlEvectorlElongsPlongcOallocatorlElongsPlonggRsPgRsPgRsPgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* vector<vector<unsigned long long,allocator<unsigned long long> >,allocator<vector<unsigned long long,allocator<unsigned long long> > > > */
static int G__Dict_241_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vector<unsigned long long,allocator<unsigned long long> >,allocator<vector<unsigned long long,allocator<unsigned long long> > > >::reference obj = ((vector<vector<unsigned long long,allocator<unsigned long long> >,allocator<vector<unsigned long long,allocator<unsigned long long> > > >*) G__getstructoffset())->at((vector<vector<unsigned long long,allocator<unsigned long long> >,allocator<vector<unsigned long long,allocator<unsigned long long> > > >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_241_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vector<unsigned long long,allocator<unsigned long long> >,allocator<vector<unsigned long long,allocator<unsigned long long> > > >::const_reference obj = ((const vector<vector<unsigned long long,allocator<unsigned long long> >,allocator<vector<unsigned long long,allocator<unsigned long long> > > >*) G__getstructoffset())->at((vector<vector<unsigned long long,allocator<unsigned long long> >,allocator<vector<unsigned long long,allocator<unsigned long long> > > >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_241_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vector<unsigned long long,allocator<unsigned long long> >,allocator<vector<unsigned long long,allocator<unsigned long long> > > >::iterator* pobj;
         vector<vector<unsigned long long,allocator<unsigned long long> >,allocator<vector<unsigned long long,allocator<unsigned long long> > > >::iterator xobj = ((vector<vector<unsigned long long,allocator<unsigned long long> >,allocator<vector<unsigned long long,allocator<unsigned long long> > > >*) G__getstructoffset())->begin();
         pobj = new vector<vector<unsigned long long,allocator<unsigned long long> >,allocator<vector<unsigned long long,allocator<unsigned long long> > > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_241_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vector<unsigned long long,allocator<unsigned long long> >,allocator<vector<unsigned long long,allocator<unsigned long long> > > >::iterator* pobj;
         vector<vector<unsigned long long,allocator<unsigned long long> >,allocator<vector<unsigned long long,allocator<unsigned long long> > > >::iterator xobj = ((vector<vector<unsigned long long,allocator<unsigned long long> >,allocator<vector<unsigned long long,allocator<unsigned long long> > > >*) G__getstructoffset())->end();
         pobj = new vector<vector<unsigned long long,allocator<unsigned long long> >,allocator<vector<unsigned long long,allocator<unsigned long long> > > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_241_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vector<unsigned long long,allocator<unsigned long long> >,allocator<vector<unsigned long long,allocator<unsigned long long> > > >::reverse_iterator* pobj;
         vector<vector<unsigned long long,allocator<unsigned long long> >,allocator<vector<unsigned long long,allocator<unsigned long long> > > >::reverse_iterator xobj = ((vector<vector<unsigned long long,allocator<unsigned long long> >,allocator<vector<unsigned long long,allocator<unsigned long long> > > >*) G__getstructoffset())->rbegin();
         pobj = new vector<vector<unsigned long long,allocator<unsigned long long> >,allocator<vector<unsigned long long,allocator<unsigned long long> > > >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_241_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vector<unsigned long long,allocator<unsigned long long> >,allocator<vector<unsigned long long,allocator<unsigned long long> > > >::reverse_iterator* pobj;
         vector<vector<unsigned long long,allocator<unsigned long long> >,allocator<vector<unsigned long long,allocator<unsigned long long> > > >::reverse_iterator xobj = ((vector<vector<unsigned long long,allocator<unsigned long long> >,allocator<vector<unsigned long long,allocator<unsigned long long> > > >*) G__getstructoffset())->rend();
         pobj = new vector<vector<unsigned long long,allocator<unsigned long long> >,allocator<vector<unsigned long long,allocator<unsigned long long> > > >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_241_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<vector<unsigned long long,allocator<unsigned long long> >,allocator<vector<unsigned long long,allocator<unsigned long long> > > >*) G__getstructoffset())->size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_241_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<vector<unsigned long long,allocator<unsigned long long> >,allocator<vector<unsigned long long,allocator<unsigned long long> > > >*) G__getstructoffset())->max_size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_241_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<unsigned long long,allocator<unsigned long long> >,allocator<vector<unsigned long long,allocator<unsigned long long> > > >*) G__getstructoffset())->resize((vector<vector<unsigned long long,allocator<unsigned long long> >,allocator<vector<unsigned long long,allocator<unsigned long long> > > >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_241_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<unsigned long long,allocator<unsigned long long> >,allocator<vector<unsigned long long,allocator<unsigned long long> > > >*) G__getstructoffset())->resize((vector<vector<unsigned long long,allocator<unsigned long long> >,allocator<vector<unsigned long long,allocator<unsigned long long> > > >::size_type) G__int(libp->para[0]), *((vector<unsigned long long,allocator<unsigned long long> >*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_241_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<vector<unsigned long long,allocator<unsigned long long> >,allocator<vector<unsigned long long,allocator<unsigned long long> > > >*) G__getstructoffset())->capacity());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_241_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const vector<vector<unsigned long long,allocator<unsigned long long> >,allocator<vector<unsigned long long,allocator<unsigned long long> > > >*) G__getstructoffset())->empty());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_241_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vector<unsigned long long,allocator<unsigned long long> >,allocator<vector<unsigned long long,allocator<unsigned long long> > > >::reference obj = ((vector<vector<unsigned long long,allocator<unsigned long long> >,allocator<vector<unsigned long long,allocator<unsigned long long> > > >*) G__getstructoffset())->operator[]((vector<vector<unsigned long long,allocator<unsigned long long> >,allocator<vector<unsigned long long,allocator<unsigned long long> > > >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_241_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vector<unsigned long long,allocator<unsigned long long> >,allocator<vector<unsigned long long,allocator<unsigned long long> > > >::const_reference obj = ((const vector<vector<unsigned long long,allocator<unsigned long long> >,allocator<vector<unsigned long long,allocator<unsigned long long> > > >*) G__getstructoffset())->operator[]((vector<vector<unsigned long long,allocator<unsigned long long> >,allocator<vector<unsigned long long,allocator<unsigned long long> > > >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_241_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<vector<unsigned long long,allocator<unsigned long long> >,allocator<vector<unsigned long long,allocator<unsigned long long> > > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<vector<unsigned long long,allocator<unsigned long long> >,allocator<vector<unsigned long long,allocator<unsigned long long> > > >[n];
     } else {
       p = new((void*) gvp) vector<vector<unsigned long long,allocator<unsigned long long> >,allocator<vector<unsigned long long,allocator<unsigned long long> > > >[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<vector<unsigned long long,allocator<unsigned long long> >,allocator<vector<unsigned long long,allocator<unsigned long long> > > >;
     } else {
       p = new((void*) gvp) vector<vector<unsigned long long,allocator<unsigned long long> >,allocator<vector<unsigned long long,allocator<unsigned long long> > > >;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEunsignedsPlongsPlongcOallocatorlEunsignedsPlongsPlonggRsPgRcOallocatorlEvectorlEunsignedsPlongsPlongcOallocatorlEunsignedsPlongsPlonggRsPgRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_241_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<vector<unsigned long long,allocator<unsigned long long> >,allocator<vector<unsigned long long,allocator<unsigned long long> > > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<vector<unsigned long long,allocator<unsigned long long> >,allocator<vector<unsigned long long,allocator<unsigned long long> > > >((vector<vector<unsigned long long,allocator<unsigned long long> >,allocator<vector<unsigned long long,allocator<unsigned long long> > > >::size_type) G__int(libp->para[0]), *(vector<unsigned long long,allocator<unsigned long long> >*) libp->para[1].ref);
     } else {
       p = new((void*) gvp) vector<vector<unsigned long long,allocator<unsigned long long> >,allocator<vector<unsigned long long,allocator<unsigned long long> > > >((vector<vector<unsigned long long,allocator<unsigned long long> >,allocator<vector<unsigned long long,allocator<unsigned long long> > > >::size_type) G__int(libp->para[0]), *(vector<unsigned long long,allocator<unsigned long long> >*) libp->para[1].ref);
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<vector<unsigned long long,allocator<unsigned long long> >,allocator<vector<unsigned long long,allocator<unsigned long long> > > >((vector<vector<unsigned long long,allocator<unsigned long long> >,allocator<vector<unsigned long long,allocator<unsigned long long> > > >::size_type) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) vector<vector<unsigned long long,allocator<unsigned long long> >,allocator<vector<unsigned long long,allocator<unsigned long long> > > >((vector<vector<unsigned long long,allocator<unsigned long long> >,allocator<vector<unsigned long long,allocator<unsigned long long> > > >::size_type) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEunsignedsPlongsPlongcOallocatorlEunsignedsPlongsPlonggRsPgRcOallocatorlEvectorlEunsignedsPlongsPlongcOallocatorlEunsignedsPlongsPlonggRsPgRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_241_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<vector<unsigned long long,allocator<unsigned long long> >,allocator<vector<unsigned long long,allocator<unsigned long long> > > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<vector<unsigned long long,allocator<unsigned long long> >,allocator<vector<unsigned long long,allocator<unsigned long long> > > >(*(vector<vector<unsigned long long,allocator<unsigned long long> >,allocator<vector<unsigned long long,allocator<unsigned long long> > > >*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) vector<vector<unsigned long long,allocator<unsigned long long> >,allocator<vector<unsigned long long,allocator<unsigned long long> > > >(*(vector<vector<unsigned long long,allocator<unsigned long long> >,allocator<vector<unsigned long long,allocator<unsigned long long> > > >*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEunsignedsPlongsPlongcOallocatorlEunsignedsPlongsPlonggRsPgRcOallocatorlEvectorlEunsignedsPlongsPlongcOallocatorlEunsignedsPlongsPlonggRsPgRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_241_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<vector<unsigned long long,allocator<unsigned long long> >,allocator<vector<unsigned long long,allocator<unsigned long long> > > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<vector<unsigned long long,allocator<unsigned long long> >,allocator<vector<unsigned long long,allocator<unsigned long long> > > >(*((vector<vector<unsigned long long,allocator<unsigned long long> >,allocator<vector<unsigned long long,allocator<unsigned long long> > > >::const_iterator*) G__int(libp->para[0])), *((vector<vector<unsigned long long,allocator<unsigned long long> >,allocator<vector<unsigned long long,allocator<unsigned long long> > > >::const_iterator*) G__int(libp->para[1])));
   } else {
     p = new((void*) gvp) vector<vector<unsigned long long,allocator<unsigned long long> >,allocator<vector<unsigned long long,allocator<unsigned long long> > > >(*((vector<vector<unsigned long long,allocator<unsigned long long> >,allocator<vector<unsigned long long,allocator<unsigned long long> > > >::const_iterator*) G__int(libp->para[0])), *((vector<vector<unsigned long long,allocator<unsigned long long> >,allocator<vector<unsigned long long,allocator<unsigned long long> > > >::const_iterator*) G__int(libp->para[1])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEunsignedsPlongsPlongcOallocatorlEunsignedsPlongsPlonggRsPgRcOallocatorlEvectorlEunsignedsPlongsPlongcOallocatorlEunsignedsPlongsPlonggRsPgRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_241_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<vector<unsigned long long,allocator<unsigned long long> >,allocator<vector<unsigned long long,allocator<unsigned long long> > > >& obj = ((vector<vector<unsigned long long,allocator<unsigned long long> >,allocator<vector<unsigned long long,allocator<unsigned long long> > > >*) G__getstructoffset())->operator=(*(vector<vector<unsigned long long,allocator<unsigned long long> >,allocator<vector<unsigned long long,allocator<unsigned long long> > > >*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_241_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<unsigned long long,allocator<unsigned long long> >,allocator<vector<unsigned long long,allocator<unsigned long long> > > >*) G__getstructoffset())->reserve((vector<vector<unsigned long long,allocator<unsigned long long> >,allocator<vector<unsigned long long,allocator<unsigned long long> > > >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_241_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<unsigned long long,allocator<unsigned long long> >& obj = ((vector<vector<unsigned long long,allocator<unsigned long long> >,allocator<vector<unsigned long long,allocator<unsigned long long> > > >*) G__getstructoffset())->front();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_241_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<unsigned long long,allocator<unsigned long long> >& obj = ((vector<vector<unsigned long long,allocator<unsigned long long> >,allocator<vector<unsigned long long,allocator<unsigned long long> > > >*) G__getstructoffset())->back();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_241_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<unsigned long long,allocator<unsigned long long> >,allocator<vector<unsigned long long,allocator<unsigned long long> > > >*) G__getstructoffset())->push_back(*(vector<unsigned long long,allocator<unsigned long long> >*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_241_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<unsigned long long,allocator<unsigned long long> >,allocator<vector<unsigned long long,allocator<unsigned long long> > > >*) G__getstructoffset())->swap(*(vector<vector<unsigned long long,allocator<unsigned long long> >,allocator<vector<unsigned long long,allocator<unsigned long long> > > >*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_241_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vector<unsigned long long,allocator<unsigned long long> >,allocator<vector<unsigned long long,allocator<unsigned long long> > > >::iterator* pobj;
         vector<vector<unsigned long long,allocator<unsigned long long> >,allocator<vector<unsigned long long,allocator<unsigned long long> > > >::iterator xobj = ((vector<vector<unsigned long long,allocator<unsigned long long> >,allocator<vector<unsigned long long,allocator<unsigned long long> > > >*) G__getstructoffset())->insert(*((vector<vector<unsigned long long,allocator<unsigned long long> >,allocator<vector<unsigned long long,allocator<unsigned long long> > > >::iterator*) G__int(libp->para[0])), *(vector<unsigned long long,allocator<unsigned long long> >*) libp->para[1].ref);
         pobj = new vector<vector<unsigned long long,allocator<unsigned long long> >,allocator<vector<unsigned long long,allocator<unsigned long long> > > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_241_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<unsigned long long,allocator<unsigned long long> >,allocator<vector<unsigned long long,allocator<unsigned long long> > > >*) G__getstructoffset())->insert(*((vector<vector<unsigned long long,allocator<unsigned long long> >,allocator<vector<unsigned long long,allocator<unsigned long long> > > >::iterator*) G__int(libp->para[0])), *((vector<vector<unsigned long long,allocator<unsigned long long> >,allocator<vector<unsigned long long,allocator<unsigned long long> > > >::const_iterator*) G__int(libp->para[1]))
, *((vector<vector<unsigned long long,allocator<unsigned long long> >,allocator<vector<unsigned long long,allocator<unsigned long long> > > >::const_iterator*) G__int(libp->para[2])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_241_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<unsigned long long,allocator<unsigned long long> >,allocator<vector<unsigned long long,allocator<unsigned long long> > > >*) G__getstructoffset())->insert(*((vector<vector<unsigned long long,allocator<unsigned long long> >,allocator<vector<unsigned long long,allocator<unsigned long long> > > >::iterator*) G__int(libp->para[0])), (vector<vector<unsigned long long,allocator<unsigned long long> >,allocator<vector<unsigned long long,allocator<unsigned long long> > > >::size_type) G__int(libp->para[1])
, *(vector<unsigned long long,allocator<unsigned long long> >*) libp->para[2].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_241_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<unsigned long long,allocator<unsigned long long> >,allocator<vector<unsigned long long,allocator<unsigned long long> > > >*) G__getstructoffset())->pop_back();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_241_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<unsigned long long,allocator<unsigned long long> >,allocator<vector<unsigned long long,allocator<unsigned long long> > > >*) G__getstructoffset())->erase(*((vector<vector<unsigned long long,allocator<unsigned long long> >,allocator<vector<unsigned long long,allocator<unsigned long long> > > >::iterator*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_241_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<unsigned long long,allocator<unsigned long long> >,allocator<vector<unsigned long long,allocator<unsigned long long> > > >*) G__getstructoffset())->erase(*((vector<vector<unsigned long long,allocator<unsigned long long> >,allocator<vector<unsigned long long,allocator<unsigned long long> > > >::iterator*) G__int(libp->para[0])), *((vector<vector<unsigned long long,allocator<unsigned long long> >,allocator<vector<unsigned long long,allocator<unsigned long long> > > >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_241_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<unsigned long long,allocator<unsigned long long> >,allocator<vector<unsigned long long,allocator<unsigned long long> > > >*) G__getstructoffset())->clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef vector<vector<unsigned long long,allocator<unsigned long long> >,allocator<vector<unsigned long long,allocator<unsigned long long> > > > G__TvectorlEvectorlEunsignedsPlongsPlongcOallocatorlEunsignedsPlongsPlonggRsPgRcOallocatorlEvectorlEunsignedsPlongsPlongcOallocatorlEunsignedsPlongsPlonggRsPgRsPgRsPgR;
static int G__Dict_241_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (vector<vector<unsigned long long,allocator<unsigned long long> >,allocator<vector<unsigned long long,allocator<unsigned long long> > > >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((vector<vector<unsigned long long,allocator<unsigned long long> >,allocator<vector<unsigned long long,allocator<unsigned long long> > > >*) (soff+(sizeof(vector<vector<unsigned long long,allocator<unsigned long long> >,allocator<vector<unsigned long long,allocator<unsigned long long> > > >)*i)))->~G__TvectorlEvectorlEunsignedsPlongsPlongcOallocatorlEunsignedsPlongsPlonggRsPgRcOallocatorlEvectorlEunsignedsPlongsPlongcOallocatorlEunsignedsPlongsPlonggRsPgRsPgRsPgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (vector<vector<unsigned long long,allocator<unsigned long long> >,allocator<vector<unsigned long long,allocator<unsigned long long> > > >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((vector<vector<unsigned long long,allocator<unsigned long long> >,allocator<vector<unsigned long long,allocator<unsigned long long> > > >*) (soff))->~G__TvectorlEvectorlEunsignedsPlongsPlongcOallocatorlEunsignedsPlongsPlonggRsPgRcOallocatorlEvectorlEunsignedsPlongsPlongcOallocatorlEunsignedsPlongsPlonggRsPgRsPgRsPgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* vector<vector<void*,allocator<void*> >,allocator<vector<void*,allocator<void*> > > > */
static int G__Dict_245_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vector<void*,allocator<void*> >,allocator<vector<void*,allocator<void*> > > >::reference obj = ((vector<vector<void*,allocator<void*> >,allocator<vector<void*,allocator<void*> > > >*) G__getstructoffset())->at((vector<vector<void*,allocator<void*> >,allocator<vector<void*,allocator<void*> > > >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_245_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vector<void*,allocator<void*> >,allocator<vector<void*,allocator<void*> > > >::const_reference obj = ((const vector<vector<void*,allocator<void*> >,allocator<vector<void*,allocator<void*> > > >*) G__getstructoffset())->at((vector<vector<void*,allocator<void*> >,allocator<vector<void*,allocator<void*> > > >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_245_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vector<void*,allocator<void*> >,allocator<vector<void*,allocator<void*> > > >::iterator* pobj;
         vector<vector<void*,allocator<void*> >,allocator<vector<void*,allocator<void*> > > >::iterator xobj = ((vector<vector<void*,allocator<void*> >,allocator<vector<void*,allocator<void*> > > >*) G__getstructoffset())->begin();
         pobj = new vector<vector<void*,allocator<void*> >,allocator<vector<void*,allocator<void*> > > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_245_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vector<void*,allocator<void*> >,allocator<vector<void*,allocator<void*> > > >::iterator* pobj;
         vector<vector<void*,allocator<void*> >,allocator<vector<void*,allocator<void*> > > >::iterator xobj = ((vector<vector<void*,allocator<void*> >,allocator<vector<void*,allocator<void*> > > >*) G__getstructoffset())->end();
         pobj = new vector<vector<void*,allocator<void*> >,allocator<vector<void*,allocator<void*> > > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_245_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vector<void*,allocator<void*> >,allocator<vector<void*,allocator<void*> > > >::reverse_iterator* pobj;
         vector<vector<void*,allocator<void*> >,allocator<vector<void*,allocator<void*> > > >::reverse_iterator xobj = ((vector<vector<void*,allocator<void*> >,allocator<vector<void*,allocator<void*> > > >*) G__getstructoffset())->rbegin();
         pobj = new vector<vector<void*,allocator<void*> >,allocator<vector<void*,allocator<void*> > > >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_245_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vector<void*,allocator<void*> >,allocator<vector<void*,allocator<void*> > > >::reverse_iterator* pobj;
         vector<vector<void*,allocator<void*> >,allocator<vector<void*,allocator<void*> > > >::reverse_iterator xobj = ((vector<vector<void*,allocator<void*> >,allocator<vector<void*,allocator<void*> > > >*) G__getstructoffset())->rend();
         pobj = new vector<vector<void*,allocator<void*> >,allocator<vector<void*,allocator<void*> > > >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_245_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<vector<void*,allocator<void*> >,allocator<vector<void*,allocator<void*> > > >*) G__getstructoffset())->size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_245_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<vector<void*,allocator<void*> >,allocator<vector<void*,allocator<void*> > > >*) G__getstructoffset())->max_size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_245_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<void*,allocator<void*> >,allocator<vector<void*,allocator<void*> > > >*) G__getstructoffset())->resize((vector<vector<void*,allocator<void*> >,allocator<vector<void*,allocator<void*> > > >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_245_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<void*,allocator<void*> >,allocator<vector<void*,allocator<void*> > > >*) G__getstructoffset())->resize((vector<vector<void*,allocator<void*> >,allocator<vector<void*,allocator<void*> > > >::size_type) G__int(libp->para[0]), *((vector<void*,allocator<void*> >*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_245_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<vector<void*,allocator<void*> >,allocator<vector<void*,allocator<void*> > > >*) G__getstructoffset())->capacity());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_245_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const vector<vector<void*,allocator<void*> >,allocator<vector<void*,allocator<void*> > > >*) G__getstructoffset())->empty());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_245_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vector<void*,allocator<void*> >,allocator<vector<void*,allocator<void*> > > >::reference obj = ((vector<vector<void*,allocator<void*> >,allocator<vector<void*,allocator<void*> > > >*) G__getstructoffset())->operator[]((vector<vector<void*,allocator<void*> >,allocator<vector<void*,allocator<void*> > > >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_245_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vector<void*,allocator<void*> >,allocator<vector<void*,allocator<void*> > > >::const_reference obj = ((const vector<vector<void*,allocator<void*> >,allocator<vector<void*,allocator<void*> > > >*) G__getstructoffset())->operator[]((vector<vector<void*,allocator<void*> >,allocator<vector<void*,allocator<void*> > > >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_245_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<vector<void*,allocator<void*> >,allocator<vector<void*,allocator<void*> > > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<vector<void*,allocator<void*> >,allocator<vector<void*,allocator<void*> > > >[n];
     } else {
       p = new((void*) gvp) vector<vector<void*,allocator<void*> >,allocator<vector<void*,allocator<void*> > > >[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<vector<void*,allocator<void*> >,allocator<vector<void*,allocator<void*> > > >;
     } else {
       p = new((void*) gvp) vector<vector<void*,allocator<void*> >,allocator<vector<void*,allocator<void*> > > >;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEvoidmUcOallocatorlEvoidmUgRsPgRcOallocatorlEvectorlEvoidmUcOallocatorlEvoidmUgRsPgRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_245_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<vector<void*,allocator<void*> >,allocator<vector<void*,allocator<void*> > > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<vector<void*,allocator<void*> >,allocator<vector<void*,allocator<void*> > > >((vector<vector<void*,allocator<void*> >,allocator<vector<void*,allocator<void*> > > >::size_type) G__int(libp->para[0]), *(vector<void*,allocator<void*> >*) libp->para[1].ref);
     } else {
       p = new((void*) gvp) vector<vector<void*,allocator<void*> >,allocator<vector<void*,allocator<void*> > > >((vector<vector<void*,allocator<void*> >,allocator<vector<void*,allocator<void*> > > >::size_type) G__int(libp->para[0]), *(vector<void*,allocator<void*> >*) libp->para[1].ref);
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<vector<void*,allocator<void*> >,allocator<vector<void*,allocator<void*> > > >((vector<vector<void*,allocator<void*> >,allocator<vector<void*,allocator<void*> > > >::size_type) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) vector<vector<void*,allocator<void*> >,allocator<vector<void*,allocator<void*> > > >((vector<vector<void*,allocator<void*> >,allocator<vector<void*,allocator<void*> > > >::size_type) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEvoidmUcOallocatorlEvoidmUgRsPgRcOallocatorlEvectorlEvoidmUcOallocatorlEvoidmUgRsPgRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_245_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<vector<void*,allocator<void*> >,allocator<vector<void*,allocator<void*> > > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<vector<void*,allocator<void*> >,allocator<vector<void*,allocator<void*> > > >(*(vector<vector<void*,allocator<void*> >,allocator<vector<void*,allocator<void*> > > >*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) vector<vector<void*,allocator<void*> >,allocator<vector<void*,allocator<void*> > > >(*(vector<vector<void*,allocator<void*> >,allocator<vector<void*,allocator<void*> > > >*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEvoidmUcOallocatorlEvoidmUgRsPgRcOallocatorlEvectorlEvoidmUcOallocatorlEvoidmUgRsPgRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_245_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<vector<void*,allocator<void*> >,allocator<vector<void*,allocator<void*> > > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<vector<void*,allocator<void*> >,allocator<vector<void*,allocator<void*> > > >(*((vector<vector<void*,allocator<void*> >,allocator<vector<void*,allocator<void*> > > >::const_iterator*) G__int(libp->para[0])), *((vector<vector<void*,allocator<void*> >,allocator<vector<void*,allocator<void*> > > >::const_iterator*) G__int(libp->para[1])));
   } else {
     p = new((void*) gvp) vector<vector<void*,allocator<void*> >,allocator<vector<void*,allocator<void*> > > >(*((vector<vector<void*,allocator<void*> >,allocator<vector<void*,allocator<void*> > > >::const_iterator*) G__int(libp->para[0])), *((vector<vector<void*,allocator<void*> >,allocator<vector<void*,allocator<void*> > > >::const_iterator*) G__int(libp->para[1])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEvoidmUcOallocatorlEvoidmUgRsPgRcOallocatorlEvectorlEvoidmUcOallocatorlEvoidmUgRsPgRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_245_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<vector<void*,allocator<void*> >,allocator<vector<void*,allocator<void*> > > >& obj = ((vector<vector<void*,allocator<void*> >,allocator<vector<void*,allocator<void*> > > >*) G__getstructoffset())->operator=(*(vector<vector<void*,allocator<void*> >,allocator<vector<void*,allocator<void*> > > >*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_245_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<void*,allocator<void*> >,allocator<vector<void*,allocator<void*> > > >*) G__getstructoffset())->reserve((vector<vector<void*,allocator<void*> >,allocator<vector<void*,allocator<void*> > > >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_245_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<void*,allocator<void*> >& obj = ((vector<vector<void*,allocator<void*> >,allocator<vector<void*,allocator<void*> > > >*) G__getstructoffset())->front();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_245_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<void*,allocator<void*> >& obj = ((vector<vector<void*,allocator<void*> >,allocator<vector<void*,allocator<void*> > > >*) G__getstructoffset())->back();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_245_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<void*,allocator<void*> >,allocator<vector<void*,allocator<void*> > > >*) G__getstructoffset())->push_back(*(vector<void*,allocator<void*> >*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_245_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<void*,allocator<void*> >,allocator<vector<void*,allocator<void*> > > >*) G__getstructoffset())->swap(*(vector<vector<void*,allocator<void*> >,allocator<vector<void*,allocator<void*> > > >*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_245_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vector<void*,allocator<void*> >,allocator<vector<void*,allocator<void*> > > >::iterator* pobj;
         vector<vector<void*,allocator<void*> >,allocator<vector<void*,allocator<void*> > > >::iterator xobj = ((vector<vector<void*,allocator<void*> >,allocator<vector<void*,allocator<void*> > > >*) G__getstructoffset())->insert(*((vector<vector<void*,allocator<void*> >,allocator<vector<void*,allocator<void*> > > >::iterator*) G__int(libp->para[0])), *(vector<void*,allocator<void*> >*) libp->para[1].ref);
         pobj = new vector<vector<void*,allocator<void*> >,allocator<vector<void*,allocator<void*> > > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_245_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<void*,allocator<void*> >,allocator<vector<void*,allocator<void*> > > >*) G__getstructoffset())->insert(*((vector<vector<void*,allocator<void*> >,allocator<vector<void*,allocator<void*> > > >::iterator*) G__int(libp->para[0])), *((vector<vector<void*,allocator<void*> >,allocator<vector<void*,allocator<void*> > > >::const_iterator*) G__int(libp->para[1]))
, *((vector<vector<void*,allocator<void*> >,allocator<vector<void*,allocator<void*> > > >::const_iterator*) G__int(libp->para[2])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_245_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<void*,allocator<void*> >,allocator<vector<void*,allocator<void*> > > >*) G__getstructoffset())->insert(*((vector<vector<void*,allocator<void*> >,allocator<vector<void*,allocator<void*> > > >::iterator*) G__int(libp->para[0])), (vector<vector<void*,allocator<void*> >,allocator<vector<void*,allocator<void*> > > >::size_type) G__int(libp->para[1])
, *(vector<void*,allocator<void*> >*) libp->para[2].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_245_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<void*,allocator<void*> >,allocator<vector<void*,allocator<void*> > > >*) G__getstructoffset())->pop_back();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_245_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<void*,allocator<void*> >,allocator<vector<void*,allocator<void*> > > >*) G__getstructoffset())->erase(*((vector<vector<void*,allocator<void*> >,allocator<vector<void*,allocator<void*> > > >::iterator*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_245_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<void*,allocator<void*> >,allocator<vector<void*,allocator<void*> > > >*) G__getstructoffset())->erase(*((vector<vector<void*,allocator<void*> >,allocator<vector<void*,allocator<void*> > > >::iterator*) G__int(libp->para[0])), *((vector<vector<void*,allocator<void*> >,allocator<vector<void*,allocator<void*> > > >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_245_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<void*,allocator<void*> >,allocator<vector<void*,allocator<void*> > > >*) G__getstructoffset())->clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef vector<vector<void*,allocator<void*> >,allocator<vector<void*,allocator<void*> > > > G__TvectorlEvectorlEvoidmUcOallocatorlEvoidmUgRsPgRcOallocatorlEvectorlEvoidmUcOallocatorlEvoidmUgRsPgRsPgRsPgR;
static int G__Dict_245_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (vector<vector<void*,allocator<void*> >,allocator<vector<void*,allocator<void*> > > >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((vector<vector<void*,allocator<void*> >,allocator<vector<void*,allocator<void*> > > >*) (soff+(sizeof(vector<vector<void*,allocator<void*> >,allocator<vector<void*,allocator<void*> > > >)*i)))->~G__TvectorlEvectorlEvoidmUcOallocatorlEvoidmUgRsPgRcOallocatorlEvectorlEvoidmUcOallocatorlEvoidmUgRsPgRsPgRsPgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (vector<vector<void*,allocator<void*> >,allocator<vector<void*,allocator<void*> > > >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((vector<vector<void*,allocator<void*> >,allocator<vector<void*,allocator<void*> > > >*) (soff))->~G__TvectorlEvectorlEvoidmUcOallocatorlEvoidmUgRsPgRcOallocatorlEvectorlEvoidmUcOallocatorlEvoidmUgRsPgRsPgRsPgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > > */

/* vector<vector<bool,allocator<bool> >,allocator<vector<bool,allocator<bool> > > > */

/* vector<vector<char,allocator<char> >,allocator<vector<char,allocator<char> > > > */

/* vector<vector<short,allocator<short> >,allocator<vector<short,allocator<short> > > > */

/* vector<vector<long,allocator<long> >,allocator<vector<long,allocator<long> > > > */

/* vector<vector<unsigned char,allocator<unsigned char> >,allocator<vector<unsigned char,allocator<unsigned char> > > > */

/* vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > > */

/* vector<vector<unsigned int,allocator<unsigned int> >,allocator<vector<unsigned int,allocator<unsigned int> > > > */

/* vector<vector<unsigned long,allocator<unsigned long> >,allocator<vector<unsigned long,allocator<unsigned long> > > > */

/* vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > > */

/* vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > > */

/* vector<vector<char*,allocator<char*> >,allocator<vector<char*,allocator<char*> > > > */

/* vector<vector<const char*,allocator<const char*> >,allocator<vector<const char*,allocator<const char*> > > > */

/* vector<vector<TString,allocator<TString> >,allocator<vector<TString,allocator<TString> > > > */

/* vector<vector<long long,allocator<long long> >,allocator<vector<long long,allocator<long long> > > > */

/* vector<vector<unsigned long long,allocator<unsigned long long> >,allocator<vector<unsigned long long,allocator<unsigned long long> > > > */

/* vector<vector<void*,allocator<void*> >,allocator<vector<void*,allocator<void*> > > > */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncDict {
 public:
  G__Sizep2memfuncDict(): p(&G__Sizep2memfuncDict::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncDict::*p)();
};

size_t G__get_sizep2memfuncDict()
{
  G__Sizep2memfuncDict a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceDict() {

   /* Setting up class inheritance */
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableDict() {

   /* Setting up typedef entry */
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__DictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__DictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<int>",117,G__get_linked_tagnum(&G__DictLN_vectorlEintcOallocatorlEintgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictLN_vectorlEintcOallocatorlEintgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictLN_vectorlEintcOallocatorlEintgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<vector<int> >",117,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",117,G__get_linked_tagnum(&G__DictLN_vectorlEintcOallocatorlEintgRsPgR),0,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pointer",85,G__get_linked_tagnum(&G__DictLN_vectorlEintcOallocatorlEintgRsPgR),0,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_pointer",85,G__get_linked_tagnum(&G__DictLN_vectorlEintcOallocatorlEintgRsPgR),256,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reference",117,G__get_linked_tagnum(&G__DictLN_vectorlEintcOallocatorlEintgRsPgR),1,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reference",117,G__get_linked_tagnum(&G__DictLN_vectorlEintcOallocatorlEintgRsPgR),257,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("size_type",107,-1,0,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("difference_type",108,-1,0,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_iterator",117,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgRcLcLiterator),256,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reverse_iterator",117,G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator",117,G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<vector<int,allocator<int> > >",117,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<vector<bool> >",117,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEboolcOallocatorlEboolgRsPgRcOallocatorlEvectorlEboolcOallocatorlEboolgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",117,G__get_linked_tagnum(&G__DictLN_vectorlEboolcOallocatorlEboolgRsPgR),0,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEboolcOallocatorlEboolgRsPgRcOallocatorlEvectorlEboolcOallocatorlEboolgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pointer",85,G__get_linked_tagnum(&G__DictLN_vectorlEboolcOallocatorlEboolgRsPgR),0,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEboolcOallocatorlEboolgRsPgRcOallocatorlEvectorlEboolcOallocatorlEboolgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_pointer",85,G__get_linked_tagnum(&G__DictLN_vectorlEboolcOallocatorlEboolgRsPgR),256,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEboolcOallocatorlEboolgRsPgRcOallocatorlEvectorlEboolcOallocatorlEboolgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reference",117,G__get_linked_tagnum(&G__DictLN_vectorlEboolcOallocatorlEboolgRsPgR),1,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEboolcOallocatorlEboolgRsPgRcOallocatorlEvectorlEboolcOallocatorlEboolgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reference",117,G__get_linked_tagnum(&G__DictLN_vectorlEboolcOallocatorlEboolgRsPgR),257,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEboolcOallocatorlEboolgRsPgRcOallocatorlEvectorlEboolcOallocatorlEboolgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("size_type",107,-1,0,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEboolcOallocatorlEboolgRsPgRcOallocatorlEvectorlEboolcOallocatorlEboolgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("difference_type",108,-1,0,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEboolcOallocatorlEboolgRsPgRcOallocatorlEvectorlEboolcOallocatorlEboolgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_iterator",117,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEboolcOallocatorlEboolgRsPgRcOallocatorlEvectorlEboolcOallocatorlEboolgRsPgRsPgRsPgRcLcLiterator),256,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEboolcOallocatorlEboolgRsPgRcOallocatorlEvectorlEboolcOallocatorlEboolgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlEvectorlEboolcOallocatorlEboolgRsPgRcOallocatorlEvectorlEboolcOallocatorlEboolgRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEboolcOallocatorlEboolgRsPgRcOallocatorlEvectorlEboolcOallocatorlEboolgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reverse_iterator",117,G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlEvectorlEboolcOallocatorlEboolgRsPgRcOallocatorlEvectorlEboolcOallocatorlEboolgRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEboolcOallocatorlEboolgRsPgRcOallocatorlEvectorlEboolcOallocatorlEboolgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlEvectorlEboolcOallocatorlEboolgRsPgRcOallocatorlEvectorlEboolcOallocatorlEboolgRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEboolcOallocatorlEboolgRsPgRcOallocatorlEvectorlEboolcOallocatorlEboolgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator",117,G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlEvectorlEboolcOallocatorlEboolgRsPgRcOallocatorlEvectorlEboolcOallocatorlEboolgRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEboolcOallocatorlEboolgRsPgRcOallocatorlEvectorlEboolcOallocatorlEboolgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<vector<bool,allocator<bool> > >",117,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEboolcOallocatorlEboolgRsPgRcOallocatorlEvectorlEboolcOallocatorlEboolgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<vector<char> >",117,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEcharcOallocatorlEchargRsPgRcOallocatorlEvectorlEcharcOallocatorlEchargRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",117,G__get_linked_tagnum(&G__DictLN_vectorlEcharcOallocatorlEchargRsPgR),0,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEcharcOallocatorlEchargRsPgRcOallocatorlEvectorlEcharcOallocatorlEchargRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pointer",85,G__get_linked_tagnum(&G__DictLN_vectorlEcharcOallocatorlEchargRsPgR),0,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEcharcOallocatorlEchargRsPgRcOallocatorlEvectorlEcharcOallocatorlEchargRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_pointer",85,G__get_linked_tagnum(&G__DictLN_vectorlEcharcOallocatorlEchargRsPgR),256,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEcharcOallocatorlEchargRsPgRcOallocatorlEvectorlEcharcOallocatorlEchargRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reference",117,G__get_linked_tagnum(&G__DictLN_vectorlEcharcOallocatorlEchargRsPgR),1,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEcharcOallocatorlEchargRsPgRcOallocatorlEvectorlEcharcOallocatorlEchargRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reference",117,G__get_linked_tagnum(&G__DictLN_vectorlEcharcOallocatorlEchargRsPgR),257,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEcharcOallocatorlEchargRsPgRcOallocatorlEvectorlEcharcOallocatorlEchargRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("size_type",107,-1,0,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEcharcOallocatorlEchargRsPgRcOallocatorlEvectorlEcharcOallocatorlEchargRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("difference_type",108,-1,0,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEcharcOallocatorlEchargRsPgRcOallocatorlEvectorlEcharcOallocatorlEchargRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_iterator",117,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEcharcOallocatorlEchargRsPgRcOallocatorlEvectorlEcharcOallocatorlEchargRsPgRsPgRsPgRcLcLiterator),256,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEcharcOallocatorlEchargRsPgRcOallocatorlEvectorlEcharcOallocatorlEchargRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlEvectorlEcharcOallocatorlEchargRsPgRcOallocatorlEvectorlEcharcOallocatorlEchargRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEcharcOallocatorlEchargRsPgRcOallocatorlEvectorlEcharcOallocatorlEchargRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reverse_iterator",117,G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlEvectorlEcharcOallocatorlEchargRsPgRcOallocatorlEvectorlEcharcOallocatorlEchargRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEcharcOallocatorlEchargRsPgRcOallocatorlEvectorlEcharcOallocatorlEchargRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlEvectorlEcharcOallocatorlEchargRsPgRcOallocatorlEvectorlEcharcOallocatorlEchargRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEcharcOallocatorlEchargRsPgRcOallocatorlEvectorlEcharcOallocatorlEchargRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator",117,G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlEvectorlEcharcOallocatorlEchargRsPgRcOallocatorlEvectorlEcharcOallocatorlEchargRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEcharcOallocatorlEchargRsPgRcOallocatorlEvectorlEcharcOallocatorlEchargRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<vector<char,allocator<char> > >",117,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEcharcOallocatorlEchargRsPgRcOallocatorlEvectorlEcharcOallocatorlEchargRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<vector<short> >",117,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEshortcOallocatorlEshortgRsPgRcOallocatorlEvectorlEshortcOallocatorlEshortgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",117,G__get_linked_tagnum(&G__DictLN_vectorlEshortcOallocatorlEshortgRsPgR),0,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEshortcOallocatorlEshortgRsPgRcOallocatorlEvectorlEshortcOallocatorlEshortgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pointer",85,G__get_linked_tagnum(&G__DictLN_vectorlEshortcOallocatorlEshortgRsPgR),0,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEshortcOallocatorlEshortgRsPgRcOallocatorlEvectorlEshortcOallocatorlEshortgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_pointer",85,G__get_linked_tagnum(&G__DictLN_vectorlEshortcOallocatorlEshortgRsPgR),256,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEshortcOallocatorlEshortgRsPgRcOallocatorlEvectorlEshortcOallocatorlEshortgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reference",117,G__get_linked_tagnum(&G__DictLN_vectorlEshortcOallocatorlEshortgRsPgR),1,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEshortcOallocatorlEshortgRsPgRcOallocatorlEvectorlEshortcOallocatorlEshortgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reference",117,G__get_linked_tagnum(&G__DictLN_vectorlEshortcOallocatorlEshortgRsPgR),257,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEshortcOallocatorlEshortgRsPgRcOallocatorlEvectorlEshortcOallocatorlEshortgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("size_type",107,-1,0,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEshortcOallocatorlEshortgRsPgRcOallocatorlEvectorlEshortcOallocatorlEshortgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("difference_type",108,-1,0,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEshortcOallocatorlEshortgRsPgRcOallocatorlEvectorlEshortcOallocatorlEshortgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_iterator",117,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEshortcOallocatorlEshortgRsPgRcOallocatorlEvectorlEshortcOallocatorlEshortgRsPgRsPgRsPgRcLcLiterator),256,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEshortcOallocatorlEshortgRsPgRcOallocatorlEvectorlEshortcOallocatorlEshortgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlEvectorlEshortcOallocatorlEshortgRsPgRcOallocatorlEvectorlEshortcOallocatorlEshortgRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEshortcOallocatorlEshortgRsPgRcOallocatorlEvectorlEshortcOallocatorlEshortgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reverse_iterator",117,G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlEvectorlEshortcOallocatorlEshortgRsPgRcOallocatorlEvectorlEshortcOallocatorlEshortgRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEshortcOallocatorlEshortgRsPgRcOallocatorlEvectorlEshortcOallocatorlEshortgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlEvectorlEshortcOallocatorlEshortgRsPgRcOallocatorlEvectorlEshortcOallocatorlEshortgRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEshortcOallocatorlEshortgRsPgRcOallocatorlEvectorlEshortcOallocatorlEshortgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator",117,G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlEvectorlEshortcOallocatorlEshortgRsPgRcOallocatorlEvectorlEshortcOallocatorlEshortgRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEshortcOallocatorlEshortgRsPgRcOallocatorlEvectorlEshortcOallocatorlEshortgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<vector<short,allocator<short> > >",117,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEshortcOallocatorlEshortgRsPgRcOallocatorlEvectorlEshortcOallocatorlEshortgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<vector<long> >",117,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlElongcOallocatorlElonggRsPgRcOallocatorlEvectorlElongcOallocatorlElonggRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",117,G__get_linked_tagnum(&G__DictLN_vectorlElongcOallocatorlElonggRsPgR),0,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlElongcOallocatorlElonggRsPgRcOallocatorlEvectorlElongcOallocatorlElonggRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pointer",85,G__get_linked_tagnum(&G__DictLN_vectorlElongcOallocatorlElonggRsPgR),0,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlElongcOallocatorlElonggRsPgRcOallocatorlEvectorlElongcOallocatorlElonggRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_pointer",85,G__get_linked_tagnum(&G__DictLN_vectorlElongcOallocatorlElonggRsPgR),256,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlElongcOallocatorlElonggRsPgRcOallocatorlEvectorlElongcOallocatorlElonggRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reference",117,G__get_linked_tagnum(&G__DictLN_vectorlElongcOallocatorlElonggRsPgR),1,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlElongcOallocatorlElonggRsPgRcOallocatorlEvectorlElongcOallocatorlElonggRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reference",117,G__get_linked_tagnum(&G__DictLN_vectorlElongcOallocatorlElonggRsPgR),257,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlElongcOallocatorlElonggRsPgRcOallocatorlEvectorlElongcOallocatorlElonggRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("size_type",107,-1,0,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlElongcOallocatorlElonggRsPgRcOallocatorlEvectorlElongcOallocatorlElonggRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("difference_type",108,-1,0,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlElongcOallocatorlElonggRsPgRcOallocatorlEvectorlElongcOallocatorlElonggRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_iterator",117,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlElongcOallocatorlElonggRsPgRcOallocatorlEvectorlElongcOallocatorlElonggRsPgRsPgRsPgRcLcLiterator),256,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlElongcOallocatorlElonggRsPgRcOallocatorlEvectorlElongcOallocatorlElonggRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlEvectorlElongcOallocatorlElonggRsPgRcOallocatorlEvectorlElongcOallocatorlElonggRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlElongcOallocatorlElonggRsPgRcOallocatorlEvectorlElongcOallocatorlElonggRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reverse_iterator",117,G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlEvectorlElongcOallocatorlElonggRsPgRcOallocatorlEvectorlElongcOallocatorlElonggRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlElongcOallocatorlElonggRsPgRcOallocatorlEvectorlElongcOallocatorlElonggRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlEvectorlElongcOallocatorlElonggRsPgRcOallocatorlEvectorlElongcOallocatorlElonggRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlElongcOallocatorlElonggRsPgRcOallocatorlEvectorlElongcOallocatorlElonggRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator",117,G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlEvectorlElongcOallocatorlElonggRsPgRcOallocatorlEvectorlElongcOallocatorlElonggRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlElongcOallocatorlElonggRsPgRcOallocatorlEvectorlElongcOallocatorlElonggRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<vector<long,allocator<long> > >",117,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlElongcOallocatorlElonggRsPgRcOallocatorlEvectorlElongcOallocatorlElonggRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<vector<unsigned char> >",117,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgRcOallocatorlEvectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",117,G__get_linked_tagnum(&G__DictLN_vectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgR),0,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgRcOallocatorlEvectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pointer",85,G__get_linked_tagnum(&G__DictLN_vectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgR),0,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgRcOallocatorlEvectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_pointer",85,G__get_linked_tagnum(&G__DictLN_vectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgR),256,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgRcOallocatorlEvectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reference",117,G__get_linked_tagnum(&G__DictLN_vectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgR),1,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgRcOallocatorlEvectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reference",117,G__get_linked_tagnum(&G__DictLN_vectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgR),257,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgRcOallocatorlEvectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("size_type",107,-1,0,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgRcOallocatorlEvectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("difference_type",108,-1,0,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgRcOallocatorlEvectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_iterator",117,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgRcOallocatorlEvectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgRsPgRsPgRcLcLiterator),256,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgRcOallocatorlEvectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlEvectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgRcOallocatorlEvectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgRcOallocatorlEvectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reverse_iterator",117,G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlEvectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgRcOallocatorlEvectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgRcOallocatorlEvectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlEvectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgRcOallocatorlEvectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgRcOallocatorlEvectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator",117,G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlEvectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgRcOallocatorlEvectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgRcOallocatorlEvectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<vector<unsigned char,allocator<unsigned char> > >",117,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgRcOallocatorlEvectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<vector<unsigned short> >",117,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcOallocatorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",117,G__get_linked_tagnum(&G__DictLN_vectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgR),0,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcOallocatorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pointer",85,G__get_linked_tagnum(&G__DictLN_vectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgR),0,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcOallocatorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_pointer",85,G__get_linked_tagnum(&G__DictLN_vectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgR),256,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcOallocatorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reference",117,G__get_linked_tagnum(&G__DictLN_vectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgR),1,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcOallocatorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reference",117,G__get_linked_tagnum(&G__DictLN_vectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgR),257,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcOallocatorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("size_type",107,-1,0,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcOallocatorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("difference_type",108,-1,0,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcOallocatorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_iterator",117,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcOallocatorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRsPgRsPgRcLcLiterator),256,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcOallocatorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcOallocatorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcOallocatorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reverse_iterator",117,G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcOallocatorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcOallocatorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcOallocatorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcOallocatorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator",117,G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcOallocatorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcOallocatorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<vector<unsigned short,allocator<unsigned short> > >",117,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcOallocatorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<vector<unsigned int> >",117,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcOallocatorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",117,G__get_linked_tagnum(&G__DictLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR),0,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcOallocatorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pointer",85,G__get_linked_tagnum(&G__DictLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR),0,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcOallocatorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_pointer",85,G__get_linked_tagnum(&G__DictLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR),256,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcOallocatorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reference",117,G__get_linked_tagnum(&G__DictLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR),1,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcOallocatorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reference",117,G__get_linked_tagnum(&G__DictLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR),257,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcOallocatorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("size_type",107,-1,0,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcOallocatorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("difference_type",108,-1,0,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcOallocatorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_iterator",117,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcOallocatorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRsPgRsPgRcLcLiterator),256,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcOallocatorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcOallocatorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcOallocatorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reverse_iterator",117,G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcOallocatorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcOallocatorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcOallocatorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcOallocatorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator",117,G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcOallocatorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcOallocatorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<vector<unsigned int,allocator<unsigned int> > >",117,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcOallocatorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<vector<unsigned long> >",117,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEunsignedsPlongcOallocatorlEunsignedsPlonggRsPgRcOallocatorlEvectorlEunsignedsPlongcOallocatorlEunsignedsPlonggRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",117,G__get_linked_tagnum(&G__DictLN_vectorlEunsignedsPlongcOallocatorlEunsignedsPlonggRsPgR),0,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEunsignedsPlongcOallocatorlEunsignedsPlonggRsPgRcOallocatorlEvectorlEunsignedsPlongcOallocatorlEunsignedsPlonggRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pointer",85,G__get_linked_tagnum(&G__DictLN_vectorlEunsignedsPlongcOallocatorlEunsignedsPlonggRsPgR),0,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEunsignedsPlongcOallocatorlEunsignedsPlonggRsPgRcOallocatorlEvectorlEunsignedsPlongcOallocatorlEunsignedsPlonggRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_pointer",85,G__get_linked_tagnum(&G__DictLN_vectorlEunsignedsPlongcOallocatorlEunsignedsPlonggRsPgR),256,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEunsignedsPlongcOallocatorlEunsignedsPlonggRsPgRcOallocatorlEvectorlEunsignedsPlongcOallocatorlEunsignedsPlonggRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reference",117,G__get_linked_tagnum(&G__DictLN_vectorlEunsignedsPlongcOallocatorlEunsignedsPlonggRsPgR),1,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEunsignedsPlongcOallocatorlEunsignedsPlonggRsPgRcOallocatorlEvectorlEunsignedsPlongcOallocatorlEunsignedsPlonggRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reference",117,G__get_linked_tagnum(&G__DictLN_vectorlEunsignedsPlongcOallocatorlEunsignedsPlonggRsPgR),257,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEunsignedsPlongcOallocatorlEunsignedsPlonggRsPgRcOallocatorlEvectorlEunsignedsPlongcOallocatorlEunsignedsPlonggRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("size_type",107,-1,0,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEunsignedsPlongcOallocatorlEunsignedsPlonggRsPgRcOallocatorlEvectorlEunsignedsPlongcOallocatorlEunsignedsPlonggRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("difference_type",108,-1,0,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEunsignedsPlongcOallocatorlEunsignedsPlonggRsPgRcOallocatorlEvectorlEunsignedsPlongcOallocatorlEunsignedsPlonggRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_iterator",117,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEunsignedsPlongcOallocatorlEunsignedsPlonggRsPgRcOallocatorlEvectorlEunsignedsPlongcOallocatorlEunsignedsPlonggRsPgRsPgRsPgRcLcLiterator),256,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEunsignedsPlongcOallocatorlEunsignedsPlonggRsPgRcOallocatorlEvectorlEunsignedsPlongcOallocatorlEunsignedsPlonggRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlEvectorlEunsignedsPlongcOallocatorlEunsignedsPlonggRsPgRcOallocatorlEvectorlEunsignedsPlongcOallocatorlEunsignedsPlonggRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEunsignedsPlongcOallocatorlEunsignedsPlonggRsPgRcOallocatorlEvectorlEunsignedsPlongcOallocatorlEunsignedsPlonggRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reverse_iterator",117,G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlEvectorlEunsignedsPlongcOallocatorlEunsignedsPlonggRsPgRcOallocatorlEvectorlEunsignedsPlongcOallocatorlEunsignedsPlonggRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEunsignedsPlongcOallocatorlEunsignedsPlonggRsPgRcOallocatorlEvectorlEunsignedsPlongcOallocatorlEunsignedsPlonggRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlEvectorlEunsignedsPlongcOallocatorlEunsignedsPlonggRsPgRcOallocatorlEvectorlEunsignedsPlongcOallocatorlEunsignedsPlonggRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEunsignedsPlongcOallocatorlEunsignedsPlonggRsPgRcOallocatorlEvectorlEunsignedsPlongcOallocatorlEunsignedsPlonggRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator",117,G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlEvectorlEunsignedsPlongcOallocatorlEunsignedsPlonggRsPgRcOallocatorlEvectorlEunsignedsPlongcOallocatorlEunsignedsPlonggRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEunsignedsPlongcOallocatorlEunsignedsPlonggRsPgRcOallocatorlEvectorlEunsignedsPlongcOallocatorlEunsignedsPlonggRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<vector<unsigned long,allocator<unsigned long> > >",117,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEunsignedsPlongcOallocatorlEunsignedsPlonggRsPgRcOallocatorlEvectorlEunsignedsPlongcOallocatorlEunsignedsPlonggRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<vector<float> >",117,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",117,G__get_linked_tagnum(&G__DictLN_vectorlEfloatcOallocatorlEfloatgRsPgR),0,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pointer",85,G__get_linked_tagnum(&G__DictLN_vectorlEfloatcOallocatorlEfloatgRsPgR),0,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_pointer",85,G__get_linked_tagnum(&G__DictLN_vectorlEfloatcOallocatorlEfloatgRsPgR),256,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reference",117,G__get_linked_tagnum(&G__DictLN_vectorlEfloatcOallocatorlEfloatgRsPgR),1,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reference",117,G__get_linked_tagnum(&G__DictLN_vectorlEfloatcOallocatorlEfloatgRsPgR),257,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("size_type",107,-1,0,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("difference_type",108,-1,0,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_iterator",117,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRcLcLiterator),256,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reverse_iterator",117,G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator",117,G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<vector<float,allocator<float> > >",117,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<vector<double> >",117,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",117,G__get_linked_tagnum(&G__DictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),0,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pointer",85,G__get_linked_tagnum(&G__DictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),0,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_pointer",85,G__get_linked_tagnum(&G__DictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),256,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reference",117,G__get_linked_tagnum(&G__DictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),1,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reference",117,G__get_linked_tagnum(&G__DictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),257,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("size_type",107,-1,0,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("difference_type",108,-1,0,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_iterator",117,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRcLcLiterator),256,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reverse_iterator",117,G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator",117,G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<vector<double,allocator<double> > >",117,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<vector<char*> >",117,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEcharmUcOallocatorlEcharmUgRsPgRcOallocatorlEvectorlEcharmUcOallocatorlEcharmUgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",117,G__get_linked_tagnum(&G__DictLN_vectorlEcharmUcOallocatorlEcharmUgRsPgR),0,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEcharmUcOallocatorlEcharmUgRsPgRcOallocatorlEvectorlEcharmUcOallocatorlEcharmUgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pointer",85,G__get_linked_tagnum(&G__DictLN_vectorlEcharmUcOallocatorlEcharmUgRsPgR),0,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEcharmUcOallocatorlEcharmUgRsPgRcOallocatorlEvectorlEcharmUcOallocatorlEcharmUgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_pointer",85,G__get_linked_tagnum(&G__DictLN_vectorlEcharmUcOallocatorlEcharmUgRsPgR),256,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEcharmUcOallocatorlEcharmUgRsPgRcOallocatorlEvectorlEcharmUcOallocatorlEcharmUgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reference",117,G__get_linked_tagnum(&G__DictLN_vectorlEcharmUcOallocatorlEcharmUgRsPgR),1,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEcharmUcOallocatorlEcharmUgRsPgRcOallocatorlEvectorlEcharmUcOallocatorlEcharmUgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reference",117,G__get_linked_tagnum(&G__DictLN_vectorlEcharmUcOallocatorlEcharmUgRsPgR),257,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEcharmUcOallocatorlEcharmUgRsPgRcOallocatorlEvectorlEcharmUcOallocatorlEcharmUgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("size_type",107,-1,0,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEcharmUcOallocatorlEcharmUgRsPgRcOallocatorlEvectorlEcharmUcOallocatorlEcharmUgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("difference_type",108,-1,0,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEcharmUcOallocatorlEcharmUgRsPgRcOallocatorlEvectorlEcharmUcOallocatorlEcharmUgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_iterator",117,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEcharmUcOallocatorlEcharmUgRsPgRcOallocatorlEvectorlEcharmUcOallocatorlEcharmUgRsPgRsPgRsPgRcLcLiterator),256,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEcharmUcOallocatorlEcharmUgRsPgRcOallocatorlEvectorlEcharmUcOallocatorlEcharmUgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlEvectorlEcharmUcOallocatorlEcharmUgRsPgRcOallocatorlEvectorlEcharmUcOallocatorlEcharmUgRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEcharmUcOallocatorlEcharmUgRsPgRcOallocatorlEvectorlEcharmUcOallocatorlEcharmUgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reverse_iterator",117,G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlEvectorlEcharmUcOallocatorlEcharmUgRsPgRcOallocatorlEvectorlEcharmUcOallocatorlEcharmUgRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEcharmUcOallocatorlEcharmUgRsPgRcOallocatorlEvectorlEcharmUcOallocatorlEcharmUgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlEvectorlEcharmUcOallocatorlEcharmUgRsPgRcOallocatorlEvectorlEcharmUcOallocatorlEcharmUgRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEcharmUcOallocatorlEcharmUgRsPgRcOallocatorlEvectorlEcharmUcOallocatorlEcharmUgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator",117,G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlEvectorlEcharmUcOallocatorlEcharmUgRsPgRcOallocatorlEvectorlEcharmUcOallocatorlEcharmUgRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEcharmUcOallocatorlEcharmUgRsPgRcOallocatorlEvectorlEcharmUcOallocatorlEcharmUgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<vector<char*,allocator<char*> > >",117,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEcharmUcOallocatorlEcharmUgRsPgRcOallocatorlEvectorlEcharmUcOallocatorlEcharmUgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<const char*>",117,G__get_linked_tagnum(&G__DictLN_vectorlEconstsPcharmUcOallocatorlEconstsPcharmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlEconstsPcharmUcOallocatorlEconstsPcharmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictLN_vectorlEconstsPcharmUcOallocatorlEconstsPcharmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlEconstsPcharmUcOallocatorlEconstsPcharmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictLN_vectorlEconstsPcharmUcOallocatorlEconstsPcharmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<vector<const char*> >",117,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEconstsPcharmUcOallocatorlEconstsPcharmUgRsPgRcOallocatorlEvectorlEconstsPcharmUcOallocatorlEconstsPcharmUgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",117,G__get_linked_tagnum(&G__DictLN_vectorlEconstsPcharmUcOallocatorlEconstsPcharmUgRsPgR),0,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEconstsPcharmUcOallocatorlEconstsPcharmUgRsPgRcOallocatorlEvectorlEconstsPcharmUcOallocatorlEconstsPcharmUgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pointer",85,G__get_linked_tagnum(&G__DictLN_vectorlEconstsPcharmUcOallocatorlEconstsPcharmUgRsPgR),0,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEconstsPcharmUcOallocatorlEconstsPcharmUgRsPgRcOallocatorlEvectorlEconstsPcharmUcOallocatorlEconstsPcharmUgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_pointer",85,G__get_linked_tagnum(&G__DictLN_vectorlEconstsPcharmUcOallocatorlEconstsPcharmUgRsPgR),256,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEconstsPcharmUcOallocatorlEconstsPcharmUgRsPgRcOallocatorlEvectorlEconstsPcharmUcOallocatorlEconstsPcharmUgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reference",117,G__get_linked_tagnum(&G__DictLN_vectorlEconstsPcharmUcOallocatorlEconstsPcharmUgRsPgR),1,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEconstsPcharmUcOallocatorlEconstsPcharmUgRsPgRcOallocatorlEvectorlEconstsPcharmUcOallocatorlEconstsPcharmUgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reference",117,G__get_linked_tagnum(&G__DictLN_vectorlEconstsPcharmUcOallocatorlEconstsPcharmUgRsPgR),257,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEconstsPcharmUcOallocatorlEconstsPcharmUgRsPgRcOallocatorlEvectorlEconstsPcharmUcOallocatorlEconstsPcharmUgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("size_type",107,-1,0,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEconstsPcharmUcOallocatorlEconstsPcharmUgRsPgRcOallocatorlEvectorlEconstsPcharmUcOallocatorlEconstsPcharmUgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("difference_type",108,-1,0,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEconstsPcharmUcOallocatorlEconstsPcharmUgRsPgRcOallocatorlEvectorlEconstsPcharmUcOallocatorlEconstsPcharmUgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_iterator",117,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEconstsPcharmUcOallocatorlEconstsPcharmUgRsPgRcOallocatorlEvectorlEconstsPcharmUcOallocatorlEconstsPcharmUgRsPgRsPgRsPgRcLcLiterator),256,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEconstsPcharmUcOallocatorlEconstsPcharmUgRsPgRcOallocatorlEvectorlEconstsPcharmUcOallocatorlEconstsPcharmUgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlEvectorlEconstsPcharmUcOallocatorlEconstsPcharmUgRsPgRcOallocatorlEvectorlEconstsPcharmUcOallocatorlEconstsPcharmUgRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEconstsPcharmUcOallocatorlEconstsPcharmUgRsPgRcOallocatorlEvectorlEconstsPcharmUcOallocatorlEconstsPcharmUgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reverse_iterator",117,G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlEvectorlEconstsPcharmUcOallocatorlEconstsPcharmUgRsPgRcOallocatorlEvectorlEconstsPcharmUcOallocatorlEconstsPcharmUgRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEconstsPcharmUcOallocatorlEconstsPcharmUgRsPgRcOallocatorlEvectorlEconstsPcharmUcOallocatorlEconstsPcharmUgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlEvectorlEconstsPcharmUcOallocatorlEconstsPcharmUgRsPgRcOallocatorlEvectorlEconstsPcharmUcOallocatorlEconstsPcharmUgRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEconstsPcharmUcOallocatorlEconstsPcharmUgRsPgRcOallocatorlEvectorlEconstsPcharmUcOallocatorlEconstsPcharmUgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator",117,G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlEvectorlEconstsPcharmUcOallocatorlEconstsPcharmUgRsPgRcOallocatorlEvectorlEconstsPcharmUcOallocatorlEconstsPcharmUgRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEconstsPcharmUcOallocatorlEconstsPcharmUgRsPgRcOallocatorlEvectorlEconstsPcharmUcOallocatorlEconstsPcharmUgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<vector<const char*,allocator<const char*> > >",117,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEconstsPcharmUcOallocatorlEconstsPcharmUgRsPgRcOallocatorlEvectorlEconstsPcharmUcOallocatorlEconstsPcharmUgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<Int_t>",117,G__get_linked_tagnum(&G__DictLN_vectorlEintcOallocatorlEintgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<vector<Int_t> >",117,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<Float_t>",117,G__get_linked_tagnum(&G__DictLN_vectorlEfloatcOallocatorlEfloatgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<vector<Float_t> >",117,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<Double_t>",117,G__get_linked_tagnum(&G__DictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<vector<Double_t> >",117,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TString>",117,G__get_linked_tagnum(&G__DictLN_vectorlETStringcOallocatorlETStringgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictLN_vectorlETStringcOallocatorlETStringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictLN_vectorlETStringcOallocatorlETStringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<vector<TString> >",117,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlETStringcOallocatorlETStringgRsPgRcOallocatorlEvectorlETStringcOallocatorlETStringgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",117,G__get_linked_tagnum(&G__DictLN_vectorlETStringcOallocatorlETStringgRsPgR),0,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlETStringcOallocatorlETStringgRsPgRcOallocatorlEvectorlETStringcOallocatorlETStringgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pointer",85,G__get_linked_tagnum(&G__DictLN_vectorlETStringcOallocatorlETStringgRsPgR),0,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlETStringcOallocatorlETStringgRsPgRcOallocatorlEvectorlETStringcOallocatorlETStringgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_pointer",85,G__get_linked_tagnum(&G__DictLN_vectorlETStringcOallocatorlETStringgRsPgR),256,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlETStringcOallocatorlETStringgRsPgRcOallocatorlEvectorlETStringcOallocatorlETStringgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reference",117,G__get_linked_tagnum(&G__DictLN_vectorlETStringcOallocatorlETStringgRsPgR),1,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlETStringcOallocatorlETStringgRsPgRcOallocatorlEvectorlETStringcOallocatorlETStringgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reference",117,G__get_linked_tagnum(&G__DictLN_vectorlETStringcOallocatorlETStringgRsPgR),257,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlETStringcOallocatorlETStringgRsPgRcOallocatorlEvectorlETStringcOallocatorlETStringgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("size_type",107,-1,0,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlETStringcOallocatorlETStringgRsPgRcOallocatorlEvectorlETStringcOallocatorlETStringgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("difference_type",108,-1,0,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlETStringcOallocatorlETStringgRsPgRcOallocatorlEvectorlETStringcOallocatorlETStringgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_iterator",117,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlETStringcOallocatorlETStringgRsPgRcOallocatorlEvectorlETStringcOallocatorlETStringgRsPgRsPgRsPgRcLcLiterator),256,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlETStringcOallocatorlETStringgRsPgRcOallocatorlEvectorlETStringcOallocatorlETStringgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlEvectorlETStringcOallocatorlETStringgRsPgRcOallocatorlEvectorlETStringcOallocatorlETStringgRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlETStringcOallocatorlETStringgRsPgRcOallocatorlEvectorlETStringcOallocatorlETStringgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reverse_iterator",117,G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlEvectorlETStringcOallocatorlETStringgRsPgRcOallocatorlEvectorlETStringcOallocatorlETStringgRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlETStringcOallocatorlETStringgRsPgRcOallocatorlEvectorlETStringcOallocatorlETStringgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlEvectorlETStringcOallocatorlETStringgRsPgRcOallocatorlEvectorlETStringcOallocatorlETStringgRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlETStringcOallocatorlETStringgRsPgRcOallocatorlEvectorlETStringcOallocatorlETStringgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator",117,G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlEvectorlETStringcOallocatorlETStringgRsPgRcOallocatorlEvectorlETStringcOallocatorlETStringgRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlETStringcOallocatorlETStringgRsPgRcOallocatorlEvectorlETStringcOallocatorlETStringgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<vector<TString,allocator<TString> > >",117,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlETStringcOallocatorlETStringgRsPgRcOallocatorlEvectorlETStringcOallocatorlETStringgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<Long64_t>",117,G__get_linked_tagnum(&G__DictLN_vectorlElongsPlongcOallocatorlElongsPlonggRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<vector<Long64_t> >",117,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlElongsPlongcOallocatorlElongsPlonggRsPgRcOallocatorlEvectorlElongsPlongcOallocatorlElongsPlonggRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",117,G__get_linked_tagnum(&G__DictLN_vectorlElongsPlongcOallocatorlElongsPlonggRsPgR),0,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlElongsPlongcOallocatorlElongsPlonggRsPgRcOallocatorlEvectorlElongsPlongcOallocatorlElongsPlonggRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pointer",85,G__get_linked_tagnum(&G__DictLN_vectorlElongsPlongcOallocatorlElongsPlonggRsPgR),0,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlElongsPlongcOallocatorlElongsPlonggRsPgRcOallocatorlEvectorlElongsPlongcOallocatorlElongsPlonggRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_pointer",85,G__get_linked_tagnum(&G__DictLN_vectorlElongsPlongcOallocatorlElongsPlonggRsPgR),256,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlElongsPlongcOallocatorlElongsPlonggRsPgRcOallocatorlEvectorlElongsPlongcOallocatorlElongsPlonggRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reference",117,G__get_linked_tagnum(&G__DictLN_vectorlElongsPlongcOallocatorlElongsPlonggRsPgR),1,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlElongsPlongcOallocatorlElongsPlonggRsPgRcOallocatorlEvectorlElongsPlongcOallocatorlElongsPlonggRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reference",117,G__get_linked_tagnum(&G__DictLN_vectorlElongsPlongcOallocatorlElongsPlonggRsPgR),257,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlElongsPlongcOallocatorlElongsPlonggRsPgRcOallocatorlEvectorlElongsPlongcOallocatorlElongsPlonggRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("size_type",107,-1,0,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlElongsPlongcOallocatorlElongsPlonggRsPgRcOallocatorlEvectorlElongsPlongcOallocatorlElongsPlonggRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("difference_type",108,-1,0,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlElongsPlongcOallocatorlElongsPlonggRsPgRcOallocatorlEvectorlElongsPlongcOallocatorlElongsPlonggRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_iterator",117,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlElongsPlongcOallocatorlElongsPlonggRsPgRcOallocatorlEvectorlElongsPlongcOallocatorlElongsPlonggRsPgRsPgRsPgRcLcLiterator),256,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlElongsPlongcOallocatorlElongsPlonggRsPgRcOallocatorlEvectorlElongsPlongcOallocatorlElongsPlonggRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlEvectorlElongsPlongcOallocatorlElongsPlonggRsPgRcOallocatorlEvectorlElongsPlongcOallocatorlElongsPlonggRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlElongsPlongcOallocatorlElongsPlonggRsPgRcOallocatorlEvectorlElongsPlongcOallocatorlElongsPlonggRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reverse_iterator",117,G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlEvectorlElongsPlongcOallocatorlElongsPlonggRsPgRcOallocatorlEvectorlElongsPlongcOallocatorlElongsPlonggRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlElongsPlongcOallocatorlElongsPlonggRsPgRcOallocatorlEvectorlElongsPlongcOallocatorlElongsPlonggRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlEvectorlElongsPlongcOallocatorlElongsPlonggRsPgRcOallocatorlEvectorlElongsPlongcOallocatorlElongsPlonggRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlElongsPlongcOallocatorlElongsPlonggRsPgRcOallocatorlEvectorlElongsPlongcOallocatorlElongsPlonggRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator",117,G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlEvectorlElongsPlongcOallocatorlElongsPlonggRsPgRcOallocatorlEvectorlElongsPlongcOallocatorlElongsPlonggRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlElongsPlongcOallocatorlElongsPlonggRsPgRcOallocatorlEvectorlElongsPlongcOallocatorlElongsPlonggRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<vector<long long,allocator<long long> > >",117,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlElongsPlongcOallocatorlElongsPlonggRsPgRcOallocatorlEvectorlElongsPlongcOallocatorlElongsPlonggRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<ULong64_t>",117,G__get_linked_tagnum(&G__DictLN_vectorlEunsignedsPlongsPlongcOallocatorlEunsignedsPlongsPlonggRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<vector<ULong64_t> >",117,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEunsignedsPlongsPlongcOallocatorlEunsignedsPlongsPlonggRsPgRcOallocatorlEvectorlEunsignedsPlongsPlongcOallocatorlEunsignedsPlongsPlonggRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",117,G__get_linked_tagnum(&G__DictLN_vectorlEunsignedsPlongsPlongcOallocatorlEunsignedsPlongsPlonggRsPgR),0,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEunsignedsPlongsPlongcOallocatorlEunsignedsPlongsPlonggRsPgRcOallocatorlEvectorlEunsignedsPlongsPlongcOallocatorlEunsignedsPlongsPlonggRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pointer",85,G__get_linked_tagnum(&G__DictLN_vectorlEunsignedsPlongsPlongcOallocatorlEunsignedsPlongsPlonggRsPgR),0,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEunsignedsPlongsPlongcOallocatorlEunsignedsPlongsPlonggRsPgRcOallocatorlEvectorlEunsignedsPlongsPlongcOallocatorlEunsignedsPlongsPlonggRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_pointer",85,G__get_linked_tagnum(&G__DictLN_vectorlEunsignedsPlongsPlongcOallocatorlEunsignedsPlongsPlonggRsPgR),256,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEunsignedsPlongsPlongcOallocatorlEunsignedsPlongsPlonggRsPgRcOallocatorlEvectorlEunsignedsPlongsPlongcOallocatorlEunsignedsPlongsPlonggRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reference",117,G__get_linked_tagnum(&G__DictLN_vectorlEunsignedsPlongsPlongcOallocatorlEunsignedsPlongsPlonggRsPgR),1,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEunsignedsPlongsPlongcOallocatorlEunsignedsPlongsPlonggRsPgRcOallocatorlEvectorlEunsignedsPlongsPlongcOallocatorlEunsignedsPlongsPlonggRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reference",117,G__get_linked_tagnum(&G__DictLN_vectorlEunsignedsPlongsPlongcOallocatorlEunsignedsPlongsPlonggRsPgR),257,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEunsignedsPlongsPlongcOallocatorlEunsignedsPlongsPlonggRsPgRcOallocatorlEvectorlEunsignedsPlongsPlongcOallocatorlEunsignedsPlongsPlonggRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("size_type",107,-1,0,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEunsignedsPlongsPlongcOallocatorlEunsignedsPlongsPlonggRsPgRcOallocatorlEvectorlEunsignedsPlongsPlongcOallocatorlEunsignedsPlongsPlonggRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("difference_type",108,-1,0,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEunsignedsPlongsPlongcOallocatorlEunsignedsPlongsPlonggRsPgRcOallocatorlEvectorlEunsignedsPlongsPlongcOallocatorlEunsignedsPlongsPlonggRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_iterator",117,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEunsignedsPlongsPlongcOallocatorlEunsignedsPlongsPlonggRsPgRcOallocatorlEvectorlEunsignedsPlongsPlongcOallocatorlEunsignedsPlongsPlonggRsPgRsPgRsPgRcLcLiterator),256,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEunsignedsPlongsPlongcOallocatorlEunsignedsPlongsPlonggRsPgRcOallocatorlEvectorlEunsignedsPlongsPlongcOallocatorlEunsignedsPlongsPlonggRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlEvectorlEunsignedsPlongsPlongcOallocatorlEunsignedsPlongsPlonggRsPgRcOallocatorlEvectorlEunsignedsPlongsPlongcOallocatorlEunsignedsPlongsPlonggRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEunsignedsPlongsPlongcOallocatorlEunsignedsPlongsPlonggRsPgRcOallocatorlEvectorlEunsignedsPlongsPlongcOallocatorlEunsignedsPlongsPlonggRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reverse_iterator",117,G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlEvectorlEunsignedsPlongsPlongcOallocatorlEunsignedsPlongsPlonggRsPgRcOallocatorlEvectorlEunsignedsPlongsPlongcOallocatorlEunsignedsPlongsPlonggRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEunsignedsPlongsPlongcOallocatorlEunsignedsPlongsPlonggRsPgRcOallocatorlEvectorlEunsignedsPlongsPlongcOallocatorlEunsignedsPlongsPlonggRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlEvectorlEunsignedsPlongsPlongcOallocatorlEunsignedsPlongsPlonggRsPgRcOallocatorlEvectorlEunsignedsPlongsPlongcOallocatorlEunsignedsPlongsPlonggRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEunsignedsPlongsPlongcOallocatorlEunsignedsPlongsPlonggRsPgRcOallocatorlEvectorlEunsignedsPlongsPlongcOallocatorlEunsignedsPlongsPlonggRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator",117,G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlEvectorlEunsignedsPlongsPlongcOallocatorlEunsignedsPlongsPlonggRsPgRcOallocatorlEvectorlEunsignedsPlongsPlongcOallocatorlEunsignedsPlongsPlonggRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEunsignedsPlongsPlongcOallocatorlEunsignedsPlongsPlonggRsPgRcOallocatorlEvectorlEunsignedsPlongsPlongcOallocatorlEunsignedsPlongsPlonggRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<vector<unsigned long long,allocator<unsigned long long> > >",117,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEunsignedsPlongsPlongcOallocatorlEunsignedsPlongsPlonggRsPgRcOallocatorlEvectorlEunsignedsPlongsPlongcOallocatorlEunsignedsPlongsPlonggRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<vector<void*> >",117,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEvoidmUcOallocatorlEvoidmUgRsPgRcOallocatorlEvectorlEvoidmUcOallocatorlEvoidmUgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",117,G__get_linked_tagnum(&G__DictLN_vectorlEvoidmUcOallocatorlEvoidmUgRsPgR),0,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEvoidmUcOallocatorlEvoidmUgRsPgRcOallocatorlEvectorlEvoidmUcOallocatorlEvoidmUgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pointer",85,G__get_linked_tagnum(&G__DictLN_vectorlEvoidmUcOallocatorlEvoidmUgRsPgR),0,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEvoidmUcOallocatorlEvoidmUgRsPgRcOallocatorlEvectorlEvoidmUcOallocatorlEvoidmUgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_pointer",85,G__get_linked_tagnum(&G__DictLN_vectorlEvoidmUcOallocatorlEvoidmUgRsPgR),256,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEvoidmUcOallocatorlEvoidmUgRsPgRcOallocatorlEvectorlEvoidmUcOallocatorlEvoidmUgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reference",117,G__get_linked_tagnum(&G__DictLN_vectorlEvoidmUcOallocatorlEvoidmUgRsPgR),1,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEvoidmUcOallocatorlEvoidmUgRsPgRcOallocatorlEvectorlEvoidmUcOallocatorlEvoidmUgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reference",117,G__get_linked_tagnum(&G__DictLN_vectorlEvoidmUcOallocatorlEvoidmUgRsPgR),257,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEvoidmUcOallocatorlEvoidmUgRsPgRcOallocatorlEvectorlEvoidmUcOallocatorlEvoidmUgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("size_type",107,-1,0,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEvoidmUcOallocatorlEvoidmUgRsPgRcOallocatorlEvectorlEvoidmUcOallocatorlEvoidmUgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("difference_type",108,-1,0,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEvoidmUcOallocatorlEvoidmUgRsPgRcOallocatorlEvectorlEvoidmUcOallocatorlEvoidmUgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_iterator",117,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEvoidmUcOallocatorlEvoidmUgRsPgRcOallocatorlEvectorlEvoidmUcOallocatorlEvoidmUgRsPgRsPgRsPgRcLcLiterator),256,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEvoidmUcOallocatorlEvoidmUgRsPgRcOallocatorlEvectorlEvoidmUcOallocatorlEvoidmUgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlEvectorlEvoidmUcOallocatorlEvoidmUgRsPgRcOallocatorlEvectorlEvoidmUcOallocatorlEvoidmUgRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEvoidmUcOallocatorlEvoidmUgRsPgRcOallocatorlEvectorlEvoidmUcOallocatorlEvoidmUgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reverse_iterator",117,G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlEvectorlEvoidmUcOallocatorlEvoidmUgRsPgRcOallocatorlEvectorlEvoidmUcOallocatorlEvoidmUgRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEvoidmUcOallocatorlEvoidmUgRsPgRcOallocatorlEvectorlEvoidmUcOallocatorlEvoidmUgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlEvectorlEvoidmUcOallocatorlEvoidmUgRsPgRcOallocatorlEvectorlEvoidmUcOallocatorlEvoidmUgRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEvoidmUcOallocatorlEvoidmUgRsPgRcOallocatorlEvectorlEvoidmUcOallocatorlEvoidmUgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator",117,G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlEvectorlEvoidmUcOallocatorlEvoidmUgRsPgRcOallocatorlEvectorlEvoidmUcOallocatorlEvoidmUgRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEvoidmUcOallocatorlEvoidmUgRsPgRcOallocatorlEvectorlEvoidmUcOallocatorlEvoidmUgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<vector<void*,allocator<void*> > >",117,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEvoidmUcOallocatorlEvoidmUgRsPgRcOallocatorlEvectorlEvoidmUcOallocatorlEvoidmUgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > > */
static void G__setup_memvarvectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR));
   { vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > > *p; p=(vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* vector<vector<bool,allocator<bool> >,allocator<vector<bool,allocator<bool> > > > */
static void G__setup_memvarvectorlEvectorlEboolcOallocatorlEboolgRsPgRcOallocatorlEvectorlEboolcOallocatorlEboolgRsPgRsPgRsPgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEboolcOallocatorlEboolgRsPgRcOallocatorlEvectorlEboolcOallocatorlEboolgRsPgRsPgRsPgR));
   { vector<vector<bool,allocator<bool> >,allocator<vector<bool,allocator<bool> > > > *p; p=(vector<vector<bool,allocator<bool> >,allocator<vector<bool,allocator<bool> > > >*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* vector<vector<char,allocator<char> >,allocator<vector<char,allocator<char> > > > */
static void G__setup_memvarvectorlEvectorlEcharcOallocatorlEchargRsPgRcOallocatorlEvectorlEcharcOallocatorlEchargRsPgRsPgRsPgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEcharcOallocatorlEchargRsPgRcOallocatorlEvectorlEcharcOallocatorlEchargRsPgRsPgRsPgR));
   { vector<vector<char,allocator<char> >,allocator<vector<char,allocator<char> > > > *p; p=(vector<vector<char,allocator<char> >,allocator<vector<char,allocator<char> > > >*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* vector<vector<short,allocator<short> >,allocator<vector<short,allocator<short> > > > */
static void G__setup_memvarvectorlEvectorlEshortcOallocatorlEshortgRsPgRcOallocatorlEvectorlEshortcOallocatorlEshortgRsPgRsPgRsPgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEshortcOallocatorlEshortgRsPgRcOallocatorlEvectorlEshortcOallocatorlEshortgRsPgRsPgRsPgR));
   { vector<vector<short,allocator<short> >,allocator<vector<short,allocator<short> > > > *p; p=(vector<vector<short,allocator<short> >,allocator<vector<short,allocator<short> > > >*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* vector<vector<long,allocator<long> >,allocator<vector<long,allocator<long> > > > */
static void G__setup_memvarvectorlEvectorlElongcOallocatorlElonggRsPgRcOallocatorlEvectorlElongcOallocatorlElonggRsPgRsPgRsPgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__DictLN_vectorlEvectorlElongcOallocatorlElonggRsPgRcOallocatorlEvectorlElongcOallocatorlElonggRsPgRsPgRsPgR));
   { vector<vector<long,allocator<long> >,allocator<vector<long,allocator<long> > > > *p; p=(vector<vector<long,allocator<long> >,allocator<vector<long,allocator<long> > > >*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* vector<vector<unsigned char,allocator<unsigned char> >,allocator<vector<unsigned char,allocator<unsigned char> > > > */
static void G__setup_memvarvectorlEvectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgRcOallocatorlEvectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgRsPgRsPgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgRcOallocatorlEvectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgRsPgRsPgR));
   { vector<vector<unsigned char,allocator<unsigned char> >,allocator<vector<unsigned char,allocator<unsigned char> > > > *p; p=(vector<vector<unsigned char,allocator<unsigned char> >,allocator<vector<unsigned char,allocator<unsigned char> > > >*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > > */
static void G__setup_memvarvectorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcOallocatorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRsPgRsPgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcOallocatorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRsPgRsPgR));
   { vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > > *p; p=(vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* vector<vector<unsigned int,allocator<unsigned int> >,allocator<vector<unsigned int,allocator<unsigned int> > > > */
static void G__setup_memvarvectorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcOallocatorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRsPgRsPgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcOallocatorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRsPgRsPgR));
   { vector<vector<unsigned int,allocator<unsigned int> >,allocator<vector<unsigned int,allocator<unsigned int> > > > *p; p=(vector<vector<unsigned int,allocator<unsigned int> >,allocator<vector<unsigned int,allocator<unsigned int> > > >*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* vector<vector<unsigned long,allocator<unsigned long> >,allocator<vector<unsigned long,allocator<unsigned long> > > > */
static void G__setup_memvarvectorlEvectorlEunsignedsPlongcOallocatorlEunsignedsPlonggRsPgRcOallocatorlEvectorlEunsignedsPlongcOallocatorlEunsignedsPlonggRsPgRsPgRsPgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEunsignedsPlongcOallocatorlEunsignedsPlonggRsPgRcOallocatorlEvectorlEunsignedsPlongcOallocatorlEunsignedsPlonggRsPgRsPgRsPgR));
   { vector<vector<unsigned long,allocator<unsigned long> >,allocator<vector<unsigned long,allocator<unsigned long> > > > *p; p=(vector<vector<unsigned long,allocator<unsigned long> >,allocator<vector<unsigned long,allocator<unsigned long> > > >*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > > */
static void G__setup_memvarvectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR));
   { vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > > *p; p=(vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > > */
static void G__setup_memvarvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR));
   { vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > > *p; p=(vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* vector<vector<char*,allocator<char*> >,allocator<vector<char*,allocator<char*> > > > */
static void G__setup_memvarvectorlEvectorlEcharmUcOallocatorlEcharmUgRsPgRcOallocatorlEvectorlEcharmUcOallocatorlEcharmUgRsPgRsPgRsPgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEcharmUcOallocatorlEcharmUgRsPgRcOallocatorlEvectorlEcharmUcOallocatorlEcharmUgRsPgRsPgRsPgR));
   { vector<vector<char*,allocator<char*> >,allocator<vector<char*,allocator<char*> > > > *p; p=(vector<vector<char*,allocator<char*> >,allocator<vector<char*,allocator<char*> > > >*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* vector<vector<const char*,allocator<const char*> >,allocator<vector<const char*,allocator<const char*> > > > */
static void G__setup_memvarvectorlEvectorlEconstsPcharmUcOallocatorlEconstsPcharmUgRsPgRcOallocatorlEvectorlEconstsPcharmUcOallocatorlEconstsPcharmUgRsPgRsPgRsPgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEconstsPcharmUcOallocatorlEconstsPcharmUgRsPgRcOallocatorlEvectorlEconstsPcharmUcOallocatorlEconstsPcharmUgRsPgRsPgRsPgR));
   { vector<vector<const char*,allocator<const char*> >,allocator<vector<const char*,allocator<const char*> > > > *p; p=(vector<vector<const char*,allocator<const char*> >,allocator<vector<const char*,allocator<const char*> > > >*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* vector<vector<TString,allocator<TString> >,allocator<vector<TString,allocator<TString> > > > */
static void G__setup_memvarvectorlEvectorlETStringcOallocatorlETStringgRsPgRcOallocatorlEvectorlETStringcOallocatorlETStringgRsPgRsPgRsPgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__DictLN_vectorlEvectorlETStringcOallocatorlETStringgRsPgRcOallocatorlEvectorlETStringcOallocatorlETStringgRsPgRsPgRsPgR));
   { vector<vector<TString,allocator<TString> >,allocator<vector<TString,allocator<TString> > > > *p; p=(vector<vector<TString,allocator<TString> >,allocator<vector<TString,allocator<TString> > > >*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* vector<vector<long long,allocator<long long> >,allocator<vector<long long,allocator<long long> > > > */
static void G__setup_memvarvectorlEvectorlElongsPlongcOallocatorlElongsPlonggRsPgRcOallocatorlEvectorlElongsPlongcOallocatorlElongsPlonggRsPgRsPgRsPgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__DictLN_vectorlEvectorlElongsPlongcOallocatorlElongsPlonggRsPgRcOallocatorlEvectorlElongsPlongcOallocatorlElongsPlonggRsPgRsPgRsPgR));
   { vector<vector<long long,allocator<long long> >,allocator<vector<long long,allocator<long long> > > > *p; p=(vector<vector<long long,allocator<long long> >,allocator<vector<long long,allocator<long long> > > >*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* vector<vector<unsigned long long,allocator<unsigned long long> >,allocator<vector<unsigned long long,allocator<unsigned long long> > > > */
static void G__setup_memvarvectorlEvectorlEunsignedsPlongsPlongcOallocatorlEunsignedsPlongsPlonggRsPgRcOallocatorlEvectorlEunsignedsPlongsPlongcOallocatorlEunsignedsPlongsPlonggRsPgRsPgRsPgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEunsignedsPlongsPlongcOallocatorlEunsignedsPlongsPlonggRsPgRcOallocatorlEvectorlEunsignedsPlongsPlongcOallocatorlEunsignedsPlongsPlonggRsPgRsPgRsPgR));
   { vector<vector<unsigned long long,allocator<unsigned long long> >,allocator<vector<unsigned long long,allocator<unsigned long long> > > > *p; p=(vector<vector<unsigned long long,allocator<unsigned long long> >,allocator<vector<unsigned long long,allocator<unsigned long long> > > >*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* vector<vector<void*,allocator<void*> >,allocator<vector<void*,allocator<void*> > > > */
static void G__setup_memvarvectorlEvectorlEvoidmUcOallocatorlEvoidmUgRsPgRcOallocatorlEvectorlEvoidmUcOallocatorlEvoidmUgRsPgRsPgRsPgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEvoidmUcOallocatorlEvoidmUgRsPgRcOallocatorlEvectorlEvoidmUcOallocatorlEvoidmUgRsPgRsPgRsPgR));
   { vector<vector<void*,allocator<void*> >,allocator<vector<void*,allocator<void*> > > > *p; p=(vector<vector<void*,allocator<void*> >,allocator<vector<void*,allocator<void*> > > >*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarDict() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncvectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR(void) {
   /* vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > > */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR));
   G__memfunc_setup("at",213,G__Dict_173_0_1, 117, G__get_linked_tagnum(&G__DictLN_vectorlEintcOallocatorlEintgRsPgR), G__defined_typename("vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >::reference"), 1, 1, 1, 1, 0, "k - 'vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("at",213,G__Dict_173_0_2, 117, G__get_linked_tagnum(&G__DictLN_vectorlEintcOallocatorlEintgRsPgR), G__defined_typename("vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >::const_reference"), 1, 1, 1, 1, 8, "k - 'vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__Dict_173_0_3, 117, G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__Dict_173_0_4, 117, G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rbegin",631,G__Dict_173_0_5, 117, G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgRcLcLiteratorgR), G__defined_typename("vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rend",425,G__Dict_173_0_6, 117, G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgRcLcLiteratorgR), G__defined_typename("vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("size",443,G__Dict_173_0_7, 107, -1, G__defined_typename("vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("max_size",864,G__Dict_173_0_8, 107, -1, G__defined_typename("vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__Dict_173_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >::size_type' 0 - sz", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__Dict_173_0_10, 121, -1, -1, 0, 2, 1, 1, 0, 
"k - 'vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >::size_type' 0 - sz u 'vector<int,allocator<int> >' - 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("capacity",846,G__Dict_173_0_11, 107, -1, G__defined_typename("vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("empty",559,G__Dict_173_0_12, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__Dict_173_0_13, 117, G__get_linked_tagnum(&G__DictLN_vectorlEintcOallocatorlEintgRsPgR), G__defined_typename("vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >::reference"), 1, 1, 1, 1, 0, "k - 'vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__Dict_173_0_14, 117, G__get_linked_tagnum(&G__DictLN_vectorlEintcOallocatorlEintgRsPgR), G__defined_typename("vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >::const_reference"), 1, 1, 1, 1, 8, "k - 'vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >",7176,G__Dict_173_0_15, 105, G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >",7176,G__Dict_173_0_16, 105, G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR), -1, 0, 2, 1, 1, 0, 
"k - 'vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >::size_type' 0 - n u 'vector<int,allocator<int> >' - 11 '(vector<int,allocator<int> >)()' value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >",7176,G__Dict_173_0_17, 105, G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR), -1, 0, 1, 1, 1, 0, "u 'vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >",7176,G__Dict_173_0_18, 105, G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR), -1, 0, 2, 1, 1, 0, 
"u 'vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >::iterator' 'vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >::const_iterator' 10 - first u 'vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >::iterator' 'vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__Dict_173_0_19, 117, G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR), -1, 1, 1, 1, 1, 0, "u 'vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("reserve",764,G__Dict_173_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("front",553,G__Dict_173_0_21, 117, G__get_linked_tagnum(&G__DictLN_vectorlEintcOallocatorlEintgRsPgR), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("back",401,G__Dict_173_0_22, 117, G__get_linked_tagnum(&G__DictLN_vectorlEintcOallocatorlEintgRsPgR), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("push_back",944,G__Dict_173_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<int,allocator<int> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("swap",443,G__Dict_173_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >' - 1 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__Dict_173_0_25, 117, G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgRcLcLiterator), -1, 0, 2, 1, 1, 0, 
"u 'vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >::iterator' - 0 - position u 'vector<int,allocator<int> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__Dict_173_0_26, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >::iterator' - 0 - position u 'vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >::iterator' 'vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >::const_iterator' 10 - first "
"u 'vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >::iterator' 'vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__Dict_173_0_27, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >::iterator' - 0 - position k - 'vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >::size_type' 0 - n "
"u 'vector<int,allocator<int> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pop_back",831,G__Dict_173_0_28, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__Dict_173_0_29, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >::iterator' - 0 - position", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__Dict_173_0_30, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >::iterator' - 0 - first u 'vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >::iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__Dict_173_0_31, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >", 7302, G__Dict_173_0_32, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncvectorlEvectorlEboolcOallocatorlEboolgRsPgRcOallocatorlEvectorlEboolcOallocatorlEboolgRsPgRsPgRsPgR(void) {
   /* vector<vector<bool,allocator<bool> >,allocator<vector<bool,allocator<bool> > > > */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEboolcOallocatorlEboolgRsPgRcOallocatorlEvectorlEboolcOallocatorlEboolgRsPgRsPgRsPgR));
   G__memfunc_setup("at",213,G__Dict_177_0_1, 117, G__get_linked_tagnum(&G__DictLN_vectorlEboolcOallocatorlEboolgRsPgR), G__defined_typename("vector<vector<bool,allocator<bool> >,allocator<vector<bool,allocator<bool> > > >::reference"), 1, 1, 1, 1, 0, "k - 'vector<vector<bool,allocator<bool> >,allocator<vector<bool,allocator<bool> > > >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("at",213,G__Dict_177_0_2, 117, G__get_linked_tagnum(&G__DictLN_vectorlEboolcOallocatorlEboolgRsPgR), G__defined_typename("vector<vector<bool,allocator<bool> >,allocator<vector<bool,allocator<bool> > > >::const_reference"), 1, 1, 1, 1, 8, "k - 'vector<vector<bool,allocator<bool> >,allocator<vector<bool,allocator<bool> > > >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__Dict_177_0_3, 117, G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEboolcOallocatorlEboolgRsPgRcOallocatorlEvectorlEboolcOallocatorlEboolgRsPgRsPgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__Dict_177_0_4, 117, G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEboolcOallocatorlEboolgRsPgRcOallocatorlEvectorlEboolcOallocatorlEboolgRsPgRsPgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rbegin",631,G__Dict_177_0_5, 117, G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlEvectorlEboolcOallocatorlEboolgRsPgRcOallocatorlEvectorlEboolcOallocatorlEboolgRsPgRsPgRsPgRcLcLiteratorgR), G__defined_typename("vector<vector<bool,allocator<bool> >,allocator<vector<bool,allocator<bool> > > >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rend",425,G__Dict_177_0_6, 117, G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlEvectorlEboolcOallocatorlEboolgRsPgRcOallocatorlEvectorlEboolcOallocatorlEboolgRsPgRsPgRsPgRcLcLiteratorgR), G__defined_typename("vector<vector<bool,allocator<bool> >,allocator<vector<bool,allocator<bool> > > >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("size",443,G__Dict_177_0_7, 107, -1, G__defined_typename("vector<vector<bool,allocator<bool> >,allocator<vector<bool,allocator<bool> > > >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("max_size",864,G__Dict_177_0_8, 107, -1, G__defined_typename("vector<vector<bool,allocator<bool> >,allocator<vector<bool,allocator<bool> > > >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__Dict_177_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<vector<bool,allocator<bool> >,allocator<vector<bool,allocator<bool> > > >::size_type' 0 - sz", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__Dict_177_0_10, 121, -1, -1, 0, 2, 1, 1, 0, 
"k - 'vector<vector<bool,allocator<bool> >,allocator<vector<bool,allocator<bool> > > >::size_type' 0 - sz u 'vector<bool,allocator<bool> >' - 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("capacity",846,G__Dict_177_0_11, 107, -1, G__defined_typename("vector<vector<bool,allocator<bool> >,allocator<vector<bool,allocator<bool> > > >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("empty",559,G__Dict_177_0_12, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__Dict_177_0_13, 117, G__get_linked_tagnum(&G__DictLN_vectorlEboolcOallocatorlEboolgRsPgR), G__defined_typename("vector<vector<bool,allocator<bool> >,allocator<vector<bool,allocator<bool> > > >::reference"), 1, 1, 1, 1, 0, "k - 'vector<vector<bool,allocator<bool> >,allocator<vector<bool,allocator<bool> > > >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__Dict_177_0_14, 117, G__get_linked_tagnum(&G__DictLN_vectorlEboolcOallocatorlEboolgRsPgR), G__defined_typename("vector<vector<bool,allocator<bool> >,allocator<vector<bool,allocator<bool> > > >::const_reference"), 1, 1, 1, 1, 8, "k - 'vector<vector<bool,allocator<bool> >,allocator<vector<bool,allocator<bool> > > >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<vector<bool,allocator<bool> >,allocator<vector<bool,allocator<bool> > > >",7564,G__Dict_177_0_15, 105, G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEboolcOallocatorlEboolgRsPgRcOallocatorlEvectorlEboolcOallocatorlEboolgRsPgRsPgRsPgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<vector<bool,allocator<bool> >,allocator<vector<bool,allocator<bool> > > >",7564,G__Dict_177_0_16, 105, G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEboolcOallocatorlEboolgRsPgRcOallocatorlEvectorlEboolcOallocatorlEboolgRsPgRsPgRsPgR), -1, 0, 2, 1, 1, 0, 
"k - 'vector<vector<bool,allocator<bool> >,allocator<vector<bool,allocator<bool> > > >::size_type' 0 - n u 'vector<bool,allocator<bool> >' - 11 '(vector<bool,allocator<bool> >)()' value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<vector<bool,allocator<bool> >,allocator<vector<bool,allocator<bool> > > >",7564,G__Dict_177_0_17, 105, G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEboolcOallocatorlEboolgRsPgRcOallocatorlEvectorlEboolcOallocatorlEboolgRsPgRsPgRsPgR), -1, 0, 1, 1, 1, 0, "u 'vector<vector<bool,allocator<bool> >,allocator<vector<bool,allocator<bool> > > >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<vector<bool,allocator<bool> >,allocator<vector<bool,allocator<bool> > > >",7564,G__Dict_177_0_18, 105, G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEboolcOallocatorlEboolgRsPgRcOallocatorlEvectorlEboolcOallocatorlEboolgRsPgRsPgRsPgR), -1, 0, 2, 1, 1, 0, 
"u 'vector<vector<bool,allocator<bool> >,allocator<vector<bool,allocator<bool> > > >::iterator' 'vector<vector<bool,allocator<bool> >,allocator<vector<bool,allocator<bool> > > >::const_iterator' 10 - first u 'vector<vector<bool,allocator<bool> >,allocator<vector<bool,allocator<bool> > > >::iterator' 'vector<vector<bool,allocator<bool> >,allocator<vector<bool,allocator<bool> > > >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__Dict_177_0_19, 117, G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEboolcOallocatorlEboolgRsPgRcOallocatorlEvectorlEboolcOallocatorlEboolgRsPgRsPgRsPgR), -1, 1, 1, 1, 1, 0, "u 'vector<vector<bool,allocator<bool> >,allocator<vector<bool,allocator<bool> > > >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("reserve",764,G__Dict_177_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<vector<bool,allocator<bool> >,allocator<vector<bool,allocator<bool> > > >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("front",553,G__Dict_177_0_21, 117, G__get_linked_tagnum(&G__DictLN_vectorlEboolcOallocatorlEboolgRsPgR), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("back",401,G__Dict_177_0_22, 117, G__get_linked_tagnum(&G__DictLN_vectorlEboolcOallocatorlEboolgRsPgR), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("push_back",944,G__Dict_177_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<bool,allocator<bool> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("swap",443,G__Dict_177_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<vector<bool,allocator<bool> >,allocator<vector<bool,allocator<bool> > > >' - 1 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__Dict_177_0_25, 117, G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEboolcOallocatorlEboolgRsPgRcOallocatorlEvectorlEboolcOallocatorlEboolgRsPgRsPgRsPgRcLcLiterator), -1, 0, 2, 1, 1, 0, 
"u 'vector<vector<bool,allocator<bool> >,allocator<vector<bool,allocator<bool> > > >::iterator' - 0 - position u 'vector<bool,allocator<bool> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__Dict_177_0_26, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<vector<bool,allocator<bool> >,allocator<vector<bool,allocator<bool> > > >::iterator' - 0 - position u 'vector<vector<bool,allocator<bool> >,allocator<vector<bool,allocator<bool> > > >::iterator' 'vector<vector<bool,allocator<bool> >,allocator<vector<bool,allocator<bool> > > >::const_iterator' 10 - first "
"u 'vector<vector<bool,allocator<bool> >,allocator<vector<bool,allocator<bool> > > >::iterator' 'vector<vector<bool,allocator<bool> >,allocator<vector<bool,allocator<bool> > > >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__Dict_177_0_27, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<vector<bool,allocator<bool> >,allocator<vector<bool,allocator<bool> > > >::iterator' - 0 - position k - 'vector<vector<bool,allocator<bool> >,allocator<vector<bool,allocator<bool> > > >::size_type' 0 - n "
"u 'vector<bool,allocator<bool> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pop_back",831,G__Dict_177_0_28, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__Dict_177_0_29, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<vector<bool,allocator<bool> >,allocator<vector<bool,allocator<bool> > > >::iterator' - 0 - position", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__Dict_177_0_30, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<vector<bool,allocator<bool> >,allocator<vector<bool,allocator<bool> > > >::iterator' - 0 - first u 'vector<vector<bool,allocator<bool> >,allocator<vector<bool,allocator<bool> > > >::iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__Dict_177_0_31, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~vector<vector<bool,allocator<bool> >,allocator<vector<bool,allocator<bool> > > >", 7690, G__Dict_177_0_32, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncvectorlEvectorlEcharcOallocatorlEchargRsPgRcOallocatorlEvectorlEcharcOallocatorlEchargRsPgRsPgRsPgR(void) {
   /* vector<vector<char,allocator<char> >,allocator<vector<char,allocator<char> > > > */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEcharcOallocatorlEchargRsPgRcOallocatorlEvectorlEcharcOallocatorlEchargRsPgRsPgRsPgR));
   G__memfunc_setup("at",213,G__Dict_181_0_1, 117, G__get_linked_tagnum(&G__DictLN_vectorlEcharcOallocatorlEchargRsPgR), G__defined_typename("vector<vector<char,allocator<char> >,allocator<vector<char,allocator<char> > > >::reference"), 1, 1, 1, 1, 0, "k - 'vector<vector<char,allocator<char> >,allocator<vector<char,allocator<char> > > >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("at",213,G__Dict_181_0_2, 117, G__get_linked_tagnum(&G__DictLN_vectorlEcharcOallocatorlEchargRsPgR), G__defined_typename("vector<vector<char,allocator<char> >,allocator<vector<char,allocator<char> > > >::const_reference"), 1, 1, 1, 1, 8, "k - 'vector<vector<char,allocator<char> >,allocator<vector<char,allocator<char> > > >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__Dict_181_0_3, 117, G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEcharcOallocatorlEchargRsPgRcOallocatorlEvectorlEcharcOallocatorlEchargRsPgRsPgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__Dict_181_0_4, 117, G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEcharcOallocatorlEchargRsPgRcOallocatorlEvectorlEcharcOallocatorlEchargRsPgRsPgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rbegin",631,G__Dict_181_0_5, 117, G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlEvectorlEcharcOallocatorlEchargRsPgRcOallocatorlEvectorlEcharcOallocatorlEchargRsPgRsPgRsPgRcLcLiteratorgR), G__defined_typename("vector<vector<char,allocator<char> >,allocator<vector<char,allocator<char> > > >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rend",425,G__Dict_181_0_6, 117, G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlEvectorlEcharcOallocatorlEchargRsPgRcOallocatorlEvectorlEcharcOallocatorlEchargRsPgRsPgRsPgRcLcLiteratorgR), G__defined_typename("vector<vector<char,allocator<char> >,allocator<vector<char,allocator<char> > > >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("size",443,G__Dict_181_0_7, 107, -1, G__defined_typename("vector<vector<char,allocator<char> >,allocator<vector<char,allocator<char> > > >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("max_size",864,G__Dict_181_0_8, 107, -1, G__defined_typename("vector<vector<char,allocator<char> >,allocator<vector<char,allocator<char> > > >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__Dict_181_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<vector<char,allocator<char> >,allocator<vector<char,allocator<char> > > >::size_type' 0 - sz", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__Dict_181_0_10, 121, -1, -1, 0, 2, 1, 1, 0, 
"k - 'vector<vector<char,allocator<char> >,allocator<vector<char,allocator<char> > > >::size_type' 0 - sz u 'vector<char,allocator<char> >' - 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("capacity",846,G__Dict_181_0_11, 107, -1, G__defined_typename("vector<vector<char,allocator<char> >,allocator<vector<char,allocator<char> > > >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("empty",559,G__Dict_181_0_12, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__Dict_181_0_13, 117, G__get_linked_tagnum(&G__DictLN_vectorlEcharcOallocatorlEchargRsPgR), G__defined_typename("vector<vector<char,allocator<char> >,allocator<vector<char,allocator<char> > > >::reference"), 1, 1, 1, 1, 0, "k - 'vector<vector<char,allocator<char> >,allocator<vector<char,allocator<char> > > >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__Dict_181_0_14, 117, G__get_linked_tagnum(&G__DictLN_vectorlEcharcOallocatorlEchargRsPgR), G__defined_typename("vector<vector<char,allocator<char> >,allocator<vector<char,allocator<char> > > >::const_reference"), 1, 1, 1, 1, 8, "k - 'vector<vector<char,allocator<char> >,allocator<vector<char,allocator<char> > > >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<vector<char,allocator<char> >,allocator<vector<char,allocator<char> > > >",7508,G__Dict_181_0_15, 105, G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEcharcOallocatorlEchargRsPgRcOallocatorlEvectorlEcharcOallocatorlEchargRsPgRsPgRsPgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<vector<char,allocator<char> >,allocator<vector<char,allocator<char> > > >",7508,G__Dict_181_0_16, 105, G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEcharcOallocatorlEchargRsPgRcOallocatorlEvectorlEcharcOallocatorlEchargRsPgRsPgRsPgR), -1, 0, 2, 1, 1, 0, 
"k - 'vector<vector<char,allocator<char> >,allocator<vector<char,allocator<char> > > >::size_type' 0 - n u 'vector<char,allocator<char> >' - 11 '(vector<char,allocator<char> >)()' value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<vector<char,allocator<char> >,allocator<vector<char,allocator<char> > > >",7508,G__Dict_181_0_17, 105, G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEcharcOallocatorlEchargRsPgRcOallocatorlEvectorlEcharcOallocatorlEchargRsPgRsPgRsPgR), -1, 0, 1, 1, 1, 0, "u 'vector<vector<char,allocator<char> >,allocator<vector<char,allocator<char> > > >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<vector<char,allocator<char> >,allocator<vector<char,allocator<char> > > >",7508,G__Dict_181_0_18, 105, G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEcharcOallocatorlEchargRsPgRcOallocatorlEvectorlEcharcOallocatorlEchargRsPgRsPgRsPgR), -1, 0, 2, 1, 1, 0, 
"u 'vector<vector<char,allocator<char> >,allocator<vector<char,allocator<char> > > >::iterator' 'vector<vector<char,allocator<char> >,allocator<vector<char,allocator<char> > > >::const_iterator' 10 - first u 'vector<vector<char,allocator<char> >,allocator<vector<char,allocator<char> > > >::iterator' 'vector<vector<char,allocator<char> >,allocator<vector<char,allocator<char> > > >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__Dict_181_0_19, 117, G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEcharcOallocatorlEchargRsPgRcOallocatorlEvectorlEcharcOallocatorlEchargRsPgRsPgRsPgR), -1, 1, 1, 1, 1, 0, "u 'vector<vector<char,allocator<char> >,allocator<vector<char,allocator<char> > > >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("reserve",764,G__Dict_181_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<vector<char,allocator<char> >,allocator<vector<char,allocator<char> > > >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("front",553,G__Dict_181_0_21, 117, G__get_linked_tagnum(&G__DictLN_vectorlEcharcOallocatorlEchargRsPgR), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("back",401,G__Dict_181_0_22, 117, G__get_linked_tagnum(&G__DictLN_vectorlEcharcOallocatorlEchargRsPgR), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("push_back",944,G__Dict_181_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<char,allocator<char> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("swap",443,G__Dict_181_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<vector<char,allocator<char> >,allocator<vector<char,allocator<char> > > >' - 1 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__Dict_181_0_25, 117, G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEcharcOallocatorlEchargRsPgRcOallocatorlEvectorlEcharcOallocatorlEchargRsPgRsPgRsPgRcLcLiterator), -1, 0, 2, 1, 1, 0, 
"u 'vector<vector<char,allocator<char> >,allocator<vector<char,allocator<char> > > >::iterator' - 0 - position u 'vector<char,allocator<char> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__Dict_181_0_26, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<vector<char,allocator<char> >,allocator<vector<char,allocator<char> > > >::iterator' - 0 - position u 'vector<vector<char,allocator<char> >,allocator<vector<char,allocator<char> > > >::iterator' 'vector<vector<char,allocator<char> >,allocator<vector<char,allocator<char> > > >::const_iterator' 10 - first "
"u 'vector<vector<char,allocator<char> >,allocator<vector<char,allocator<char> > > >::iterator' 'vector<vector<char,allocator<char> >,allocator<vector<char,allocator<char> > > >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__Dict_181_0_27, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<vector<char,allocator<char> >,allocator<vector<char,allocator<char> > > >::iterator' - 0 - position k - 'vector<vector<char,allocator<char> >,allocator<vector<char,allocator<char> > > >::size_type' 0 - n "
"u 'vector<char,allocator<char> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pop_back",831,G__Dict_181_0_28, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__Dict_181_0_29, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<vector<char,allocator<char> >,allocator<vector<char,allocator<char> > > >::iterator' - 0 - position", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__Dict_181_0_30, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<vector<char,allocator<char> >,allocator<vector<char,allocator<char> > > >::iterator' - 0 - first u 'vector<vector<char,allocator<char> >,allocator<vector<char,allocator<char> > > >::iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__Dict_181_0_31, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~vector<vector<char,allocator<char> >,allocator<vector<char,allocator<char> > > >", 7634, G__Dict_181_0_32, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncvectorlEvectorlEshortcOallocatorlEshortgRsPgRcOallocatorlEvectorlEshortcOallocatorlEshortgRsPgRsPgRsPgR(void) {
   /* vector<vector<short,allocator<short> >,allocator<vector<short,allocator<short> > > > */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEshortcOallocatorlEshortgRsPgRcOallocatorlEvectorlEshortcOallocatorlEshortgRsPgRsPgRsPgR));
   G__memfunc_setup("at",213,G__Dict_185_0_1, 117, G__get_linked_tagnum(&G__DictLN_vectorlEshortcOallocatorlEshortgRsPgR), G__defined_typename("vector<vector<short,allocator<short> >,allocator<vector<short,allocator<short> > > >::reference"), 1, 1, 1, 1, 0, "k - 'vector<vector<short,allocator<short> >,allocator<vector<short,allocator<short> > > >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("at",213,G__Dict_185_0_2, 117, G__get_linked_tagnum(&G__DictLN_vectorlEshortcOallocatorlEshortgRsPgR), G__defined_typename("vector<vector<short,allocator<short> >,allocator<vector<short,allocator<short> > > >::const_reference"), 1, 1, 1, 1, 8, "k - 'vector<vector<short,allocator<short> >,allocator<vector<short,allocator<short> > > >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__Dict_185_0_3, 117, G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEshortcOallocatorlEshortgRsPgRcOallocatorlEvectorlEshortcOallocatorlEshortgRsPgRsPgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__Dict_185_0_4, 117, G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEshortcOallocatorlEshortgRsPgRcOallocatorlEvectorlEshortcOallocatorlEshortgRsPgRsPgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rbegin",631,G__Dict_185_0_5, 117, G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlEvectorlEshortcOallocatorlEshortgRsPgRcOallocatorlEvectorlEshortcOallocatorlEshortgRsPgRsPgRsPgRcLcLiteratorgR), G__defined_typename("vector<vector<short,allocator<short> >,allocator<vector<short,allocator<short> > > >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rend",425,G__Dict_185_0_6, 117, G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlEvectorlEshortcOallocatorlEshortgRsPgRcOallocatorlEvectorlEshortcOallocatorlEshortgRsPgRsPgRsPgRcLcLiteratorgR), G__defined_typename("vector<vector<short,allocator<short> >,allocator<vector<short,allocator<short> > > >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("size",443,G__Dict_185_0_7, 107, -1, G__defined_typename("vector<vector<short,allocator<short> >,allocator<vector<short,allocator<short> > > >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("max_size",864,G__Dict_185_0_8, 107, -1, G__defined_typename("vector<vector<short,allocator<short> >,allocator<vector<short,allocator<short> > > >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__Dict_185_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<vector<short,allocator<short> >,allocator<vector<short,allocator<short> > > >::size_type' 0 - sz", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__Dict_185_0_10, 121, -1, -1, 0, 2, 1, 1, 0, 
"k - 'vector<vector<short,allocator<short> >,allocator<vector<short,allocator<short> > > >::size_type' 0 - sz u 'vector<short,allocator<short> >' - 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("capacity",846,G__Dict_185_0_11, 107, -1, G__defined_typename("vector<vector<short,allocator<short> >,allocator<vector<short,allocator<short> > > >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("empty",559,G__Dict_185_0_12, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__Dict_185_0_13, 117, G__get_linked_tagnum(&G__DictLN_vectorlEshortcOallocatorlEshortgRsPgR), G__defined_typename("vector<vector<short,allocator<short> >,allocator<vector<short,allocator<short> > > >::reference"), 1, 1, 1, 1, 0, "k - 'vector<vector<short,allocator<short> >,allocator<vector<short,allocator<short> > > >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__Dict_185_0_14, 117, G__get_linked_tagnum(&G__DictLN_vectorlEshortcOallocatorlEshortgRsPgR), G__defined_typename("vector<vector<short,allocator<short> >,allocator<vector<short,allocator<short> > > >::const_reference"), 1, 1, 1, 1, 8, "k - 'vector<vector<short,allocator<short> >,allocator<vector<short,allocator<short> > > >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<vector<short,allocator<short> >,allocator<vector<short,allocator<short> > > >",8092,G__Dict_185_0_15, 105, G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEshortcOallocatorlEshortgRsPgRcOallocatorlEvectorlEshortcOallocatorlEshortgRsPgRsPgRsPgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<vector<short,allocator<short> >,allocator<vector<short,allocator<short> > > >",8092,G__Dict_185_0_16, 105, G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEshortcOallocatorlEshortgRsPgRcOallocatorlEvectorlEshortcOallocatorlEshortgRsPgRsPgRsPgR), -1, 0, 2, 1, 1, 0, 
"k - 'vector<vector<short,allocator<short> >,allocator<vector<short,allocator<short> > > >::size_type' 0 - n u 'vector<short,allocator<short> >' - 11 '(vector<short,allocator<short> >)()' value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<vector<short,allocator<short> >,allocator<vector<short,allocator<short> > > >",8092,G__Dict_185_0_17, 105, G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEshortcOallocatorlEshortgRsPgRcOallocatorlEvectorlEshortcOallocatorlEshortgRsPgRsPgRsPgR), -1, 0, 1, 1, 1, 0, "u 'vector<vector<short,allocator<short> >,allocator<vector<short,allocator<short> > > >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<vector<short,allocator<short> >,allocator<vector<short,allocator<short> > > >",8092,G__Dict_185_0_18, 105, G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEshortcOallocatorlEshortgRsPgRcOallocatorlEvectorlEshortcOallocatorlEshortgRsPgRsPgRsPgR), -1, 0, 2, 1, 1, 0, 
"u 'vector<vector<short,allocator<short> >,allocator<vector<short,allocator<short> > > >::iterator' 'vector<vector<short,allocator<short> >,allocator<vector<short,allocator<short> > > >::const_iterator' 10 - first u 'vector<vector<short,allocator<short> >,allocator<vector<short,allocator<short> > > >::iterator' 'vector<vector<short,allocator<short> >,allocator<vector<short,allocator<short> > > >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__Dict_185_0_19, 117, G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEshortcOallocatorlEshortgRsPgRcOallocatorlEvectorlEshortcOallocatorlEshortgRsPgRsPgRsPgR), -1, 1, 1, 1, 1, 0, "u 'vector<vector<short,allocator<short> >,allocator<vector<short,allocator<short> > > >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("reserve",764,G__Dict_185_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<vector<short,allocator<short> >,allocator<vector<short,allocator<short> > > >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("front",553,G__Dict_185_0_21, 117, G__get_linked_tagnum(&G__DictLN_vectorlEshortcOallocatorlEshortgRsPgR), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("back",401,G__Dict_185_0_22, 117, G__get_linked_tagnum(&G__DictLN_vectorlEshortcOallocatorlEshortgRsPgR), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("push_back",944,G__Dict_185_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<short,allocator<short> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("swap",443,G__Dict_185_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<vector<short,allocator<short> >,allocator<vector<short,allocator<short> > > >' - 1 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__Dict_185_0_25, 117, G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEshortcOallocatorlEshortgRsPgRcOallocatorlEvectorlEshortcOallocatorlEshortgRsPgRsPgRsPgRcLcLiterator), -1, 0, 2, 1, 1, 0, 
"u 'vector<vector<short,allocator<short> >,allocator<vector<short,allocator<short> > > >::iterator' - 0 - position u 'vector<short,allocator<short> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__Dict_185_0_26, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<vector<short,allocator<short> >,allocator<vector<short,allocator<short> > > >::iterator' - 0 - position u 'vector<vector<short,allocator<short> >,allocator<vector<short,allocator<short> > > >::iterator' 'vector<vector<short,allocator<short> >,allocator<vector<short,allocator<short> > > >::const_iterator' 10 - first "
"u 'vector<vector<short,allocator<short> >,allocator<vector<short,allocator<short> > > >::iterator' 'vector<vector<short,allocator<short> >,allocator<vector<short,allocator<short> > > >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__Dict_185_0_27, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<vector<short,allocator<short> >,allocator<vector<short,allocator<short> > > >::iterator' - 0 - position k - 'vector<vector<short,allocator<short> >,allocator<vector<short,allocator<short> > > >::size_type' 0 - n "
"u 'vector<short,allocator<short> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pop_back",831,G__Dict_185_0_28, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__Dict_185_0_29, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<vector<short,allocator<short> >,allocator<vector<short,allocator<short> > > >::iterator' - 0 - position", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__Dict_185_0_30, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<vector<short,allocator<short> >,allocator<vector<short,allocator<short> > > >::iterator' - 0 - first u 'vector<vector<short,allocator<short> >,allocator<vector<short,allocator<short> > > >::iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__Dict_185_0_31, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~vector<vector<short,allocator<short> >,allocator<vector<short,allocator<short> > > >", 8218, G__Dict_185_0_32, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncvectorlEvectorlElongcOallocatorlElonggRsPgRcOallocatorlEvectorlElongcOallocatorlElonggRsPgRsPgRsPgR(void) {
   /* vector<vector<long,allocator<long> >,allocator<vector<long,allocator<long> > > > */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__DictLN_vectorlEvectorlElongcOallocatorlElonggRsPgRcOallocatorlEvectorlElongcOallocatorlElonggRsPgRsPgRsPgR));
   G__memfunc_setup("at",213,G__Dict_189_0_1, 117, G__get_linked_tagnum(&G__DictLN_vectorlElongcOallocatorlElonggRsPgR), G__defined_typename("vector<vector<long,allocator<long> >,allocator<vector<long,allocator<long> > > >::reference"), 1, 1, 1, 1, 0, "k - 'vector<vector<long,allocator<long> >,allocator<vector<long,allocator<long> > > >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("at",213,G__Dict_189_0_2, 117, G__get_linked_tagnum(&G__DictLN_vectorlElongcOallocatorlElonggRsPgR), G__defined_typename("vector<vector<long,allocator<long> >,allocator<vector<long,allocator<long> > > >::const_reference"), 1, 1, 1, 1, 8, "k - 'vector<vector<long,allocator<long> >,allocator<vector<long,allocator<long> > > >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__Dict_189_0_3, 117, G__get_linked_tagnum(&G__DictLN_vectorlEvectorlElongcOallocatorlElonggRsPgRcOallocatorlEvectorlElongcOallocatorlElonggRsPgRsPgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__Dict_189_0_4, 117, G__get_linked_tagnum(&G__DictLN_vectorlEvectorlElongcOallocatorlElonggRsPgRcOallocatorlEvectorlElongcOallocatorlElonggRsPgRsPgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rbegin",631,G__Dict_189_0_5, 117, G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlEvectorlElongcOallocatorlElonggRsPgRcOallocatorlEvectorlElongcOallocatorlElonggRsPgRsPgRsPgRcLcLiteratorgR), G__defined_typename("vector<vector<long,allocator<long> >,allocator<vector<long,allocator<long> > > >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rend",425,G__Dict_189_0_6, 117, G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlEvectorlElongcOallocatorlElonggRsPgRcOallocatorlEvectorlElongcOallocatorlElonggRsPgRsPgRsPgRcLcLiteratorgR), G__defined_typename("vector<vector<long,allocator<long> >,allocator<vector<long,allocator<long> > > >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("size",443,G__Dict_189_0_7, 107, -1, G__defined_typename("vector<vector<long,allocator<long> >,allocator<vector<long,allocator<long> > > >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("max_size",864,G__Dict_189_0_8, 107, -1, G__defined_typename("vector<vector<long,allocator<long> >,allocator<vector<long,allocator<long> > > >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__Dict_189_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<vector<long,allocator<long> >,allocator<vector<long,allocator<long> > > >::size_type' 0 - sz", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__Dict_189_0_10, 121, -1, -1, 0, 2, 1, 1, 0, 
"k - 'vector<vector<long,allocator<long> >,allocator<vector<long,allocator<long> > > >::size_type' 0 - sz u 'vector<long,allocator<long> >' - 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("capacity",846,G__Dict_189_0_11, 107, -1, G__defined_typename("vector<vector<long,allocator<long> >,allocator<vector<long,allocator<long> > > >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("empty",559,G__Dict_189_0_12, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__Dict_189_0_13, 117, G__get_linked_tagnum(&G__DictLN_vectorlElongcOallocatorlElonggRsPgR), G__defined_typename("vector<vector<long,allocator<long> >,allocator<vector<long,allocator<long> > > >::reference"), 1, 1, 1, 1, 0, "k - 'vector<vector<long,allocator<long> >,allocator<vector<long,allocator<long> > > >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__Dict_189_0_14, 117, G__get_linked_tagnum(&G__DictLN_vectorlElongcOallocatorlElonggRsPgR), G__defined_typename("vector<vector<long,allocator<long> >,allocator<vector<long,allocator<long> > > >::const_reference"), 1, 1, 1, 1, 8, "k - 'vector<vector<long,allocator<long> >,allocator<vector<long,allocator<long> > > >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<vector<long,allocator<long> >,allocator<vector<long,allocator<long> > > >",7580,G__Dict_189_0_15, 105, G__get_linked_tagnum(&G__DictLN_vectorlEvectorlElongcOallocatorlElonggRsPgRcOallocatorlEvectorlElongcOallocatorlElonggRsPgRsPgRsPgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<vector<long,allocator<long> >,allocator<vector<long,allocator<long> > > >",7580,G__Dict_189_0_16, 105, G__get_linked_tagnum(&G__DictLN_vectorlEvectorlElongcOallocatorlElonggRsPgRcOallocatorlEvectorlElongcOallocatorlElonggRsPgRsPgRsPgR), -1, 0, 2, 1, 1, 0, 
"k - 'vector<vector<long,allocator<long> >,allocator<vector<long,allocator<long> > > >::size_type' 0 - n u 'vector<long,allocator<long> >' - 11 '(vector<long,allocator<long> >)()' value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<vector<long,allocator<long> >,allocator<vector<long,allocator<long> > > >",7580,G__Dict_189_0_17, 105, G__get_linked_tagnum(&G__DictLN_vectorlEvectorlElongcOallocatorlElonggRsPgRcOallocatorlEvectorlElongcOallocatorlElonggRsPgRsPgRsPgR), -1, 0, 1, 1, 1, 0, "u 'vector<vector<long,allocator<long> >,allocator<vector<long,allocator<long> > > >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<vector<long,allocator<long> >,allocator<vector<long,allocator<long> > > >",7580,G__Dict_189_0_18, 105, G__get_linked_tagnum(&G__DictLN_vectorlEvectorlElongcOallocatorlElonggRsPgRcOallocatorlEvectorlElongcOallocatorlElonggRsPgRsPgRsPgR), -1, 0, 2, 1, 1, 0, 
"u 'vector<vector<long,allocator<long> >,allocator<vector<long,allocator<long> > > >::iterator' 'vector<vector<long,allocator<long> >,allocator<vector<long,allocator<long> > > >::const_iterator' 10 - first u 'vector<vector<long,allocator<long> >,allocator<vector<long,allocator<long> > > >::iterator' 'vector<vector<long,allocator<long> >,allocator<vector<long,allocator<long> > > >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__Dict_189_0_19, 117, G__get_linked_tagnum(&G__DictLN_vectorlEvectorlElongcOallocatorlElonggRsPgRcOallocatorlEvectorlElongcOallocatorlElonggRsPgRsPgRsPgR), -1, 1, 1, 1, 1, 0, "u 'vector<vector<long,allocator<long> >,allocator<vector<long,allocator<long> > > >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("reserve",764,G__Dict_189_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<vector<long,allocator<long> >,allocator<vector<long,allocator<long> > > >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("front",553,G__Dict_189_0_21, 117, G__get_linked_tagnum(&G__DictLN_vectorlElongcOallocatorlElonggRsPgR), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("back",401,G__Dict_189_0_22, 117, G__get_linked_tagnum(&G__DictLN_vectorlElongcOallocatorlElonggRsPgR), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("push_back",944,G__Dict_189_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<long,allocator<long> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("swap",443,G__Dict_189_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<vector<long,allocator<long> >,allocator<vector<long,allocator<long> > > >' - 1 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__Dict_189_0_25, 117, G__get_linked_tagnum(&G__DictLN_vectorlEvectorlElongcOallocatorlElonggRsPgRcOallocatorlEvectorlElongcOallocatorlElonggRsPgRsPgRsPgRcLcLiterator), -1, 0, 2, 1, 1, 0, 
"u 'vector<vector<long,allocator<long> >,allocator<vector<long,allocator<long> > > >::iterator' - 0 - position u 'vector<long,allocator<long> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__Dict_189_0_26, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<vector<long,allocator<long> >,allocator<vector<long,allocator<long> > > >::iterator' - 0 - position u 'vector<vector<long,allocator<long> >,allocator<vector<long,allocator<long> > > >::iterator' 'vector<vector<long,allocator<long> >,allocator<vector<long,allocator<long> > > >::const_iterator' 10 - first "
"u 'vector<vector<long,allocator<long> >,allocator<vector<long,allocator<long> > > >::iterator' 'vector<vector<long,allocator<long> >,allocator<vector<long,allocator<long> > > >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__Dict_189_0_27, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<vector<long,allocator<long> >,allocator<vector<long,allocator<long> > > >::iterator' - 0 - position k - 'vector<vector<long,allocator<long> >,allocator<vector<long,allocator<long> > > >::size_type' 0 - n "
"u 'vector<long,allocator<long> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pop_back",831,G__Dict_189_0_28, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__Dict_189_0_29, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<vector<long,allocator<long> >,allocator<vector<long,allocator<long> > > >::iterator' - 0 - position", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__Dict_189_0_30, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<vector<long,allocator<long> >,allocator<vector<long,allocator<long> > > >::iterator' - 0 - first u 'vector<vector<long,allocator<long> >,allocator<vector<long,allocator<long> > > >::iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__Dict_189_0_31, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~vector<vector<long,allocator<long> >,allocator<vector<long,allocator<long> > > >", 7706, G__Dict_189_0_32, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncvectorlEvectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgRcOallocatorlEvectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgRsPgRsPgR(void) {
   /* vector<vector<unsigned char,allocator<unsigned char> >,allocator<vector<unsigned char,allocator<unsigned char> > > > */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgRcOallocatorlEvectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgRsPgRsPgR));
   G__memfunc_setup("at",213,G__Dict_193_0_1, 117, G__get_linked_tagnum(&G__DictLN_vectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgR), G__defined_typename("vector<vector<unsigned char,allocator<unsigned char> >,allocator<vector<unsigned char,allocator<unsigned char> > > >::reference"), 1, 1, 1, 1, 0, "k - 'vector<vector<unsigned char,allocator<unsigned char> >,allocator<vector<unsigned char,allocator<unsigned char> > > >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("at",213,G__Dict_193_0_2, 117, G__get_linked_tagnum(&G__DictLN_vectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgR), G__defined_typename("vector<vector<unsigned char,allocator<unsigned char> >,allocator<vector<unsigned char,allocator<unsigned char> > > >::const_reference"), 1, 1, 1, 1, 8, "k - 'vector<vector<unsigned char,allocator<unsigned char> >,allocator<vector<unsigned char,allocator<unsigned char> > > >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__Dict_193_0_3, 117, G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgRcOallocatorlEvectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgRsPgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__Dict_193_0_4, 117, G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgRcOallocatorlEvectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgRsPgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rbegin",631,G__Dict_193_0_5, 117, G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlEvectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgRcOallocatorlEvectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgRsPgRsPgRcLcLiteratorgR), G__defined_typename("vector<vector<unsigned char,allocator<unsigned char> >,allocator<vector<unsigned char,allocator<unsigned char> > > >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rend",425,G__Dict_193_0_6, 117, G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlEvectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgRcOallocatorlEvectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgRsPgRsPgRcLcLiteratorgR), G__defined_typename("vector<vector<unsigned char,allocator<unsigned char> >,allocator<vector<unsigned char,allocator<unsigned char> > > >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("size",443,G__Dict_193_0_7, 107, -1, G__defined_typename("vector<vector<unsigned char,allocator<unsigned char> >,allocator<vector<unsigned char,allocator<unsigned char> > > >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("max_size",864,G__Dict_193_0_8, 107, -1, G__defined_typename("vector<vector<unsigned char,allocator<unsigned char> >,allocator<vector<unsigned char,allocator<unsigned char> > > >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__Dict_193_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<vector<unsigned char,allocator<unsigned char> >,allocator<vector<unsigned char,allocator<unsigned char> > > >::size_type' 0 - sz", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__Dict_193_0_10, 121, -1, -1, 0, 2, 1, 1, 0, 
"k - 'vector<vector<unsigned char,allocator<unsigned char> >,allocator<vector<unsigned char,allocator<unsigned char> > > >::size_type' 0 - sz u 'vector<unsigned char,allocator<unsigned char> >' - 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("capacity",846,G__Dict_193_0_11, 107, -1, G__defined_typename("vector<vector<unsigned char,allocator<unsigned char> >,allocator<vector<unsigned char,allocator<unsigned char> > > >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("empty",559,G__Dict_193_0_12, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__Dict_193_0_13, 117, G__get_linked_tagnum(&G__DictLN_vectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgR), G__defined_typename("vector<vector<unsigned char,allocator<unsigned char> >,allocator<vector<unsigned char,allocator<unsigned char> > > >::reference"), 1, 1, 1, 1, 0, "k - 'vector<vector<unsigned char,allocator<unsigned char> >,allocator<vector<unsigned char,allocator<unsigned char> > > >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__Dict_193_0_14, 117, G__get_linked_tagnum(&G__DictLN_vectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgR), G__defined_typename("vector<vector<unsigned char,allocator<unsigned char> >,allocator<vector<unsigned char,allocator<unsigned char> > > >::const_reference"), 1, 1, 1, 1, 8, "k - 'vector<vector<unsigned char,allocator<unsigned char> >,allocator<vector<unsigned char,allocator<unsigned char> > > >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<vector<unsigned char,allocator<unsigned char> >,allocator<vector<unsigned char,allocator<unsigned char> > > >",11080,G__Dict_193_0_15, 105, G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgRcOallocatorlEvectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgRsPgRsPgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<vector<unsigned char,allocator<unsigned char> >,allocator<vector<unsigned char,allocator<unsigned char> > > >",11080,G__Dict_193_0_16, 105, G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgRcOallocatorlEvectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgRsPgRsPgR), -1, 0, 2, 1, 1, 0, 
"k - 'vector<vector<unsigned char,allocator<unsigned char> >,allocator<vector<unsigned char,allocator<unsigned char> > > >::size_type' 0 - n u 'vector<unsigned char,allocator<unsigned char> >' - 11 '(vector<unsigned char,allocator<unsigned char> >)()' value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<vector<unsigned char,allocator<unsigned char> >,allocator<vector<unsigned char,allocator<unsigned char> > > >",11080,G__Dict_193_0_17, 105, G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgRcOallocatorlEvectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgRsPgRsPgR), -1, 0, 1, 1, 1, 0, "u 'vector<vector<unsigned char,allocator<unsigned char> >,allocator<vector<unsigned char,allocator<unsigned char> > > >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<vector<unsigned char,allocator<unsigned char> >,allocator<vector<unsigned char,allocator<unsigned char> > > >",11080,G__Dict_193_0_18, 105, G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgRcOallocatorlEvectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgRsPgRsPgR), -1, 0, 2, 1, 1, 0, 
"u 'vector<vector<unsigned char,allocator<unsigned char> >,allocator<vector<unsigned char,allocator<unsigned char> > > >::iterator' 'vector<vector<unsigned char,allocator<unsigned char> >,allocator<vector<unsigned char,allocator<unsigned char> > > >::const_iterator' 10 - first u 'vector<vector<unsigned char,allocator<unsigned char> >,allocator<vector<unsigned char,allocator<unsigned char> > > >::iterator' 'vector<vector<unsigned char,allocator<unsigned char> >,allocator<vector<unsigned char,allocator<unsigned char> > > >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__Dict_193_0_19, 117, G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgRcOallocatorlEvectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgRsPgRsPgR), -1, 1, 1, 1, 1, 0, "u 'vector<vector<unsigned char,allocator<unsigned char> >,allocator<vector<unsigned char,allocator<unsigned char> > > >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("reserve",764,G__Dict_193_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<vector<unsigned char,allocator<unsigned char> >,allocator<vector<unsigned char,allocator<unsigned char> > > >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("front",553,G__Dict_193_0_21, 117, G__get_linked_tagnum(&G__DictLN_vectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgR), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("back",401,G__Dict_193_0_22, 117, G__get_linked_tagnum(&G__DictLN_vectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgR), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("push_back",944,G__Dict_193_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<unsigned char,allocator<unsigned char> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("swap",443,G__Dict_193_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<vector<unsigned char,allocator<unsigned char> >,allocator<vector<unsigned char,allocator<unsigned char> > > >' - 1 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__Dict_193_0_25, 117, G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgRcOallocatorlEvectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgRsPgRsPgRcLcLiterator), -1, 0, 2, 1, 1, 0, 
"u 'vector<vector<unsigned char,allocator<unsigned char> >,allocator<vector<unsigned char,allocator<unsigned char> > > >::iterator' - 0 - position u 'vector<unsigned char,allocator<unsigned char> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__Dict_193_0_26, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<vector<unsigned char,allocator<unsigned char> >,allocator<vector<unsigned char,allocator<unsigned char> > > >::iterator' - 0 - position u 'vector<vector<unsigned char,allocator<unsigned char> >,allocator<vector<unsigned char,allocator<unsigned char> > > >::iterator' 'vector<vector<unsigned char,allocator<unsigned char> >,allocator<vector<unsigned char,allocator<unsigned char> > > >::const_iterator' 10 - first "
"u 'vector<vector<unsigned char,allocator<unsigned char> >,allocator<vector<unsigned char,allocator<unsigned char> > > >::iterator' 'vector<vector<unsigned char,allocator<unsigned char> >,allocator<vector<unsigned char,allocator<unsigned char> > > >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__Dict_193_0_27, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<vector<unsigned char,allocator<unsigned char> >,allocator<vector<unsigned char,allocator<unsigned char> > > >::iterator' - 0 - position k - 'vector<vector<unsigned char,allocator<unsigned char> >,allocator<vector<unsigned char,allocator<unsigned char> > > >::size_type' 0 - n "
"u 'vector<unsigned char,allocator<unsigned char> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pop_back",831,G__Dict_193_0_28, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__Dict_193_0_29, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<vector<unsigned char,allocator<unsigned char> >,allocator<vector<unsigned char,allocator<unsigned char> > > >::iterator' - 0 - position", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__Dict_193_0_30, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<vector<unsigned char,allocator<unsigned char> >,allocator<vector<unsigned char,allocator<unsigned char> > > >::iterator' - 0 - first u 'vector<vector<unsigned char,allocator<unsigned char> >,allocator<vector<unsigned char,allocator<unsigned char> > > >::iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__Dict_193_0_31, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~vector<vector<unsigned char,allocator<unsigned char> >,allocator<vector<unsigned char,allocator<unsigned char> > > >", 11206, G__Dict_193_0_32, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncvectorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcOallocatorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRsPgRsPgR(void) {
   /* vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > > */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcOallocatorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRsPgRsPgR));
   G__memfunc_setup("at",213,G__Dict_197_0_1, 117, G__get_linked_tagnum(&G__DictLN_vectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgR), G__defined_typename("vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >::reference"), 1, 1, 1, 1, 0, "k - 'vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("at",213,G__Dict_197_0_2, 117, G__get_linked_tagnum(&G__DictLN_vectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgR), G__defined_typename("vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >::const_reference"), 1, 1, 1, 1, 8, "k - 'vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__Dict_197_0_3, 117, G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcOallocatorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRsPgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__Dict_197_0_4, 117, G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcOallocatorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRsPgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rbegin",631,G__Dict_197_0_5, 117, G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcOallocatorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRsPgRsPgRcLcLiteratorgR), G__defined_typename("vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rend",425,G__Dict_197_0_6, 117, G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcOallocatorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRsPgRsPgRcLcLiteratorgR), G__defined_typename("vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("size",443,G__Dict_197_0_7, 107, -1, G__defined_typename("vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("max_size",864,G__Dict_197_0_8, 107, -1, G__defined_typename("vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__Dict_197_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >::size_type' 0 - sz", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__Dict_197_0_10, 121, -1, -1, 0, 2, 1, 1, 0, 
"k - 'vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >::size_type' 0 - sz u 'vector<unsigned short,allocator<unsigned short> >' - 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("capacity",846,G__Dict_197_0_11, 107, -1, G__defined_typename("vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("empty",559,G__Dict_197_0_12, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__Dict_197_0_13, 117, G__get_linked_tagnum(&G__DictLN_vectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgR), G__defined_typename("vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >::reference"), 1, 1, 1, 1, 0, "k - 'vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__Dict_197_0_14, 117, G__get_linked_tagnum(&G__DictLN_vectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgR), G__defined_typename("vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >::const_reference"), 1, 1, 1, 1, 8, "k - 'vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >",11664,G__Dict_197_0_15, 105, G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcOallocatorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRsPgRsPgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >",11664,G__Dict_197_0_16, 105, G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcOallocatorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRsPgRsPgR), -1, 0, 2, 1, 1, 0, 
"k - 'vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >::size_type' 0 - n u 'vector<unsigned short,allocator<unsigned short> >' - 11 '(vector<unsigned short,allocator<unsigned short> >)()' value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >",11664,G__Dict_197_0_17, 105, G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcOallocatorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRsPgRsPgR), -1, 0, 1, 1, 1, 0, "u 'vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >",11664,G__Dict_197_0_18, 105, G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcOallocatorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRsPgRsPgR), -1, 0, 2, 1, 1, 0, 
"u 'vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >::iterator' 'vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >::const_iterator' 10 - first u 'vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >::iterator' 'vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__Dict_197_0_19, 117, G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcOallocatorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRsPgRsPgR), -1, 1, 1, 1, 1, 0, "u 'vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("reserve",764,G__Dict_197_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("front",553,G__Dict_197_0_21, 117, G__get_linked_tagnum(&G__DictLN_vectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgR), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("back",401,G__Dict_197_0_22, 117, G__get_linked_tagnum(&G__DictLN_vectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgR), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("push_back",944,G__Dict_197_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<unsigned short,allocator<unsigned short> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("swap",443,G__Dict_197_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >' - 1 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__Dict_197_0_25, 117, G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcOallocatorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRsPgRsPgRcLcLiterator), -1, 0, 2, 1, 1, 0, 
"u 'vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >::iterator' - 0 - position u 'vector<unsigned short,allocator<unsigned short> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__Dict_197_0_26, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >::iterator' - 0 - position u 'vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >::iterator' 'vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >::const_iterator' 10 - first "
"u 'vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >::iterator' 'vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__Dict_197_0_27, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >::iterator' - 0 - position k - 'vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >::size_type' 0 - n "
"u 'vector<unsigned short,allocator<unsigned short> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pop_back",831,G__Dict_197_0_28, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__Dict_197_0_29, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >::iterator' - 0 - position", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__Dict_197_0_30, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >::iterator' - 0 - first u 'vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >::iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__Dict_197_0_31, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >", 11790, G__Dict_197_0_32, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncvectorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcOallocatorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRsPgRsPgR(void) {
   /* vector<vector<unsigned int,allocator<unsigned int> >,allocator<vector<unsigned int,allocator<unsigned int> > > > */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcOallocatorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRsPgRsPgR));
   G__memfunc_setup("at",213,G__Dict_201_0_1, 117, G__get_linked_tagnum(&G__DictLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR), G__defined_typename("vector<vector<unsigned int,allocator<unsigned int> >,allocator<vector<unsigned int,allocator<unsigned int> > > >::reference"), 1, 1, 1, 1, 0, "k - 'vector<vector<unsigned int,allocator<unsigned int> >,allocator<vector<unsigned int,allocator<unsigned int> > > >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("at",213,G__Dict_201_0_2, 117, G__get_linked_tagnum(&G__DictLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR), G__defined_typename("vector<vector<unsigned int,allocator<unsigned int> >,allocator<vector<unsigned int,allocator<unsigned int> > > >::const_reference"), 1, 1, 1, 1, 8, "k - 'vector<vector<unsigned int,allocator<unsigned int> >,allocator<vector<unsigned int,allocator<unsigned int> > > >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__Dict_201_0_3, 117, G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcOallocatorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRsPgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__Dict_201_0_4, 117, G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcOallocatorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRsPgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rbegin",631,G__Dict_201_0_5, 117, G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcOallocatorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRsPgRsPgRcLcLiteratorgR), G__defined_typename("vector<vector<unsigned int,allocator<unsigned int> >,allocator<vector<unsigned int,allocator<unsigned int> > > >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rend",425,G__Dict_201_0_6, 117, G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcOallocatorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRsPgRsPgRcLcLiteratorgR), G__defined_typename("vector<vector<unsigned int,allocator<unsigned int> >,allocator<vector<unsigned int,allocator<unsigned int> > > >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("size",443,G__Dict_201_0_7, 107, -1, G__defined_typename("vector<vector<unsigned int,allocator<unsigned int> >,allocator<vector<unsigned int,allocator<unsigned int> > > >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("max_size",864,G__Dict_201_0_8, 107, -1, G__defined_typename("vector<vector<unsigned int,allocator<unsigned int> >,allocator<vector<unsigned int,allocator<unsigned int> > > >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__Dict_201_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<vector<unsigned int,allocator<unsigned int> >,allocator<vector<unsigned int,allocator<unsigned int> > > >::size_type' 0 - sz", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__Dict_201_0_10, 121, -1, -1, 0, 2, 1, 1, 0, 
"k - 'vector<vector<unsigned int,allocator<unsigned int> >,allocator<vector<unsigned int,allocator<unsigned int> > > >::size_type' 0 - sz u 'vector<unsigned int,allocator<unsigned int> >' - 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("capacity",846,G__Dict_201_0_11, 107, -1, G__defined_typename("vector<vector<unsigned int,allocator<unsigned int> >,allocator<vector<unsigned int,allocator<unsigned int> > > >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("empty",559,G__Dict_201_0_12, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__Dict_201_0_13, 117, G__get_linked_tagnum(&G__DictLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR), G__defined_typename("vector<vector<unsigned int,allocator<unsigned int> >,allocator<vector<unsigned int,allocator<unsigned int> > > >::reference"), 1, 1, 1, 1, 0, "k - 'vector<vector<unsigned int,allocator<unsigned int> >,allocator<vector<unsigned int,allocator<unsigned int> > > >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__Dict_201_0_14, 117, G__get_linked_tagnum(&G__DictLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR), G__defined_typename("vector<vector<unsigned int,allocator<unsigned int> >,allocator<vector<unsigned int,allocator<unsigned int> > > >::const_reference"), 1, 1, 1, 1, 8, "k - 'vector<vector<unsigned int,allocator<unsigned int> >,allocator<vector<unsigned int,allocator<unsigned int> > > >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<vector<unsigned int,allocator<unsigned int> >,allocator<vector<unsigned int,allocator<unsigned int> > > >",10748,G__Dict_201_0_15, 105, G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcOallocatorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRsPgRsPgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<vector<unsigned int,allocator<unsigned int> >,allocator<vector<unsigned int,allocator<unsigned int> > > >",10748,G__Dict_201_0_16, 105, G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcOallocatorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRsPgRsPgR), -1, 0, 2, 1, 1, 0, 
"k - 'vector<vector<unsigned int,allocator<unsigned int> >,allocator<vector<unsigned int,allocator<unsigned int> > > >::size_type' 0 - n u 'vector<unsigned int,allocator<unsigned int> >' - 11 '(vector<unsigned int,allocator<unsigned int> >)()' value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<vector<unsigned int,allocator<unsigned int> >,allocator<vector<unsigned int,allocator<unsigned int> > > >",10748,G__Dict_201_0_17, 105, G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcOallocatorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRsPgRsPgR), -1, 0, 1, 1, 1, 0, "u 'vector<vector<unsigned int,allocator<unsigned int> >,allocator<vector<unsigned int,allocator<unsigned int> > > >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<vector<unsigned int,allocator<unsigned int> >,allocator<vector<unsigned int,allocator<unsigned int> > > >",10748,G__Dict_201_0_18, 105, G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcOallocatorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRsPgRsPgR), -1, 0, 2, 1, 1, 0, 
"u 'vector<vector<unsigned int,allocator<unsigned int> >,allocator<vector<unsigned int,allocator<unsigned int> > > >::iterator' 'vector<vector<unsigned int,allocator<unsigned int> >,allocator<vector<unsigned int,allocator<unsigned int> > > >::const_iterator' 10 - first u 'vector<vector<unsigned int,allocator<unsigned int> >,allocator<vector<unsigned int,allocator<unsigned int> > > >::iterator' 'vector<vector<unsigned int,allocator<unsigned int> >,allocator<vector<unsigned int,allocator<unsigned int> > > >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__Dict_201_0_19, 117, G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcOallocatorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRsPgRsPgR), -1, 1, 1, 1, 1, 0, "u 'vector<vector<unsigned int,allocator<unsigned int> >,allocator<vector<unsigned int,allocator<unsigned int> > > >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("reserve",764,G__Dict_201_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<vector<unsigned int,allocator<unsigned int> >,allocator<vector<unsigned int,allocator<unsigned int> > > >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("front",553,G__Dict_201_0_21, 117, G__get_linked_tagnum(&G__DictLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("back",401,G__Dict_201_0_22, 117, G__get_linked_tagnum(&G__DictLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("push_back",944,G__Dict_201_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<unsigned int,allocator<unsigned int> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("swap",443,G__Dict_201_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<vector<unsigned int,allocator<unsigned int> >,allocator<vector<unsigned int,allocator<unsigned int> > > >' - 1 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__Dict_201_0_25, 117, G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcOallocatorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRsPgRsPgRcLcLiterator), -1, 0, 2, 1, 1, 0, 
"u 'vector<vector<unsigned int,allocator<unsigned int> >,allocator<vector<unsigned int,allocator<unsigned int> > > >::iterator' - 0 - position u 'vector<unsigned int,allocator<unsigned int> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__Dict_201_0_26, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<vector<unsigned int,allocator<unsigned int> >,allocator<vector<unsigned int,allocator<unsigned int> > > >::iterator' - 0 - position u 'vector<vector<unsigned int,allocator<unsigned int> >,allocator<vector<unsigned int,allocator<unsigned int> > > >::iterator' 'vector<vector<unsigned int,allocator<unsigned int> >,allocator<vector<unsigned int,allocator<unsigned int> > > >::const_iterator' 10 - first "
"u 'vector<vector<unsigned int,allocator<unsigned int> >,allocator<vector<unsigned int,allocator<unsigned int> > > >::iterator' 'vector<vector<unsigned int,allocator<unsigned int> >,allocator<vector<unsigned int,allocator<unsigned int> > > >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__Dict_201_0_27, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<vector<unsigned int,allocator<unsigned int> >,allocator<vector<unsigned int,allocator<unsigned int> > > >::iterator' - 0 - position k - 'vector<vector<unsigned int,allocator<unsigned int> >,allocator<vector<unsigned int,allocator<unsigned int> > > >::size_type' 0 - n "
"u 'vector<unsigned int,allocator<unsigned int> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pop_back",831,G__Dict_201_0_28, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__Dict_201_0_29, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<vector<unsigned int,allocator<unsigned int> >,allocator<vector<unsigned int,allocator<unsigned int> > > >::iterator' - 0 - position", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__Dict_201_0_30, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<vector<unsigned int,allocator<unsigned int> >,allocator<vector<unsigned int,allocator<unsigned int> > > >::iterator' - 0 - first u 'vector<vector<unsigned int,allocator<unsigned int> >,allocator<vector<unsigned int,allocator<unsigned int> > > >::iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__Dict_201_0_31, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~vector<vector<unsigned int,allocator<unsigned int> >,allocator<vector<unsigned int,allocator<unsigned int> > > >", 10874, G__Dict_201_0_32, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncvectorlEvectorlEunsignedsPlongcOallocatorlEunsignedsPlonggRsPgRcOallocatorlEvectorlEunsignedsPlongcOallocatorlEunsignedsPlonggRsPgRsPgRsPgR(void) {
   /* vector<vector<unsigned long,allocator<unsigned long> >,allocator<vector<unsigned long,allocator<unsigned long> > > > */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEunsignedsPlongcOallocatorlEunsignedsPlonggRsPgRcOallocatorlEvectorlEunsignedsPlongcOallocatorlEunsignedsPlonggRsPgRsPgRsPgR));
   G__memfunc_setup("at",213,G__Dict_205_0_1, 117, G__get_linked_tagnum(&G__DictLN_vectorlEunsignedsPlongcOallocatorlEunsignedsPlonggRsPgR), G__defined_typename("vector<vector<unsigned long,allocator<unsigned long> >,allocator<vector<unsigned long,allocator<unsigned long> > > >::reference"), 1, 1, 1, 1, 0, "k - 'vector<vector<unsigned long,allocator<unsigned long> >,allocator<vector<unsigned long,allocator<unsigned long> > > >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("at",213,G__Dict_205_0_2, 117, G__get_linked_tagnum(&G__DictLN_vectorlEunsignedsPlongcOallocatorlEunsignedsPlonggRsPgR), G__defined_typename("vector<vector<unsigned long,allocator<unsigned long> >,allocator<vector<unsigned long,allocator<unsigned long> > > >::const_reference"), 1, 1, 1, 1, 8, "k - 'vector<vector<unsigned long,allocator<unsigned long> >,allocator<vector<unsigned long,allocator<unsigned long> > > >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__Dict_205_0_3, 117, G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEunsignedsPlongcOallocatorlEunsignedsPlonggRsPgRcOallocatorlEvectorlEunsignedsPlongcOallocatorlEunsignedsPlonggRsPgRsPgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__Dict_205_0_4, 117, G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEunsignedsPlongcOallocatorlEunsignedsPlonggRsPgRcOallocatorlEvectorlEunsignedsPlongcOallocatorlEunsignedsPlonggRsPgRsPgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rbegin",631,G__Dict_205_0_5, 117, G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlEvectorlEunsignedsPlongcOallocatorlEunsignedsPlonggRsPgRcOallocatorlEvectorlEunsignedsPlongcOallocatorlEunsignedsPlonggRsPgRsPgRsPgRcLcLiteratorgR), G__defined_typename("vector<vector<unsigned long,allocator<unsigned long> >,allocator<vector<unsigned long,allocator<unsigned long> > > >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rend",425,G__Dict_205_0_6, 117, G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlEvectorlEunsignedsPlongcOallocatorlEunsignedsPlonggRsPgRcOallocatorlEvectorlEunsignedsPlongcOallocatorlEunsignedsPlonggRsPgRsPgRsPgRcLcLiteratorgR), G__defined_typename("vector<vector<unsigned long,allocator<unsigned long> >,allocator<vector<unsigned long,allocator<unsigned long> > > >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("size",443,G__Dict_205_0_7, 107, -1, G__defined_typename("vector<vector<unsigned long,allocator<unsigned long> >,allocator<vector<unsigned long,allocator<unsigned long> > > >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("max_size",864,G__Dict_205_0_8, 107, -1, G__defined_typename("vector<vector<unsigned long,allocator<unsigned long> >,allocator<vector<unsigned long,allocator<unsigned long> > > >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__Dict_205_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<vector<unsigned long,allocator<unsigned long> >,allocator<vector<unsigned long,allocator<unsigned long> > > >::size_type' 0 - sz", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__Dict_205_0_10, 121, -1, -1, 0, 2, 1, 1, 0, 
"k - 'vector<vector<unsigned long,allocator<unsigned long> >,allocator<vector<unsigned long,allocator<unsigned long> > > >::size_type' 0 - sz u 'vector<unsigned long,allocator<unsigned long> >' - 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("capacity",846,G__Dict_205_0_11, 107, -1, G__defined_typename("vector<vector<unsigned long,allocator<unsigned long> >,allocator<vector<unsigned long,allocator<unsigned long> > > >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("empty",559,G__Dict_205_0_12, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__Dict_205_0_13, 117, G__get_linked_tagnum(&G__DictLN_vectorlEunsignedsPlongcOallocatorlEunsignedsPlonggRsPgR), G__defined_typename("vector<vector<unsigned long,allocator<unsigned long> >,allocator<vector<unsigned long,allocator<unsigned long> > > >::reference"), 1, 1, 1, 1, 0, "k - 'vector<vector<unsigned long,allocator<unsigned long> >,allocator<vector<unsigned long,allocator<unsigned long> > > >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__Dict_205_0_14, 117, G__get_linked_tagnum(&G__DictLN_vectorlEunsignedsPlongcOallocatorlEunsignedsPlonggRsPgR), G__defined_typename("vector<vector<unsigned long,allocator<unsigned long> >,allocator<vector<unsigned long,allocator<unsigned long> > > >::const_reference"), 1, 1, 1, 1, 8, "k - 'vector<vector<unsigned long,allocator<unsigned long> >,allocator<vector<unsigned long,allocator<unsigned long> > > >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<vector<unsigned long,allocator<unsigned long> >,allocator<vector<unsigned long,allocator<unsigned long> > > >",11152,G__Dict_205_0_15, 105, G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEunsignedsPlongcOallocatorlEunsignedsPlonggRsPgRcOallocatorlEvectorlEunsignedsPlongcOallocatorlEunsignedsPlonggRsPgRsPgRsPgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<vector<unsigned long,allocator<unsigned long> >,allocator<vector<unsigned long,allocator<unsigned long> > > >",11152,G__Dict_205_0_16, 105, G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEunsignedsPlongcOallocatorlEunsignedsPlonggRsPgRcOallocatorlEvectorlEunsignedsPlongcOallocatorlEunsignedsPlonggRsPgRsPgRsPgR), -1, 0, 2, 1, 1, 0, 
"k - 'vector<vector<unsigned long,allocator<unsigned long> >,allocator<vector<unsigned long,allocator<unsigned long> > > >::size_type' 0 - n u 'vector<unsigned long,allocator<unsigned long> >' - 11 '(vector<unsigned long,allocator<unsigned long> >)()' value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<vector<unsigned long,allocator<unsigned long> >,allocator<vector<unsigned long,allocator<unsigned long> > > >",11152,G__Dict_205_0_17, 105, G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEunsignedsPlongcOallocatorlEunsignedsPlonggRsPgRcOallocatorlEvectorlEunsignedsPlongcOallocatorlEunsignedsPlonggRsPgRsPgRsPgR), -1, 0, 1, 1, 1, 0, "u 'vector<vector<unsigned long,allocator<unsigned long> >,allocator<vector<unsigned long,allocator<unsigned long> > > >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<vector<unsigned long,allocator<unsigned long> >,allocator<vector<unsigned long,allocator<unsigned long> > > >",11152,G__Dict_205_0_18, 105, G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEunsignedsPlongcOallocatorlEunsignedsPlonggRsPgRcOallocatorlEvectorlEunsignedsPlongcOallocatorlEunsignedsPlonggRsPgRsPgRsPgR), -1, 0, 2, 1, 1, 0, 
"u 'vector<vector<unsigned long,allocator<unsigned long> >,allocator<vector<unsigned long,allocator<unsigned long> > > >::iterator' 'vector<vector<unsigned long,allocator<unsigned long> >,allocator<vector<unsigned long,allocator<unsigned long> > > >::const_iterator' 10 - first u 'vector<vector<unsigned long,allocator<unsigned long> >,allocator<vector<unsigned long,allocator<unsigned long> > > >::iterator' 'vector<vector<unsigned long,allocator<unsigned long> >,allocator<vector<unsigned long,allocator<unsigned long> > > >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__Dict_205_0_19, 117, G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEunsignedsPlongcOallocatorlEunsignedsPlonggRsPgRcOallocatorlEvectorlEunsignedsPlongcOallocatorlEunsignedsPlonggRsPgRsPgRsPgR), -1, 1, 1, 1, 1, 0, "u 'vector<vector<unsigned long,allocator<unsigned long> >,allocator<vector<unsigned long,allocator<unsigned long> > > >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("reserve",764,G__Dict_205_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<vector<unsigned long,allocator<unsigned long> >,allocator<vector<unsigned long,allocator<unsigned long> > > >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("front",553,G__Dict_205_0_21, 117, G__get_linked_tagnum(&G__DictLN_vectorlEunsignedsPlongcOallocatorlEunsignedsPlonggRsPgR), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("back",401,G__Dict_205_0_22, 117, G__get_linked_tagnum(&G__DictLN_vectorlEunsignedsPlongcOallocatorlEunsignedsPlonggRsPgR), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("push_back",944,G__Dict_205_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<unsigned long,allocator<unsigned long> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("swap",443,G__Dict_205_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<vector<unsigned long,allocator<unsigned long> >,allocator<vector<unsigned long,allocator<unsigned long> > > >' - 1 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__Dict_205_0_25, 117, G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEunsignedsPlongcOallocatorlEunsignedsPlonggRsPgRcOallocatorlEvectorlEunsignedsPlongcOallocatorlEunsignedsPlonggRsPgRsPgRsPgRcLcLiterator), -1, 0, 2, 1, 1, 0, 
"u 'vector<vector<unsigned long,allocator<unsigned long> >,allocator<vector<unsigned long,allocator<unsigned long> > > >::iterator' - 0 - position u 'vector<unsigned long,allocator<unsigned long> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__Dict_205_0_26, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<vector<unsigned long,allocator<unsigned long> >,allocator<vector<unsigned long,allocator<unsigned long> > > >::iterator' - 0 - position u 'vector<vector<unsigned long,allocator<unsigned long> >,allocator<vector<unsigned long,allocator<unsigned long> > > >::iterator' 'vector<vector<unsigned long,allocator<unsigned long> >,allocator<vector<unsigned long,allocator<unsigned long> > > >::const_iterator' 10 - first "
"u 'vector<vector<unsigned long,allocator<unsigned long> >,allocator<vector<unsigned long,allocator<unsigned long> > > >::iterator' 'vector<vector<unsigned long,allocator<unsigned long> >,allocator<vector<unsigned long,allocator<unsigned long> > > >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__Dict_205_0_27, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<vector<unsigned long,allocator<unsigned long> >,allocator<vector<unsigned long,allocator<unsigned long> > > >::iterator' - 0 - position k - 'vector<vector<unsigned long,allocator<unsigned long> >,allocator<vector<unsigned long,allocator<unsigned long> > > >::size_type' 0 - n "
"u 'vector<unsigned long,allocator<unsigned long> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pop_back",831,G__Dict_205_0_28, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__Dict_205_0_29, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<vector<unsigned long,allocator<unsigned long> >,allocator<vector<unsigned long,allocator<unsigned long> > > >::iterator' - 0 - position", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__Dict_205_0_30, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<vector<unsigned long,allocator<unsigned long> >,allocator<vector<unsigned long,allocator<unsigned long> > > >::iterator' - 0 - first u 'vector<vector<unsigned long,allocator<unsigned long> >,allocator<vector<unsigned long,allocator<unsigned long> > > >::iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__Dict_205_0_31, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~vector<vector<unsigned long,allocator<unsigned long> >,allocator<vector<unsigned long,allocator<unsigned long> > > >", 11278, G__Dict_205_0_32, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncvectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR(void) {
   /* vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > > */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR));
   G__memfunc_setup("at",213,G__Dict_209_0_1, 117, G__get_linked_tagnum(&G__DictLN_vectorlEfloatcOallocatorlEfloatgRsPgR), G__defined_typename("vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::reference"), 1, 1, 1, 1, 0, "k - 'vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("at",213,G__Dict_209_0_2, 117, G__get_linked_tagnum(&G__DictLN_vectorlEfloatcOallocatorlEfloatgRsPgR), G__defined_typename("vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::const_reference"), 1, 1, 1, 1, 8, "k - 'vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__Dict_209_0_3, 117, G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__Dict_209_0_4, 117, G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rbegin",631,G__Dict_209_0_5, 117, G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRcLcLiteratorgR), G__defined_typename("vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rend",425,G__Dict_209_0_6, 117, G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRcLcLiteratorgR), G__defined_typename("vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("size",443,G__Dict_209_0_7, 107, -1, G__defined_typename("vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("max_size",864,G__Dict_209_0_8, 107, -1, G__defined_typename("vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__Dict_209_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::size_type' 0 - sz", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__Dict_209_0_10, 121, -1, -1, 0, 2, 1, 1, 0, 
"k - 'vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::size_type' 0 - sz u 'vector<float,allocator<float> >' - 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("capacity",846,G__Dict_209_0_11, 107, -1, G__defined_typename("vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("empty",559,G__Dict_209_0_12, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__Dict_209_0_13, 117, G__get_linked_tagnum(&G__DictLN_vectorlEfloatcOallocatorlEfloatgRsPgR), G__defined_typename("vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::reference"), 1, 1, 1, 1, 0, "k - 'vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__Dict_209_0_14, 117, G__get_linked_tagnum(&G__DictLN_vectorlEfloatcOallocatorlEfloatgRsPgR), G__defined_typename("vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::const_reference"), 1, 1, 1, 1, 8, "k - 'vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >",7988,G__Dict_209_0_15, 105, G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >",7988,G__Dict_209_0_16, 105, G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR), -1, 0, 2, 1, 1, 0, 
"k - 'vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::size_type' 0 - n u 'vector<float,allocator<float> >' - 11 '(vector<float,allocator<float> >)()' value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >",7988,G__Dict_209_0_17, 105, G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR), -1, 0, 1, 1, 1, 0, "u 'vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >",7988,G__Dict_209_0_18, 105, G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR), -1, 0, 2, 1, 1, 0, 
"u 'vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::iterator' 'vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::const_iterator' 10 - first u 'vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::iterator' 'vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__Dict_209_0_19, 117, G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR), -1, 1, 1, 1, 1, 0, "u 'vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("reserve",764,G__Dict_209_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("front",553,G__Dict_209_0_21, 117, G__get_linked_tagnum(&G__DictLN_vectorlEfloatcOallocatorlEfloatgRsPgR), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("back",401,G__Dict_209_0_22, 117, G__get_linked_tagnum(&G__DictLN_vectorlEfloatcOallocatorlEfloatgRsPgR), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("push_back",944,G__Dict_209_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<float,allocator<float> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("swap",443,G__Dict_209_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >' - 1 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__Dict_209_0_25, 117, G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRcLcLiterator), -1, 0, 2, 1, 1, 0, 
"u 'vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::iterator' - 0 - position u 'vector<float,allocator<float> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__Dict_209_0_26, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::iterator' - 0 - position u 'vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::iterator' 'vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::const_iterator' 10 - first "
"u 'vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::iterator' 'vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__Dict_209_0_27, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::iterator' - 0 - position k - 'vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::size_type' 0 - n "
"u 'vector<float,allocator<float> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pop_back",831,G__Dict_209_0_28, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__Dict_209_0_29, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::iterator' - 0 - position", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__Dict_209_0_30, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::iterator' - 0 - first u 'vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__Dict_209_0_31, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >", 8114, G__Dict_209_0_32, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR(void) {
   /* vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > > */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR));
   G__memfunc_setup("at",213,G__Dict_213_0_1, 117, G__get_linked_tagnum(&G__DictLN_vectorlEdoublecOallocatorlEdoublegRsPgR), G__defined_typename("vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::reference"), 1, 1, 1, 1, 0, "k - 'vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("at",213,G__Dict_213_0_2, 117, G__get_linked_tagnum(&G__DictLN_vectorlEdoublecOallocatorlEdoublegRsPgR), G__defined_typename("vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::const_reference"), 1, 1, 1, 1, 8, "k - 'vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__Dict_213_0_3, 117, G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__Dict_213_0_4, 117, G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rbegin",631,G__Dict_213_0_5, 117, G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRcLcLiteratorgR), G__defined_typename("vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rend",425,G__Dict_213_0_6, 117, G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRcLcLiteratorgR), G__defined_typename("vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("size",443,G__Dict_213_0_7, 107, -1, G__defined_typename("vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("max_size",864,G__Dict_213_0_8, 107, -1, G__defined_typename("vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__Dict_213_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::size_type' 0 - sz", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__Dict_213_0_10, 121, -1, -1, 0, 2, 1, 1, 0, 
"k - 'vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::size_type' 0 - sz u 'vector<double,allocator<double> >' - 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("capacity",846,G__Dict_213_0_11, 107, -1, G__defined_typename("vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("empty",559,G__Dict_213_0_12, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__Dict_213_0_13, 117, G__get_linked_tagnum(&G__DictLN_vectorlEdoublecOallocatorlEdoublegRsPgR), G__defined_typename("vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::reference"), 1, 1, 1, 1, 0, "k - 'vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__Dict_213_0_14, 117, G__get_linked_tagnum(&G__DictLN_vectorlEdoublecOallocatorlEdoublegRsPgR), G__defined_typename("vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::const_reference"), 1, 1, 1, 1, 8, "k - 'vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >",8392,G__Dict_213_0_15, 105, G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >",8392,G__Dict_213_0_16, 105, G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR), -1, 0, 2, 1, 1, 0, 
"k - 'vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::size_type' 0 - n u 'vector<double,allocator<double> >' - 11 '(vector<double,allocator<double> >)()' value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >",8392,G__Dict_213_0_17, 105, G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR), -1, 0, 1, 1, 1, 0, "u 'vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >",8392,G__Dict_213_0_18, 105, G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR), -1, 0, 2, 1, 1, 0, 
"u 'vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::iterator' 'vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::const_iterator' 10 - first u 'vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::iterator' 'vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__Dict_213_0_19, 117, G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR), -1, 1, 1, 1, 1, 0, "u 'vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("reserve",764,G__Dict_213_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("front",553,G__Dict_213_0_21, 117, G__get_linked_tagnum(&G__DictLN_vectorlEdoublecOallocatorlEdoublegRsPgR), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("back",401,G__Dict_213_0_22, 117, G__get_linked_tagnum(&G__DictLN_vectorlEdoublecOallocatorlEdoublegRsPgR), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("push_back",944,G__Dict_213_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<double,allocator<double> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("swap",443,G__Dict_213_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >' - 1 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__Dict_213_0_25, 117, G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRcLcLiterator), -1, 0, 2, 1, 1, 0, 
"u 'vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::iterator' - 0 - position u 'vector<double,allocator<double> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__Dict_213_0_26, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::iterator' - 0 - position u 'vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::iterator' 'vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::const_iterator' 10 - first "
"u 'vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::iterator' 'vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__Dict_213_0_27, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::iterator' - 0 - position k - 'vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::size_type' 0 - n "
"u 'vector<double,allocator<double> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pop_back",831,G__Dict_213_0_28, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__Dict_213_0_29, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::iterator' - 0 - position", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__Dict_213_0_30, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::iterator' - 0 - first u 'vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__Dict_213_0_31, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >", 8518, G__Dict_213_0_32, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncvectorlEvectorlEcharmUcOallocatorlEcharmUgRsPgRcOallocatorlEvectorlEcharmUcOallocatorlEcharmUgRsPgRsPgRsPgR(void) {
   /* vector<vector<char*,allocator<char*> >,allocator<vector<char*,allocator<char*> > > > */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEcharmUcOallocatorlEcharmUgRsPgRcOallocatorlEvectorlEcharmUcOallocatorlEcharmUgRsPgRsPgRsPgR));
   G__memfunc_setup("at",213,G__Dict_217_0_1, 117, G__get_linked_tagnum(&G__DictLN_vectorlEcharmUcOallocatorlEcharmUgRsPgR), G__defined_typename("vector<vector<char*,allocator<char*> >,allocator<vector<char*,allocator<char*> > > >::reference"), 1, 1, 1, 1, 0, "k - 'vector<vector<char*,allocator<char*> >,allocator<vector<char*,allocator<char*> > > >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("at",213,G__Dict_217_0_2, 117, G__get_linked_tagnum(&G__DictLN_vectorlEcharmUcOallocatorlEcharmUgRsPgR), G__defined_typename("vector<vector<char*,allocator<char*> >,allocator<vector<char*,allocator<char*> > > >::const_reference"), 1, 1, 1, 1, 8, "k - 'vector<vector<char*,allocator<char*> >,allocator<vector<char*,allocator<char*> > > >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__Dict_217_0_3, 117, G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEcharmUcOallocatorlEcharmUgRsPgRcOallocatorlEvectorlEcharmUcOallocatorlEcharmUgRsPgRsPgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__Dict_217_0_4, 117, G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEcharmUcOallocatorlEcharmUgRsPgRcOallocatorlEvectorlEcharmUcOallocatorlEcharmUgRsPgRsPgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rbegin",631,G__Dict_217_0_5, 117, G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlEvectorlEcharmUcOallocatorlEcharmUgRsPgRcOallocatorlEvectorlEcharmUcOallocatorlEcharmUgRsPgRsPgRsPgRcLcLiteratorgR), G__defined_typename("vector<vector<char*,allocator<char*> >,allocator<vector<char*,allocator<char*> > > >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rend",425,G__Dict_217_0_6, 117, G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlEvectorlEcharmUcOallocatorlEcharmUgRsPgRcOallocatorlEvectorlEcharmUcOallocatorlEcharmUgRsPgRsPgRsPgRcLcLiteratorgR), G__defined_typename("vector<vector<char*,allocator<char*> >,allocator<vector<char*,allocator<char*> > > >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("size",443,G__Dict_217_0_7, 107, -1, G__defined_typename("vector<vector<char*,allocator<char*> >,allocator<vector<char*,allocator<char*> > > >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("max_size",864,G__Dict_217_0_8, 107, -1, G__defined_typename("vector<vector<char*,allocator<char*> >,allocator<vector<char*,allocator<char*> > > >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__Dict_217_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<vector<char*,allocator<char*> >,allocator<vector<char*,allocator<char*> > > >::size_type' 0 - sz", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__Dict_217_0_10, 121, -1, -1, 0, 2, 1, 1, 0, 
"k - 'vector<vector<char*,allocator<char*> >,allocator<vector<char*,allocator<char*> > > >::size_type' 0 - sz u 'vector<char*,allocator<char*> >' - 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("capacity",846,G__Dict_217_0_11, 107, -1, G__defined_typename("vector<vector<char*,allocator<char*> >,allocator<vector<char*,allocator<char*> > > >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("empty",559,G__Dict_217_0_12, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__Dict_217_0_13, 117, G__get_linked_tagnum(&G__DictLN_vectorlEcharmUcOallocatorlEcharmUgRsPgR), G__defined_typename("vector<vector<char*,allocator<char*> >,allocator<vector<char*,allocator<char*> > > >::reference"), 1, 1, 1, 1, 0, "k - 'vector<vector<char*,allocator<char*> >,allocator<vector<char*,allocator<char*> > > >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__Dict_217_0_14, 117, G__get_linked_tagnum(&G__DictLN_vectorlEcharmUcOallocatorlEcharmUgRsPgR), G__defined_typename("vector<vector<char*,allocator<char*> >,allocator<vector<char*,allocator<char*> > > >::const_reference"), 1, 1, 1, 1, 8, "k - 'vector<vector<char*,allocator<char*> >,allocator<vector<char*,allocator<char*> > > >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<vector<char*,allocator<char*> >,allocator<vector<char*,allocator<char*> > > >",7676,G__Dict_217_0_15, 105, G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEcharmUcOallocatorlEcharmUgRsPgRcOallocatorlEvectorlEcharmUcOallocatorlEcharmUgRsPgRsPgRsPgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<vector<char*,allocator<char*> >,allocator<vector<char*,allocator<char*> > > >",7676,G__Dict_217_0_16, 105, G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEcharmUcOallocatorlEcharmUgRsPgRcOallocatorlEvectorlEcharmUcOallocatorlEcharmUgRsPgRsPgRsPgR), -1, 0, 2, 1, 1, 0, 
"k - 'vector<vector<char*,allocator<char*> >,allocator<vector<char*,allocator<char*> > > >::size_type' 0 - n u 'vector<char*,allocator<char*> >' - 11 '(vector<char*,allocator<char*> >)()' value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<vector<char*,allocator<char*> >,allocator<vector<char*,allocator<char*> > > >",7676,G__Dict_217_0_17, 105, G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEcharmUcOallocatorlEcharmUgRsPgRcOallocatorlEvectorlEcharmUcOallocatorlEcharmUgRsPgRsPgRsPgR), -1, 0, 1, 1, 1, 0, "u 'vector<vector<char*,allocator<char*> >,allocator<vector<char*,allocator<char*> > > >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<vector<char*,allocator<char*> >,allocator<vector<char*,allocator<char*> > > >",7676,G__Dict_217_0_18, 105, G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEcharmUcOallocatorlEcharmUgRsPgRcOallocatorlEvectorlEcharmUcOallocatorlEcharmUgRsPgRsPgRsPgR), -1, 0, 2, 1, 1, 0, 
"u 'vector<vector<char*,allocator<char*> >,allocator<vector<char*,allocator<char*> > > >::iterator' 'vector<vector<char*,allocator<char*> >,allocator<vector<char*,allocator<char*> > > >::const_iterator' 10 - first u 'vector<vector<char*,allocator<char*> >,allocator<vector<char*,allocator<char*> > > >::iterator' 'vector<vector<char*,allocator<char*> >,allocator<vector<char*,allocator<char*> > > >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__Dict_217_0_19, 117, G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEcharmUcOallocatorlEcharmUgRsPgRcOallocatorlEvectorlEcharmUcOallocatorlEcharmUgRsPgRsPgRsPgR), -1, 1, 1, 1, 1, 0, "u 'vector<vector<char*,allocator<char*> >,allocator<vector<char*,allocator<char*> > > >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("reserve",764,G__Dict_217_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<vector<char*,allocator<char*> >,allocator<vector<char*,allocator<char*> > > >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("front",553,G__Dict_217_0_21, 117, G__get_linked_tagnum(&G__DictLN_vectorlEcharmUcOallocatorlEcharmUgRsPgR), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("back",401,G__Dict_217_0_22, 117, G__get_linked_tagnum(&G__DictLN_vectorlEcharmUcOallocatorlEcharmUgRsPgR), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("push_back",944,G__Dict_217_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<char*,allocator<char*> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("swap",443,G__Dict_217_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<vector<char*,allocator<char*> >,allocator<vector<char*,allocator<char*> > > >' - 1 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__Dict_217_0_25, 117, G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEcharmUcOallocatorlEcharmUgRsPgRcOallocatorlEvectorlEcharmUcOallocatorlEcharmUgRsPgRsPgRsPgRcLcLiterator), -1, 0, 2, 1, 1, 0, 
"u 'vector<vector<char*,allocator<char*> >,allocator<vector<char*,allocator<char*> > > >::iterator' - 0 - position u 'vector<char*,allocator<char*> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__Dict_217_0_26, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<vector<char*,allocator<char*> >,allocator<vector<char*,allocator<char*> > > >::iterator' - 0 - position u 'vector<vector<char*,allocator<char*> >,allocator<vector<char*,allocator<char*> > > >::iterator' 'vector<vector<char*,allocator<char*> >,allocator<vector<char*,allocator<char*> > > >::const_iterator' 10 - first "
"u 'vector<vector<char*,allocator<char*> >,allocator<vector<char*,allocator<char*> > > >::iterator' 'vector<vector<char*,allocator<char*> >,allocator<vector<char*,allocator<char*> > > >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__Dict_217_0_27, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<vector<char*,allocator<char*> >,allocator<vector<char*,allocator<char*> > > >::iterator' - 0 - position k - 'vector<vector<char*,allocator<char*> >,allocator<vector<char*,allocator<char*> > > >::size_type' 0 - n "
"u 'vector<char*,allocator<char*> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pop_back",831,G__Dict_217_0_28, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__Dict_217_0_29, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<vector<char*,allocator<char*> >,allocator<vector<char*,allocator<char*> > > >::iterator' - 0 - position", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__Dict_217_0_30, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<vector<char*,allocator<char*> >,allocator<vector<char*,allocator<char*> > > >::iterator' - 0 - first u 'vector<vector<char*,allocator<char*> >,allocator<vector<char*,allocator<char*> > > >::iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__Dict_217_0_31, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~vector<vector<char*,allocator<char*> >,allocator<vector<char*,allocator<char*> > > >", 7802, G__Dict_217_0_32, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncvectorlEvectorlEconstsPcharmUcOallocatorlEconstsPcharmUgRsPgRcOallocatorlEvectorlEconstsPcharmUcOallocatorlEconstsPcharmUgRsPgRsPgRsPgR(void) {
   /* vector<vector<const char*,allocator<const char*> >,allocator<vector<const char*,allocator<const char*> > > > */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEconstsPcharmUcOallocatorlEconstsPcharmUgRsPgRcOallocatorlEvectorlEconstsPcharmUcOallocatorlEconstsPcharmUgRsPgRsPgRsPgR));
   G__memfunc_setup("at",213,G__Dict_225_0_1, 117, G__get_linked_tagnum(&G__DictLN_vectorlEconstsPcharmUcOallocatorlEconstsPcharmUgRsPgR), G__defined_typename("vector<vector<const char*,allocator<const char*> >,allocator<vector<const char*,allocator<const char*> > > >::reference"), 1, 1, 1, 1, 0, "k - 'vector<vector<const char*,allocator<const char*> >,allocator<vector<const char*,allocator<const char*> > > >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("at",213,G__Dict_225_0_2, 117, G__get_linked_tagnum(&G__DictLN_vectorlEconstsPcharmUcOallocatorlEconstsPcharmUgRsPgR), G__defined_typename("vector<vector<const char*,allocator<const char*> >,allocator<vector<const char*,allocator<const char*> > > >::const_reference"), 1, 1, 1, 1, 8, "k - 'vector<vector<const char*,allocator<const char*> >,allocator<vector<const char*,allocator<const char*> > > >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__Dict_225_0_3, 117, G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEconstsPcharmUcOallocatorlEconstsPcharmUgRsPgRcOallocatorlEvectorlEconstsPcharmUcOallocatorlEconstsPcharmUgRsPgRsPgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__Dict_225_0_4, 117, G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEconstsPcharmUcOallocatorlEconstsPcharmUgRsPgRcOallocatorlEvectorlEconstsPcharmUcOallocatorlEconstsPcharmUgRsPgRsPgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rbegin",631,G__Dict_225_0_5, 117, G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlEvectorlEconstsPcharmUcOallocatorlEconstsPcharmUgRsPgRcOallocatorlEvectorlEconstsPcharmUcOallocatorlEconstsPcharmUgRsPgRsPgRsPgRcLcLiteratorgR), G__defined_typename("vector<vector<const char*,allocator<const char*> >,allocator<vector<const char*,allocator<const char*> > > >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rend",425,G__Dict_225_0_6, 117, G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlEvectorlEconstsPcharmUcOallocatorlEconstsPcharmUgRsPgRcOallocatorlEvectorlEconstsPcharmUcOallocatorlEconstsPcharmUgRsPgRsPgRsPgRcLcLiteratorgR), G__defined_typename("vector<vector<const char*,allocator<const char*> >,allocator<vector<const char*,allocator<const char*> > > >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("size",443,G__Dict_225_0_7, 107, -1, G__defined_typename("vector<vector<const char*,allocator<const char*> >,allocator<vector<const char*,allocator<const char*> > > >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("max_size",864,G__Dict_225_0_8, 107, -1, G__defined_typename("vector<vector<const char*,allocator<const char*> >,allocator<vector<const char*,allocator<const char*> > > >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__Dict_225_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<vector<const char*,allocator<const char*> >,allocator<vector<const char*,allocator<const char*> > > >::size_type' 0 - sz", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__Dict_225_0_10, 121, -1, -1, 0, 2, 1, 1, 0, 
"k - 'vector<vector<const char*,allocator<const char*> >,allocator<vector<const char*,allocator<const char*> > > >::size_type' 0 - sz u 'vector<const char*,allocator<const char*> >' - 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("capacity",846,G__Dict_225_0_11, 107, -1, G__defined_typename("vector<vector<const char*,allocator<const char*> >,allocator<vector<const char*,allocator<const char*> > > >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("empty",559,G__Dict_225_0_12, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__Dict_225_0_13, 117, G__get_linked_tagnum(&G__DictLN_vectorlEconstsPcharmUcOallocatorlEconstsPcharmUgRsPgR), G__defined_typename("vector<vector<const char*,allocator<const char*> >,allocator<vector<const char*,allocator<const char*> > > >::reference"), 1, 1, 1, 1, 0, "k - 'vector<vector<const char*,allocator<const char*> >,allocator<vector<const char*,allocator<const char*> > > >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__Dict_225_0_14, 117, G__get_linked_tagnum(&G__DictLN_vectorlEconstsPcharmUcOallocatorlEconstsPcharmUgRsPgR), G__defined_typename("vector<vector<const char*,allocator<const char*> >,allocator<vector<const char*,allocator<const char*> > > >::const_reference"), 1, 1, 1, 1, 8, "k - 'vector<vector<const char*,allocator<const char*> >,allocator<vector<const char*,allocator<const char*> > > >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<vector<const char*,allocator<const char*> >,allocator<vector<const char*,allocator<const char*> > > >",10008,G__Dict_225_0_15, 105, G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEconstsPcharmUcOallocatorlEconstsPcharmUgRsPgRcOallocatorlEvectorlEconstsPcharmUcOallocatorlEconstsPcharmUgRsPgRsPgRsPgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<vector<const char*,allocator<const char*> >,allocator<vector<const char*,allocator<const char*> > > >",10008,G__Dict_225_0_16, 105, G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEconstsPcharmUcOallocatorlEconstsPcharmUgRsPgRcOallocatorlEvectorlEconstsPcharmUcOallocatorlEconstsPcharmUgRsPgRsPgRsPgR), -1, 0, 2, 1, 1, 0, 
"k - 'vector<vector<const char*,allocator<const char*> >,allocator<vector<const char*,allocator<const char*> > > >::size_type' 0 - n u 'vector<const char*,allocator<const char*> >' - 11 '(vector<const char*,allocator<const char*> >)()' value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<vector<const char*,allocator<const char*> >,allocator<vector<const char*,allocator<const char*> > > >",10008,G__Dict_225_0_17, 105, G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEconstsPcharmUcOallocatorlEconstsPcharmUgRsPgRcOallocatorlEvectorlEconstsPcharmUcOallocatorlEconstsPcharmUgRsPgRsPgRsPgR), -1, 0, 1, 1, 1, 0, "u 'vector<vector<const char*,allocator<const char*> >,allocator<vector<const char*,allocator<const char*> > > >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<vector<const char*,allocator<const char*> >,allocator<vector<const char*,allocator<const char*> > > >",10008,G__Dict_225_0_18, 105, G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEconstsPcharmUcOallocatorlEconstsPcharmUgRsPgRcOallocatorlEvectorlEconstsPcharmUcOallocatorlEconstsPcharmUgRsPgRsPgRsPgR), -1, 0, 2, 1, 1, 0, 
"u 'vector<vector<const char*,allocator<const char*> >,allocator<vector<const char*,allocator<const char*> > > >::iterator' 'vector<vector<const char*,allocator<const char*> >,allocator<vector<const char*,allocator<const char*> > > >::const_iterator' 10 - first u 'vector<vector<const char*,allocator<const char*> >,allocator<vector<const char*,allocator<const char*> > > >::iterator' 'vector<vector<const char*,allocator<const char*> >,allocator<vector<const char*,allocator<const char*> > > >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__Dict_225_0_19, 117, G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEconstsPcharmUcOallocatorlEconstsPcharmUgRsPgRcOallocatorlEvectorlEconstsPcharmUcOallocatorlEconstsPcharmUgRsPgRsPgRsPgR), -1, 1, 1, 1, 1, 0, "u 'vector<vector<const char*,allocator<const char*> >,allocator<vector<const char*,allocator<const char*> > > >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("reserve",764,G__Dict_225_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<vector<const char*,allocator<const char*> >,allocator<vector<const char*,allocator<const char*> > > >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("front",553,G__Dict_225_0_21, 117, G__get_linked_tagnum(&G__DictLN_vectorlEconstsPcharmUcOallocatorlEconstsPcharmUgRsPgR), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("back",401,G__Dict_225_0_22, 117, G__get_linked_tagnum(&G__DictLN_vectorlEconstsPcharmUcOallocatorlEconstsPcharmUgRsPgR), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("push_back",944,G__Dict_225_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<const char*,allocator<const char*> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("swap",443,G__Dict_225_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<vector<const char*,allocator<const char*> >,allocator<vector<const char*,allocator<const char*> > > >' - 1 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__Dict_225_0_25, 117, G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEconstsPcharmUcOallocatorlEconstsPcharmUgRsPgRcOallocatorlEvectorlEconstsPcharmUcOallocatorlEconstsPcharmUgRsPgRsPgRsPgRcLcLiterator), -1, 0, 2, 1, 1, 0, 
"u 'vector<vector<const char*,allocator<const char*> >,allocator<vector<const char*,allocator<const char*> > > >::iterator' - 0 - position u 'vector<const char*,allocator<const char*> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__Dict_225_0_26, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<vector<const char*,allocator<const char*> >,allocator<vector<const char*,allocator<const char*> > > >::iterator' - 0 - position u 'vector<vector<const char*,allocator<const char*> >,allocator<vector<const char*,allocator<const char*> > > >::iterator' 'vector<vector<const char*,allocator<const char*> >,allocator<vector<const char*,allocator<const char*> > > >::const_iterator' 10 - first "
"u 'vector<vector<const char*,allocator<const char*> >,allocator<vector<const char*,allocator<const char*> > > >::iterator' 'vector<vector<const char*,allocator<const char*> >,allocator<vector<const char*,allocator<const char*> > > >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__Dict_225_0_27, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<vector<const char*,allocator<const char*> >,allocator<vector<const char*,allocator<const char*> > > >::iterator' - 0 - position k - 'vector<vector<const char*,allocator<const char*> >,allocator<vector<const char*,allocator<const char*> > > >::size_type' 0 - n "
"u 'vector<const char*,allocator<const char*> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pop_back",831,G__Dict_225_0_28, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__Dict_225_0_29, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<vector<const char*,allocator<const char*> >,allocator<vector<const char*,allocator<const char*> > > >::iterator' - 0 - position", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__Dict_225_0_30, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<vector<const char*,allocator<const char*> >,allocator<vector<const char*,allocator<const char*> > > >::iterator' - 0 - first u 'vector<vector<const char*,allocator<const char*> >,allocator<vector<const char*,allocator<const char*> > > >::iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__Dict_225_0_31, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~vector<vector<const char*,allocator<const char*> >,allocator<vector<const char*,allocator<const char*> > > >", 10134, G__Dict_225_0_32, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncvectorlEvectorlETStringcOallocatorlETStringgRsPgRcOallocatorlEvectorlETStringcOallocatorlETStringgRsPgRsPgRsPgR(void) {
   /* vector<vector<TString,allocator<TString> >,allocator<vector<TString,allocator<TString> > > > */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__DictLN_vectorlEvectorlETStringcOallocatorlETStringgRsPgRcOallocatorlEvectorlETStringcOallocatorlETStringgRsPgRsPgRsPgR));
   G__memfunc_setup("at",213,G__Dict_233_0_1, 117, G__get_linked_tagnum(&G__DictLN_vectorlETStringcOallocatorlETStringgRsPgR), G__defined_typename("vector<vector<TString,allocator<TString> >,allocator<vector<TString,allocator<TString> > > >::reference"), 1, 1, 1, 1, 0, "k - 'vector<vector<TString,allocator<TString> >,allocator<vector<TString,allocator<TString> > > >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("at",213,G__Dict_233_0_2, 117, G__get_linked_tagnum(&G__DictLN_vectorlETStringcOallocatorlETStringgRsPgR), G__defined_typename("vector<vector<TString,allocator<TString> >,allocator<vector<TString,allocator<TString> > > >::const_reference"), 1, 1, 1, 1, 8, "k - 'vector<vector<TString,allocator<TString> >,allocator<vector<TString,allocator<TString> > > >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__Dict_233_0_3, 117, G__get_linked_tagnum(&G__DictLN_vectorlEvectorlETStringcOallocatorlETStringgRsPgRcOallocatorlEvectorlETStringcOallocatorlETStringgRsPgRsPgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__Dict_233_0_4, 117, G__get_linked_tagnum(&G__DictLN_vectorlEvectorlETStringcOallocatorlETStringgRsPgRcOallocatorlEvectorlETStringcOallocatorlETStringgRsPgRsPgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rbegin",631,G__Dict_233_0_5, 117, G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlEvectorlETStringcOallocatorlETStringgRsPgRcOallocatorlEvectorlETStringcOallocatorlETStringgRsPgRsPgRsPgRcLcLiteratorgR), G__defined_typename("vector<vector<TString,allocator<TString> >,allocator<vector<TString,allocator<TString> > > >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rend",425,G__Dict_233_0_6, 117, G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlEvectorlETStringcOallocatorlETStringgRsPgRcOallocatorlEvectorlETStringcOallocatorlETStringgRsPgRsPgRsPgRcLcLiteratorgR), G__defined_typename("vector<vector<TString,allocator<TString> >,allocator<vector<TString,allocator<TString> > > >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("size",443,G__Dict_233_0_7, 107, -1, G__defined_typename("vector<vector<TString,allocator<TString> >,allocator<vector<TString,allocator<TString> > > >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("max_size",864,G__Dict_233_0_8, 107, -1, G__defined_typename("vector<vector<TString,allocator<TString> >,allocator<vector<TString,allocator<TString> > > >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__Dict_233_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<vector<TString,allocator<TString> >,allocator<vector<TString,allocator<TString> > > >::size_type' 0 - sz", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__Dict_233_0_10, 121, -1, -1, 0, 2, 1, 1, 0, 
"k - 'vector<vector<TString,allocator<TString> >,allocator<vector<TString,allocator<TString> > > >::size_type' 0 - sz u 'vector<TString,allocator<TString> >' - 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("capacity",846,G__Dict_233_0_11, 107, -1, G__defined_typename("vector<vector<TString,allocator<TString> >,allocator<vector<TString,allocator<TString> > > >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("empty",559,G__Dict_233_0_12, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__Dict_233_0_13, 117, G__get_linked_tagnum(&G__DictLN_vectorlETStringcOallocatorlETStringgRsPgR), G__defined_typename("vector<vector<TString,allocator<TString> >,allocator<vector<TString,allocator<TString> > > >::reference"), 1, 1, 1, 1, 0, "k - 'vector<vector<TString,allocator<TString> >,allocator<vector<TString,allocator<TString> > > >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__Dict_233_0_14, 117, G__get_linked_tagnum(&G__DictLN_vectorlETStringcOallocatorlETStringgRsPgR), G__defined_typename("vector<vector<TString,allocator<TString> >,allocator<vector<TString,allocator<TString> > > >::const_reference"), 1, 1, 1, 1, 8, "k - 'vector<vector<TString,allocator<TString> >,allocator<vector<TString,allocator<TString> > > >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<vector<TString,allocator<TString> >,allocator<vector<TString,allocator<TString> > > >",8712,G__Dict_233_0_15, 105, G__get_linked_tagnum(&G__DictLN_vectorlEvectorlETStringcOallocatorlETStringgRsPgRcOallocatorlEvectorlETStringcOallocatorlETStringgRsPgRsPgRsPgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<vector<TString,allocator<TString> >,allocator<vector<TString,allocator<TString> > > >",8712,G__Dict_233_0_16, 105, G__get_linked_tagnum(&G__DictLN_vectorlEvectorlETStringcOallocatorlETStringgRsPgRcOallocatorlEvectorlETStringcOallocatorlETStringgRsPgRsPgRsPgR), -1, 0, 2, 1, 1, 0, 
"k - 'vector<vector<TString,allocator<TString> >,allocator<vector<TString,allocator<TString> > > >::size_type' 0 - n u 'vector<TString,allocator<TString> >' - 11 '(vector<TString,allocator<TString> >)()' value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<vector<TString,allocator<TString> >,allocator<vector<TString,allocator<TString> > > >",8712,G__Dict_233_0_17, 105, G__get_linked_tagnum(&G__DictLN_vectorlEvectorlETStringcOallocatorlETStringgRsPgRcOallocatorlEvectorlETStringcOallocatorlETStringgRsPgRsPgRsPgR), -1, 0, 1, 1, 1, 0, "u 'vector<vector<TString,allocator<TString> >,allocator<vector<TString,allocator<TString> > > >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<vector<TString,allocator<TString> >,allocator<vector<TString,allocator<TString> > > >",8712,G__Dict_233_0_18, 105, G__get_linked_tagnum(&G__DictLN_vectorlEvectorlETStringcOallocatorlETStringgRsPgRcOallocatorlEvectorlETStringcOallocatorlETStringgRsPgRsPgRsPgR), -1, 0, 2, 1, 1, 0, 
"u 'vector<vector<TString,allocator<TString> >,allocator<vector<TString,allocator<TString> > > >::iterator' 'vector<vector<TString,allocator<TString> >,allocator<vector<TString,allocator<TString> > > >::const_iterator' 10 - first u 'vector<vector<TString,allocator<TString> >,allocator<vector<TString,allocator<TString> > > >::iterator' 'vector<vector<TString,allocator<TString> >,allocator<vector<TString,allocator<TString> > > >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__Dict_233_0_19, 117, G__get_linked_tagnum(&G__DictLN_vectorlEvectorlETStringcOallocatorlETStringgRsPgRcOallocatorlEvectorlETStringcOallocatorlETStringgRsPgRsPgRsPgR), -1, 1, 1, 1, 1, 0, "u 'vector<vector<TString,allocator<TString> >,allocator<vector<TString,allocator<TString> > > >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("reserve",764,G__Dict_233_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<vector<TString,allocator<TString> >,allocator<vector<TString,allocator<TString> > > >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("front",553,G__Dict_233_0_21, 117, G__get_linked_tagnum(&G__DictLN_vectorlETStringcOallocatorlETStringgRsPgR), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("back",401,G__Dict_233_0_22, 117, G__get_linked_tagnum(&G__DictLN_vectorlETStringcOallocatorlETStringgRsPgR), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("push_back",944,G__Dict_233_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<TString,allocator<TString> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("swap",443,G__Dict_233_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<vector<TString,allocator<TString> >,allocator<vector<TString,allocator<TString> > > >' - 1 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__Dict_233_0_25, 117, G__get_linked_tagnum(&G__DictLN_vectorlEvectorlETStringcOallocatorlETStringgRsPgRcOallocatorlEvectorlETStringcOallocatorlETStringgRsPgRsPgRsPgRcLcLiterator), -1, 0, 2, 1, 1, 0, 
"u 'vector<vector<TString,allocator<TString> >,allocator<vector<TString,allocator<TString> > > >::iterator' - 0 - position u 'vector<TString,allocator<TString> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__Dict_233_0_26, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<vector<TString,allocator<TString> >,allocator<vector<TString,allocator<TString> > > >::iterator' - 0 - position u 'vector<vector<TString,allocator<TString> >,allocator<vector<TString,allocator<TString> > > >::iterator' 'vector<vector<TString,allocator<TString> >,allocator<vector<TString,allocator<TString> > > >::const_iterator' 10 - first "
"u 'vector<vector<TString,allocator<TString> >,allocator<vector<TString,allocator<TString> > > >::iterator' 'vector<vector<TString,allocator<TString> >,allocator<vector<TString,allocator<TString> > > >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__Dict_233_0_27, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<vector<TString,allocator<TString> >,allocator<vector<TString,allocator<TString> > > >::iterator' - 0 - position k - 'vector<vector<TString,allocator<TString> >,allocator<vector<TString,allocator<TString> > > >::size_type' 0 - n "
"u 'vector<TString,allocator<TString> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pop_back",831,G__Dict_233_0_28, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__Dict_233_0_29, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<vector<TString,allocator<TString> >,allocator<vector<TString,allocator<TString> > > >::iterator' - 0 - position", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__Dict_233_0_30, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<vector<TString,allocator<TString> >,allocator<vector<TString,allocator<TString> > > >::iterator' - 0 - first u 'vector<vector<TString,allocator<TString> >,allocator<vector<TString,allocator<TString> > > >::iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__Dict_233_0_31, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~vector<vector<TString,allocator<TString> >,allocator<vector<TString,allocator<TString> > > >", 8838, G__Dict_233_0_32, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncvectorlEvectorlElongsPlongcOallocatorlElongsPlonggRsPgRcOallocatorlEvectorlElongsPlongcOallocatorlElongsPlonggRsPgRsPgRsPgR(void) {
   /* vector<vector<long long,allocator<long long> >,allocator<vector<long long,allocator<long long> > > > */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__DictLN_vectorlEvectorlElongsPlongcOallocatorlElongsPlonggRsPgRcOallocatorlEvectorlElongsPlongcOallocatorlElongsPlonggRsPgRsPgRsPgR));
   G__memfunc_setup("at",213,G__Dict_237_0_1, 117, G__get_linked_tagnum(&G__DictLN_vectorlElongsPlongcOallocatorlElongsPlonggRsPgR), G__defined_typename("vector<vector<long long,allocator<long long> >,allocator<vector<long long,allocator<long long> > > >::reference"), 1, 1, 1, 1, 0, "k - 'vector<vector<long long,allocator<long long> >,allocator<vector<long long,allocator<long long> > > >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("at",213,G__Dict_237_0_2, 117, G__get_linked_tagnum(&G__DictLN_vectorlElongsPlongcOallocatorlElongsPlonggRsPgR), G__defined_typename("vector<vector<long long,allocator<long long> >,allocator<vector<long long,allocator<long long> > > >::const_reference"), 1, 1, 1, 1, 8, "k - 'vector<vector<long long,allocator<long long> >,allocator<vector<long long,allocator<long long> > > >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__Dict_237_0_3, 117, G__get_linked_tagnum(&G__DictLN_vectorlEvectorlElongsPlongcOallocatorlElongsPlonggRsPgRcOallocatorlEvectorlElongsPlongcOallocatorlElongsPlonggRsPgRsPgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__Dict_237_0_4, 117, G__get_linked_tagnum(&G__DictLN_vectorlEvectorlElongsPlongcOallocatorlElongsPlonggRsPgRcOallocatorlEvectorlElongsPlongcOallocatorlElongsPlonggRsPgRsPgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rbegin",631,G__Dict_237_0_5, 117, G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlEvectorlElongsPlongcOallocatorlElongsPlonggRsPgRcOallocatorlEvectorlElongsPlongcOallocatorlElongsPlonggRsPgRsPgRsPgRcLcLiteratorgR), G__defined_typename("vector<vector<long long,allocator<long long> >,allocator<vector<long long,allocator<long long> > > >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rend",425,G__Dict_237_0_6, 117, G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlEvectorlElongsPlongcOallocatorlElongsPlonggRsPgRcOallocatorlEvectorlElongsPlongcOallocatorlElongsPlonggRsPgRsPgRsPgRcLcLiteratorgR), G__defined_typename("vector<vector<long long,allocator<long long> >,allocator<vector<long long,allocator<long long> > > >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("size",443,G__Dict_237_0_7, 107, -1, G__defined_typename("vector<vector<long long,allocator<long long> >,allocator<vector<long long,allocator<long long> > > >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("max_size",864,G__Dict_237_0_8, 107, -1, G__defined_typename("vector<vector<long long,allocator<long long> >,allocator<vector<long long,allocator<long long> > > >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__Dict_237_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<vector<long long,allocator<long long> >,allocator<vector<long long,allocator<long long> > > >::size_type' 0 - sz", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__Dict_237_0_10, 121, -1, -1, 0, 2, 1, 1, 0, 
"k - 'vector<vector<long long,allocator<long long> >,allocator<vector<long long,allocator<long long> > > >::size_type' 0 - sz u 'vector<long long,allocator<long long> >' - 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("capacity",846,G__Dict_237_0_11, 107, -1, G__defined_typename("vector<vector<long long,allocator<long long> >,allocator<vector<long long,allocator<long long> > > >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("empty",559,G__Dict_237_0_12, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__Dict_237_0_13, 117, G__get_linked_tagnum(&G__DictLN_vectorlElongsPlongcOallocatorlElongsPlonggRsPgR), G__defined_typename("vector<vector<long long,allocator<long long> >,allocator<vector<long long,allocator<long long> > > >::reference"), 1, 1, 1, 1, 0, "k - 'vector<vector<long long,allocator<long long> >,allocator<vector<long long,allocator<long long> > > >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__Dict_237_0_14, 117, G__get_linked_tagnum(&G__DictLN_vectorlElongsPlongcOallocatorlElongsPlonggRsPgR), G__defined_typename("vector<vector<long long,allocator<long long> >,allocator<vector<long long,allocator<long long> > > >::const_reference"), 1, 1, 1, 1, 8, "k - 'vector<vector<long long,allocator<long long> >,allocator<vector<long long,allocator<long long> > > >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<vector<long long,allocator<long long> >,allocator<vector<long long,allocator<long long> > > >",9436,G__Dict_237_0_15, 105, G__get_linked_tagnum(&G__DictLN_vectorlEvectorlElongsPlongcOallocatorlElongsPlonggRsPgRcOallocatorlEvectorlElongsPlongcOallocatorlElongsPlonggRsPgRsPgRsPgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<vector<long long,allocator<long long> >,allocator<vector<long long,allocator<long long> > > >",9436,G__Dict_237_0_16, 105, G__get_linked_tagnum(&G__DictLN_vectorlEvectorlElongsPlongcOallocatorlElongsPlonggRsPgRcOallocatorlEvectorlElongsPlongcOallocatorlElongsPlonggRsPgRsPgRsPgR), -1, 0, 2, 1, 1, 0, 
"k - 'vector<vector<long long,allocator<long long> >,allocator<vector<long long,allocator<long long> > > >::size_type' 0 - n u 'vector<long long,allocator<long long> >' - 11 '(vector<long long,allocator<long long> >)()' value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<vector<long long,allocator<long long> >,allocator<vector<long long,allocator<long long> > > >",9436,G__Dict_237_0_17, 105, G__get_linked_tagnum(&G__DictLN_vectorlEvectorlElongsPlongcOallocatorlElongsPlonggRsPgRcOallocatorlEvectorlElongsPlongcOallocatorlElongsPlonggRsPgRsPgRsPgR), -1, 0, 1, 1, 1, 0, "u 'vector<vector<long long,allocator<long long> >,allocator<vector<long long,allocator<long long> > > >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<vector<long long,allocator<long long> >,allocator<vector<long long,allocator<long long> > > >",9436,G__Dict_237_0_18, 105, G__get_linked_tagnum(&G__DictLN_vectorlEvectorlElongsPlongcOallocatorlElongsPlonggRsPgRcOallocatorlEvectorlElongsPlongcOallocatorlElongsPlonggRsPgRsPgRsPgR), -1, 0, 2, 1, 1, 0, 
"u 'vector<vector<long long,allocator<long long> >,allocator<vector<long long,allocator<long long> > > >::iterator' 'vector<vector<long long,allocator<long long> >,allocator<vector<long long,allocator<long long> > > >::const_iterator' 10 - first u 'vector<vector<long long,allocator<long long> >,allocator<vector<long long,allocator<long long> > > >::iterator' 'vector<vector<long long,allocator<long long> >,allocator<vector<long long,allocator<long long> > > >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__Dict_237_0_19, 117, G__get_linked_tagnum(&G__DictLN_vectorlEvectorlElongsPlongcOallocatorlElongsPlonggRsPgRcOallocatorlEvectorlElongsPlongcOallocatorlElongsPlonggRsPgRsPgRsPgR), -1, 1, 1, 1, 1, 0, "u 'vector<vector<long long,allocator<long long> >,allocator<vector<long long,allocator<long long> > > >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("reserve",764,G__Dict_237_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<vector<long long,allocator<long long> >,allocator<vector<long long,allocator<long long> > > >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("front",553,G__Dict_237_0_21, 117, G__get_linked_tagnum(&G__DictLN_vectorlElongsPlongcOallocatorlElongsPlonggRsPgR), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("back",401,G__Dict_237_0_22, 117, G__get_linked_tagnum(&G__DictLN_vectorlElongsPlongcOallocatorlElongsPlonggRsPgR), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("push_back",944,G__Dict_237_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<long long,allocator<long long> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("swap",443,G__Dict_237_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<vector<long long,allocator<long long> >,allocator<vector<long long,allocator<long long> > > >' - 1 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__Dict_237_0_25, 117, G__get_linked_tagnum(&G__DictLN_vectorlEvectorlElongsPlongcOallocatorlElongsPlonggRsPgRcOallocatorlEvectorlElongsPlongcOallocatorlElongsPlonggRsPgRsPgRsPgRcLcLiterator), -1, 0, 2, 1, 1, 0, 
"u 'vector<vector<long long,allocator<long long> >,allocator<vector<long long,allocator<long long> > > >::iterator' - 0 - position u 'vector<long long,allocator<long long> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__Dict_237_0_26, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<vector<long long,allocator<long long> >,allocator<vector<long long,allocator<long long> > > >::iterator' - 0 - position u 'vector<vector<long long,allocator<long long> >,allocator<vector<long long,allocator<long long> > > >::iterator' 'vector<vector<long long,allocator<long long> >,allocator<vector<long long,allocator<long long> > > >::const_iterator' 10 - first "
"u 'vector<vector<long long,allocator<long long> >,allocator<vector<long long,allocator<long long> > > >::iterator' 'vector<vector<long long,allocator<long long> >,allocator<vector<long long,allocator<long long> > > >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__Dict_237_0_27, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<vector<long long,allocator<long long> >,allocator<vector<long long,allocator<long long> > > >::iterator' - 0 - position k - 'vector<vector<long long,allocator<long long> >,allocator<vector<long long,allocator<long long> > > >::size_type' 0 - n "
"u 'vector<long long,allocator<long long> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pop_back",831,G__Dict_237_0_28, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__Dict_237_0_29, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<vector<long long,allocator<long long> >,allocator<vector<long long,allocator<long long> > > >::iterator' - 0 - position", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__Dict_237_0_30, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<vector<long long,allocator<long long> >,allocator<vector<long long,allocator<long long> > > >::iterator' - 0 - first u 'vector<vector<long long,allocator<long long> >,allocator<vector<long long,allocator<long long> > > >::iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__Dict_237_0_31, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~vector<vector<long long,allocator<long long> >,allocator<vector<long long,allocator<long long> > > >", 9562, G__Dict_237_0_32, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncvectorlEvectorlEunsignedsPlongsPlongcOallocatorlEunsignedsPlongsPlonggRsPgRcOallocatorlEvectorlEunsignedsPlongsPlongcOallocatorlEunsignedsPlongsPlonggRsPgRsPgRsPgR(void) {
   /* vector<vector<unsigned long long,allocator<unsigned long long> >,allocator<vector<unsigned long long,allocator<unsigned long long> > > > */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEunsignedsPlongsPlongcOallocatorlEunsignedsPlongsPlonggRsPgRcOallocatorlEvectorlEunsignedsPlongsPlongcOallocatorlEunsignedsPlongsPlonggRsPgRsPgRsPgR));
   G__memfunc_setup("at",213,G__Dict_241_0_1, 117, G__get_linked_tagnum(&G__DictLN_vectorlEunsignedsPlongsPlongcOallocatorlEunsignedsPlongsPlonggRsPgR), G__defined_typename("vector<vector<unsigned long long,allocator<unsigned long long> >,allocator<vector<unsigned long long,allocator<unsigned long long> > > >::reference"), 1, 1, 1, 1, 0, "k - 'vector<vector<unsigned long long,allocator<unsigned long long> >,allocator<vector<unsigned long long,allocator<unsigned long long> > > >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("at",213,G__Dict_241_0_2, 117, G__get_linked_tagnum(&G__DictLN_vectorlEunsignedsPlongsPlongcOallocatorlEunsignedsPlongsPlonggRsPgR), G__defined_typename("vector<vector<unsigned long long,allocator<unsigned long long> >,allocator<vector<unsigned long long,allocator<unsigned long long> > > >::const_reference"), 1, 1, 1, 1, 8, "k - 'vector<vector<unsigned long long,allocator<unsigned long long> >,allocator<vector<unsigned long long,allocator<unsigned long long> > > >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__Dict_241_0_3, 117, G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEunsignedsPlongsPlongcOallocatorlEunsignedsPlongsPlonggRsPgRcOallocatorlEvectorlEunsignedsPlongsPlongcOallocatorlEunsignedsPlongsPlonggRsPgRsPgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__Dict_241_0_4, 117, G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEunsignedsPlongsPlongcOallocatorlEunsignedsPlongsPlonggRsPgRcOallocatorlEvectorlEunsignedsPlongsPlongcOallocatorlEunsignedsPlongsPlonggRsPgRsPgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rbegin",631,G__Dict_241_0_5, 117, G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlEvectorlEunsignedsPlongsPlongcOallocatorlEunsignedsPlongsPlonggRsPgRcOallocatorlEvectorlEunsignedsPlongsPlongcOallocatorlEunsignedsPlongsPlonggRsPgRsPgRsPgRcLcLiteratorgR), G__defined_typename("vector<vector<unsigned long long,allocator<unsigned long long> >,allocator<vector<unsigned long long,allocator<unsigned long long> > > >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rend",425,G__Dict_241_0_6, 117, G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlEvectorlEunsignedsPlongsPlongcOallocatorlEunsignedsPlongsPlonggRsPgRcOallocatorlEvectorlEunsignedsPlongsPlongcOallocatorlEunsignedsPlongsPlonggRsPgRsPgRsPgRcLcLiteratorgR), G__defined_typename("vector<vector<unsigned long long,allocator<unsigned long long> >,allocator<vector<unsigned long long,allocator<unsigned long long> > > >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("size",443,G__Dict_241_0_7, 107, -1, G__defined_typename("vector<vector<unsigned long long,allocator<unsigned long long> >,allocator<vector<unsigned long long,allocator<unsigned long long> > > >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("max_size",864,G__Dict_241_0_8, 107, -1, G__defined_typename("vector<vector<unsigned long long,allocator<unsigned long long> >,allocator<vector<unsigned long long,allocator<unsigned long long> > > >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__Dict_241_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<vector<unsigned long long,allocator<unsigned long long> >,allocator<vector<unsigned long long,allocator<unsigned long long> > > >::size_type' 0 - sz", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__Dict_241_0_10, 121, -1, -1, 0, 2, 1, 1, 0, 
"k - 'vector<vector<unsigned long long,allocator<unsigned long long> >,allocator<vector<unsigned long long,allocator<unsigned long long> > > >::size_type' 0 - sz u 'vector<unsigned long long,allocator<unsigned long long> >' - 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("capacity",846,G__Dict_241_0_11, 107, -1, G__defined_typename("vector<vector<unsigned long long,allocator<unsigned long long> >,allocator<vector<unsigned long long,allocator<unsigned long long> > > >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("empty",559,G__Dict_241_0_12, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__Dict_241_0_13, 117, G__get_linked_tagnum(&G__DictLN_vectorlEunsignedsPlongsPlongcOallocatorlEunsignedsPlongsPlonggRsPgR), G__defined_typename("vector<vector<unsigned long long,allocator<unsigned long long> >,allocator<vector<unsigned long long,allocator<unsigned long long> > > >::reference"), 1, 1, 1, 1, 0, "k - 'vector<vector<unsigned long long,allocator<unsigned long long> >,allocator<vector<unsigned long long,allocator<unsigned long long> > > >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__Dict_241_0_14, 117, G__get_linked_tagnum(&G__DictLN_vectorlEunsignedsPlongsPlongcOallocatorlEunsignedsPlongsPlonggRsPgR), G__defined_typename("vector<vector<unsigned long long,allocator<unsigned long long> >,allocator<vector<unsigned long long,allocator<unsigned long long> > > >::const_reference"), 1, 1, 1, 1, 8, "k - 'vector<vector<unsigned long long,allocator<unsigned long long> >,allocator<vector<unsigned long long,allocator<unsigned long long> > > >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<vector<unsigned long long,allocator<unsigned long long> >,allocator<vector<unsigned long long,allocator<unsigned long long> > > >",13008,G__Dict_241_0_15, 105, G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEunsignedsPlongsPlongcOallocatorlEunsignedsPlongsPlonggRsPgRcOallocatorlEvectorlEunsignedsPlongsPlongcOallocatorlEunsignedsPlongsPlonggRsPgRsPgRsPgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<vector<unsigned long long,allocator<unsigned long long> >,allocator<vector<unsigned long long,allocator<unsigned long long> > > >",13008,G__Dict_241_0_16, 105, G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEunsignedsPlongsPlongcOallocatorlEunsignedsPlongsPlonggRsPgRcOallocatorlEvectorlEunsignedsPlongsPlongcOallocatorlEunsignedsPlongsPlonggRsPgRsPgRsPgR), -1, 0, 2, 1, 1, 0, 
"k - 'vector<vector<unsigned long long,allocator<unsigned long long> >,allocator<vector<unsigned long long,allocator<unsigned long long> > > >::size_type' 0 - n u 'vector<unsigned long long,allocator<unsigned long long> >' - 11 '(vector<unsigned long long,allocator<unsigned long long> >)()' value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<vector<unsigned long long,allocator<unsigned long long> >,allocator<vector<unsigned long long,allocator<unsigned long long> > > >",13008,G__Dict_241_0_17, 105, G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEunsignedsPlongsPlongcOallocatorlEunsignedsPlongsPlonggRsPgRcOallocatorlEvectorlEunsignedsPlongsPlongcOallocatorlEunsignedsPlongsPlonggRsPgRsPgRsPgR), -1, 0, 1, 1, 1, 0, "u 'vector<vector<unsigned long long,allocator<unsigned long long> >,allocator<vector<unsigned long long,allocator<unsigned long long> > > >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<vector<unsigned long long,allocator<unsigned long long> >,allocator<vector<unsigned long long,allocator<unsigned long long> > > >",13008,G__Dict_241_0_18, 105, G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEunsignedsPlongsPlongcOallocatorlEunsignedsPlongsPlonggRsPgRcOallocatorlEvectorlEunsignedsPlongsPlongcOallocatorlEunsignedsPlongsPlonggRsPgRsPgRsPgR), -1, 0, 2, 1, 1, 0, 
"u 'vector<vector<unsigned long long,allocator<unsigned long long> >,allocator<vector<unsigned long long,allocator<unsigned long long> > > >::iterator' 'vector<vector<unsigned long long,allocator<unsigned long long> >,allocator<vector<unsigned long long,allocator<unsigned long long> > > >::const_iterator' 10 - first u 'vector<vector<unsigned long long,allocator<unsigned long long> >,allocator<vector<unsigned long long,allocator<unsigned long long> > > >::iterator' 'vector<vector<unsigned long long,allocator<unsigned long long> >,allocator<vector<unsigned long long,allocator<unsigned long long> > > >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__Dict_241_0_19, 117, G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEunsignedsPlongsPlongcOallocatorlEunsignedsPlongsPlonggRsPgRcOallocatorlEvectorlEunsignedsPlongsPlongcOallocatorlEunsignedsPlongsPlonggRsPgRsPgRsPgR), -1, 1, 1, 1, 1, 0, "u 'vector<vector<unsigned long long,allocator<unsigned long long> >,allocator<vector<unsigned long long,allocator<unsigned long long> > > >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("reserve",764,G__Dict_241_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<vector<unsigned long long,allocator<unsigned long long> >,allocator<vector<unsigned long long,allocator<unsigned long long> > > >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("front",553,G__Dict_241_0_21, 117, G__get_linked_tagnum(&G__DictLN_vectorlEunsignedsPlongsPlongcOallocatorlEunsignedsPlongsPlonggRsPgR), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("back",401,G__Dict_241_0_22, 117, G__get_linked_tagnum(&G__DictLN_vectorlEunsignedsPlongsPlongcOallocatorlEunsignedsPlongsPlonggRsPgR), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("push_back",944,G__Dict_241_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<unsigned long long,allocator<unsigned long long> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("swap",443,G__Dict_241_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<vector<unsigned long long,allocator<unsigned long long> >,allocator<vector<unsigned long long,allocator<unsigned long long> > > >' - 1 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__Dict_241_0_25, 117, G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEunsignedsPlongsPlongcOallocatorlEunsignedsPlongsPlonggRsPgRcOallocatorlEvectorlEunsignedsPlongsPlongcOallocatorlEunsignedsPlongsPlonggRsPgRsPgRsPgRcLcLiterator), -1, 0, 2, 1, 1, 0, 
"u 'vector<vector<unsigned long long,allocator<unsigned long long> >,allocator<vector<unsigned long long,allocator<unsigned long long> > > >::iterator' - 0 - position u 'vector<unsigned long long,allocator<unsigned long long> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__Dict_241_0_26, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<vector<unsigned long long,allocator<unsigned long long> >,allocator<vector<unsigned long long,allocator<unsigned long long> > > >::iterator' - 0 - position u 'vector<vector<unsigned long long,allocator<unsigned long long> >,allocator<vector<unsigned long long,allocator<unsigned long long> > > >::iterator' 'vector<vector<unsigned long long,allocator<unsigned long long> >,allocator<vector<unsigned long long,allocator<unsigned long long> > > >::const_iterator' 10 - first "
"u 'vector<vector<unsigned long long,allocator<unsigned long long> >,allocator<vector<unsigned long long,allocator<unsigned long long> > > >::iterator' 'vector<vector<unsigned long long,allocator<unsigned long long> >,allocator<vector<unsigned long long,allocator<unsigned long long> > > >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__Dict_241_0_27, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<vector<unsigned long long,allocator<unsigned long long> >,allocator<vector<unsigned long long,allocator<unsigned long long> > > >::iterator' - 0 - position k - 'vector<vector<unsigned long long,allocator<unsigned long long> >,allocator<vector<unsigned long long,allocator<unsigned long long> > > >::size_type' 0 - n "
"u 'vector<unsigned long long,allocator<unsigned long long> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pop_back",831,G__Dict_241_0_28, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__Dict_241_0_29, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<vector<unsigned long long,allocator<unsigned long long> >,allocator<vector<unsigned long long,allocator<unsigned long long> > > >::iterator' - 0 - position", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__Dict_241_0_30, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<vector<unsigned long long,allocator<unsigned long long> >,allocator<vector<unsigned long long,allocator<unsigned long long> > > >::iterator' - 0 - first u 'vector<vector<unsigned long long,allocator<unsigned long long> >,allocator<vector<unsigned long long,allocator<unsigned long long> > > >::iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__Dict_241_0_31, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~vector<vector<unsigned long long,allocator<unsigned long long> >,allocator<vector<unsigned long long,allocator<unsigned long long> > > >", 13134, G__Dict_241_0_32, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncvectorlEvectorlEvoidmUcOallocatorlEvoidmUgRsPgRcOallocatorlEvectorlEvoidmUcOallocatorlEvoidmUgRsPgRsPgRsPgR(void) {
   /* vector<vector<void*,allocator<void*> >,allocator<vector<void*,allocator<void*> > > > */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEvoidmUcOallocatorlEvoidmUgRsPgRcOallocatorlEvectorlEvoidmUcOallocatorlEvoidmUgRsPgRsPgRsPgR));
   G__memfunc_setup("at",213,G__Dict_245_0_1, 117, G__get_linked_tagnum(&G__DictLN_vectorlEvoidmUcOallocatorlEvoidmUgRsPgR), G__defined_typename("vector<vector<void*,allocator<void*> >,allocator<vector<void*,allocator<void*> > > >::reference"), 1, 1, 1, 1, 0, "k - 'vector<vector<void*,allocator<void*> >,allocator<vector<void*,allocator<void*> > > >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("at",213,G__Dict_245_0_2, 117, G__get_linked_tagnum(&G__DictLN_vectorlEvoidmUcOallocatorlEvoidmUgRsPgR), G__defined_typename("vector<vector<void*,allocator<void*> >,allocator<vector<void*,allocator<void*> > > >::const_reference"), 1, 1, 1, 1, 8, "k - 'vector<vector<void*,allocator<void*> >,allocator<vector<void*,allocator<void*> > > >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__Dict_245_0_3, 117, G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEvoidmUcOallocatorlEvoidmUgRsPgRcOallocatorlEvectorlEvoidmUcOallocatorlEvoidmUgRsPgRsPgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__Dict_245_0_4, 117, G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEvoidmUcOallocatorlEvoidmUgRsPgRcOallocatorlEvectorlEvoidmUcOallocatorlEvoidmUgRsPgRsPgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rbegin",631,G__Dict_245_0_5, 117, G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlEvectorlEvoidmUcOallocatorlEvoidmUgRsPgRcOallocatorlEvectorlEvoidmUcOallocatorlEvoidmUgRsPgRsPgRsPgRcLcLiteratorgR), G__defined_typename("vector<vector<void*,allocator<void*> >,allocator<vector<void*,allocator<void*> > > >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rend",425,G__Dict_245_0_6, 117, G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlEvectorlEvoidmUcOallocatorlEvoidmUgRsPgRcOallocatorlEvectorlEvoidmUcOallocatorlEvoidmUgRsPgRsPgRsPgRcLcLiteratorgR), G__defined_typename("vector<vector<void*,allocator<void*> >,allocator<vector<void*,allocator<void*> > > >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("size",443,G__Dict_245_0_7, 107, -1, G__defined_typename("vector<vector<void*,allocator<void*> >,allocator<vector<void*,allocator<void*> > > >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("max_size",864,G__Dict_245_0_8, 107, -1, G__defined_typename("vector<vector<void*,allocator<void*> >,allocator<vector<void*,allocator<void*> > > >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__Dict_245_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<vector<void*,allocator<void*> >,allocator<vector<void*,allocator<void*> > > >::size_type' 0 - sz", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__Dict_245_0_10, 121, -1, -1, 0, 2, 1, 1, 0, 
"k - 'vector<vector<void*,allocator<void*> >,allocator<vector<void*,allocator<void*> > > >::size_type' 0 - sz u 'vector<void*,allocator<void*> >' - 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("capacity",846,G__Dict_245_0_11, 107, -1, G__defined_typename("vector<vector<void*,allocator<void*> >,allocator<vector<void*,allocator<void*> > > >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("empty",559,G__Dict_245_0_12, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__Dict_245_0_13, 117, G__get_linked_tagnum(&G__DictLN_vectorlEvoidmUcOallocatorlEvoidmUgRsPgR), G__defined_typename("vector<vector<void*,allocator<void*> >,allocator<vector<void*,allocator<void*> > > >::reference"), 1, 1, 1, 1, 0, "k - 'vector<vector<void*,allocator<void*> >,allocator<vector<void*,allocator<void*> > > >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__Dict_245_0_14, 117, G__get_linked_tagnum(&G__DictLN_vectorlEvoidmUcOallocatorlEvoidmUgRsPgR), G__defined_typename("vector<vector<void*,allocator<void*> >,allocator<vector<void*,allocator<void*> > > >::const_reference"), 1, 1, 1, 1, 8, "k - 'vector<vector<void*,allocator<void*> >,allocator<vector<void*,allocator<void*> > > >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<vector<void*,allocator<void*> >,allocator<vector<void*,allocator<void*> > > >",7756,G__Dict_245_0_15, 105, G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEvoidmUcOallocatorlEvoidmUgRsPgRcOallocatorlEvectorlEvoidmUcOallocatorlEvoidmUgRsPgRsPgRsPgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<vector<void*,allocator<void*> >,allocator<vector<void*,allocator<void*> > > >",7756,G__Dict_245_0_16, 105, G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEvoidmUcOallocatorlEvoidmUgRsPgRcOallocatorlEvectorlEvoidmUcOallocatorlEvoidmUgRsPgRsPgRsPgR), -1, 0, 2, 1, 1, 0, 
"k - 'vector<vector<void*,allocator<void*> >,allocator<vector<void*,allocator<void*> > > >::size_type' 0 - n u 'vector<void*,allocator<void*> >' - 11 '(vector<void*,allocator<void*> >)()' value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<vector<void*,allocator<void*> >,allocator<vector<void*,allocator<void*> > > >",7756,G__Dict_245_0_17, 105, G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEvoidmUcOallocatorlEvoidmUgRsPgRcOallocatorlEvectorlEvoidmUcOallocatorlEvoidmUgRsPgRsPgRsPgR), -1, 0, 1, 1, 1, 0, "u 'vector<vector<void*,allocator<void*> >,allocator<vector<void*,allocator<void*> > > >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<vector<void*,allocator<void*> >,allocator<vector<void*,allocator<void*> > > >",7756,G__Dict_245_0_18, 105, G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEvoidmUcOallocatorlEvoidmUgRsPgRcOallocatorlEvectorlEvoidmUcOallocatorlEvoidmUgRsPgRsPgRsPgR), -1, 0, 2, 1, 1, 0, 
"u 'vector<vector<void*,allocator<void*> >,allocator<vector<void*,allocator<void*> > > >::iterator' 'vector<vector<void*,allocator<void*> >,allocator<vector<void*,allocator<void*> > > >::const_iterator' 10 - first u 'vector<vector<void*,allocator<void*> >,allocator<vector<void*,allocator<void*> > > >::iterator' 'vector<vector<void*,allocator<void*> >,allocator<vector<void*,allocator<void*> > > >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__Dict_245_0_19, 117, G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEvoidmUcOallocatorlEvoidmUgRsPgRcOallocatorlEvectorlEvoidmUcOallocatorlEvoidmUgRsPgRsPgRsPgR), -1, 1, 1, 1, 1, 0, "u 'vector<vector<void*,allocator<void*> >,allocator<vector<void*,allocator<void*> > > >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("reserve",764,G__Dict_245_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<vector<void*,allocator<void*> >,allocator<vector<void*,allocator<void*> > > >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("front",553,G__Dict_245_0_21, 117, G__get_linked_tagnum(&G__DictLN_vectorlEvoidmUcOallocatorlEvoidmUgRsPgR), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("back",401,G__Dict_245_0_22, 117, G__get_linked_tagnum(&G__DictLN_vectorlEvoidmUcOallocatorlEvoidmUgRsPgR), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("push_back",944,G__Dict_245_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<void*,allocator<void*> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("swap",443,G__Dict_245_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<vector<void*,allocator<void*> >,allocator<vector<void*,allocator<void*> > > >' - 1 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__Dict_245_0_25, 117, G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEvoidmUcOallocatorlEvoidmUgRsPgRcOallocatorlEvectorlEvoidmUcOallocatorlEvoidmUgRsPgRsPgRsPgRcLcLiterator), -1, 0, 2, 1, 1, 0, 
"u 'vector<vector<void*,allocator<void*> >,allocator<vector<void*,allocator<void*> > > >::iterator' - 0 - position u 'vector<void*,allocator<void*> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__Dict_245_0_26, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<vector<void*,allocator<void*> >,allocator<vector<void*,allocator<void*> > > >::iterator' - 0 - position u 'vector<vector<void*,allocator<void*> >,allocator<vector<void*,allocator<void*> > > >::iterator' 'vector<vector<void*,allocator<void*> >,allocator<vector<void*,allocator<void*> > > >::const_iterator' 10 - first "
"u 'vector<vector<void*,allocator<void*> >,allocator<vector<void*,allocator<void*> > > >::iterator' 'vector<vector<void*,allocator<void*> >,allocator<vector<void*,allocator<void*> > > >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__Dict_245_0_27, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<vector<void*,allocator<void*> >,allocator<vector<void*,allocator<void*> > > >::iterator' - 0 - position k - 'vector<vector<void*,allocator<void*> >,allocator<vector<void*,allocator<void*> > > >::size_type' 0 - n "
"u 'vector<void*,allocator<void*> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pop_back",831,G__Dict_245_0_28, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__Dict_245_0_29, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<vector<void*,allocator<void*> >,allocator<vector<void*,allocator<void*> > > >::iterator' - 0 - position", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__Dict_245_0_30, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<vector<void*,allocator<void*> >,allocator<vector<void*,allocator<void*> > > >::iterator' - 0 - first u 'vector<vector<void*,allocator<void*> >,allocator<vector<void*,allocator<void*> > > >::iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__Dict_245_0_31, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~vector<vector<void*,allocator<void*> >,allocator<vector<void*,allocator<void*> > > >", 7882, G__Dict_245_0_32, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncDict() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalDict() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {
}

static void G__cpp_setup_func14() {
}

static void G__cpp_setup_func15() {
}

static void G__cpp_setup_func16() {
}

static void G__cpp_setup_func17() {
}

static void G__cpp_setup_func18() {
}

static void G__cpp_setup_func19() {
}

static void G__cpp_setup_func20() {
}

static void G__cpp_setup_func21() {
}

static void G__cpp_setup_func22() {
}

static void G__cpp_setup_func23() {
}

static void G__cpp_setup_func24() {
}

static void G__cpp_setup_func25() {
}

static void G__cpp_setup_func26() {
}

static void G__cpp_setup_func27() {
}

static void G__cpp_setup_func28() {
}

static void G__cpp_setup_func29() {
}

static void G__cpp_setup_func30() {
}

static void G__cpp_setup_func31() {
}

static void G__cpp_setup_func32() {
}

static void G__cpp_setup_func33() {
}

static void G__cpp_setup_func34() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcDict() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
  G__cpp_setup_func14();
  G__cpp_setup_func15();
  G__cpp_setup_func16();
  G__cpp_setup_func17();
  G__cpp_setup_func18();
  G__cpp_setup_func19();
  G__cpp_setup_func20();
  G__cpp_setup_func21();
  G__cpp_setup_func22();
  G__cpp_setup_func23();
  G__cpp_setup_func24();
  G__cpp_setup_func25();
  G__cpp_setup_func26();
  G__cpp_setup_func27();
  G__cpp_setup_func28();
  G__cpp_setup_func29();
  G__cpp_setup_func30();
  G__cpp_setup_func31();
  G__cpp_setup_func32();
  G__cpp_setup_func33();
  G__cpp_setup_func34();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__DictLN_vectorlEcharcOallocatorlEchargRsPgR = { "vector<char,allocator<char> >" , 99 , -1 };
G__linked_taginfo G__DictLN_vectorlEshortcOallocatorlEshortgRsPgR = { "vector<short,allocator<short> >" , 99 , -1 };
G__linked_taginfo G__DictLN_vectorlElongcOallocatorlElonggRsPgR = { "vector<long,allocator<long> >" , 99 , -1 };
G__linked_taginfo G__DictLN_vectorlElongsPlongcOallocatorlElongsPlonggRsPgR = { "vector<long long,allocator<long long> >" , 99 , -1 };
G__linked_taginfo G__DictLN_vectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgR = { "vector<unsigned char,allocator<unsigned char> >" , 99 , -1 };
G__linked_taginfo G__DictLN_vectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgR = { "vector<unsigned short,allocator<unsigned short> >" , 99 , -1 };
G__linked_taginfo G__DictLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR = { "vector<unsigned int,allocator<unsigned int> >" , 99 , -1 };
G__linked_taginfo G__DictLN_vectorlEunsignedsPlongcOallocatorlEunsignedsPlonggRsPgR = { "vector<unsigned long,allocator<unsigned long> >" , 99 , -1 };
G__linked_taginfo G__DictLN_vectorlEunsignedsPlongsPlongcOallocatorlEunsignedsPlongsPlonggRsPgR = { "vector<unsigned long long,allocator<unsigned long long> >" , 99 , -1 };
G__linked_taginfo G__DictLN_vectorlEfloatcOallocatorlEfloatgRsPgR = { "vector<float,allocator<float> >" , 99 , -1 };
G__linked_taginfo G__DictLN_vectorlEdoublecOallocatorlEdoublegRsPgR = { "vector<double,allocator<double> >" , 99 , -1 };
G__linked_taginfo G__DictLN_vectorlEvoidmUcOallocatorlEvoidmUgRsPgR = { "vector<void*,allocator<void*> >" , 99 , -1 };
G__linked_taginfo G__DictLN_vectorlEcharmUcOallocatorlEcharmUgRsPgR = { "vector<char*,allocator<char*> >" , 99 , -1 };
G__linked_taginfo G__DictLN_vectorlEboolcOallocatorlEboolgRsPgR = { "vector<bool,allocator<bool> >" , 99 , -1 };
G__linked_taginfo G__DictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__DictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__DictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__DictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__DictLN_vectorlEintcOallocatorlEintgRsPgR = { "vector<int,allocator<int> >" , 99 , -1 };
G__linked_taginfo G__DictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<int,allocator<int> >::iterator>" , 99 , -1 };
G__linked_taginfo G__DictLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR = { "vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >" , 99 , -1 };
G__linked_taginfo G__DictLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgRcLcLiterator = { "vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >::iterator" , 99 , -1 };
G__linked_taginfo G__DictLN_reverse_iteratorlEvectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >::iterator>" , 99 , -1 };
G__linked_taginfo G__DictLN_vectorlEvectorlEboolcOallocatorlEboolgRsPgRcOallocatorlEvectorlEboolcOallocatorlEboolgRsPgRsPgRsPgR = { "vector<vector<bool,allocator<bool> >,allocator<vector<bool,allocator<bool> > > >" , 99 , -1 };
G__linked_taginfo G__DictLN_vectorlEvectorlEboolcOallocatorlEboolgRsPgRcOallocatorlEvectorlEboolcOallocatorlEboolgRsPgRsPgRsPgRcLcLiterator = { "vector<vector<bool,allocator<bool> >,allocator<vector<bool,allocator<bool> > > >::iterator" , 99 , -1 };
G__linked_taginfo G__DictLN_reverse_iteratorlEvectorlEvectorlEboolcOallocatorlEboolgRsPgRcOallocatorlEvectorlEboolcOallocatorlEboolgRsPgRsPgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<vector<bool,allocator<bool> >,allocator<vector<bool,allocator<bool> > > >::iterator>" , 99 , -1 };
G__linked_taginfo G__DictLN_vectorlEvectorlEcharcOallocatorlEchargRsPgRcOallocatorlEvectorlEcharcOallocatorlEchargRsPgRsPgRsPgR = { "vector<vector<char,allocator<char> >,allocator<vector<char,allocator<char> > > >" , 99 , -1 };
G__linked_taginfo G__DictLN_vectorlEvectorlEcharcOallocatorlEchargRsPgRcOallocatorlEvectorlEcharcOallocatorlEchargRsPgRsPgRsPgRcLcLiterator = { "vector<vector<char,allocator<char> >,allocator<vector<char,allocator<char> > > >::iterator" , 99 , -1 };
G__linked_taginfo G__DictLN_reverse_iteratorlEvectorlEvectorlEcharcOallocatorlEchargRsPgRcOallocatorlEvectorlEcharcOallocatorlEchargRsPgRsPgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<vector<char,allocator<char> >,allocator<vector<char,allocator<char> > > >::iterator>" , 99 , -1 };
G__linked_taginfo G__DictLN_vectorlEvectorlEshortcOallocatorlEshortgRsPgRcOallocatorlEvectorlEshortcOallocatorlEshortgRsPgRsPgRsPgR = { "vector<vector<short,allocator<short> >,allocator<vector<short,allocator<short> > > >" , 99 , -1 };
G__linked_taginfo G__DictLN_vectorlEvectorlEshortcOallocatorlEshortgRsPgRcOallocatorlEvectorlEshortcOallocatorlEshortgRsPgRsPgRsPgRcLcLiterator = { "vector<vector<short,allocator<short> >,allocator<vector<short,allocator<short> > > >::iterator" , 99 , -1 };
G__linked_taginfo G__DictLN_reverse_iteratorlEvectorlEvectorlEshortcOallocatorlEshortgRsPgRcOallocatorlEvectorlEshortcOallocatorlEshortgRsPgRsPgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<vector<short,allocator<short> >,allocator<vector<short,allocator<short> > > >::iterator>" , 99 , -1 };
G__linked_taginfo G__DictLN_vectorlEvectorlElongcOallocatorlElonggRsPgRcOallocatorlEvectorlElongcOallocatorlElonggRsPgRsPgRsPgR = { "vector<vector<long,allocator<long> >,allocator<vector<long,allocator<long> > > >" , 99 , -1 };
G__linked_taginfo G__DictLN_vectorlEvectorlElongcOallocatorlElonggRsPgRcOallocatorlEvectorlElongcOallocatorlElonggRsPgRsPgRsPgRcLcLiterator = { "vector<vector<long,allocator<long> >,allocator<vector<long,allocator<long> > > >::iterator" , 99 , -1 };
G__linked_taginfo G__DictLN_reverse_iteratorlEvectorlEvectorlElongcOallocatorlElonggRsPgRcOallocatorlEvectorlElongcOallocatorlElonggRsPgRsPgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<vector<long,allocator<long> >,allocator<vector<long,allocator<long> > > >::iterator>" , 99 , -1 };
G__linked_taginfo G__DictLN_vectorlEvectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgRcOallocatorlEvectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgRsPgRsPgR = { "vector<vector<unsigned char,allocator<unsigned char> >,allocator<vector<unsigned char,allocator<unsigned char> > > >" , 99 , -1 };
G__linked_taginfo G__DictLN_vectorlEvectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgRcOallocatorlEvectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgRsPgRsPgRcLcLiterator = { "vector<vector<unsigned char,allocator<unsigned char> >,allocator<vector<unsigned char,allocator<unsigned char> > > >::iterator" , 99 , -1 };
G__linked_taginfo G__DictLN_reverse_iteratorlEvectorlEvectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgRcOallocatorlEvectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgRsPgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<vector<unsigned char,allocator<unsigned char> >,allocator<vector<unsigned char,allocator<unsigned char> > > >::iterator>" , 99 , -1 };
G__linked_taginfo G__DictLN_vectorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcOallocatorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRsPgRsPgR = { "vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >" , 99 , -1 };
G__linked_taginfo G__DictLN_vectorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcOallocatorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRsPgRsPgRcLcLiterator = { "vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >::iterator" , 99 , -1 };
G__linked_taginfo G__DictLN_reverse_iteratorlEvectorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcOallocatorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRsPgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >::iterator>" , 99 , -1 };
G__linked_taginfo G__DictLN_vectorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcOallocatorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRsPgRsPgR = { "vector<vector<unsigned int,allocator<unsigned int> >,allocator<vector<unsigned int,allocator<unsigned int> > > >" , 99 , -1 };
G__linked_taginfo G__DictLN_vectorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcOallocatorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRsPgRsPgRcLcLiterator = { "vector<vector<unsigned int,allocator<unsigned int> >,allocator<vector<unsigned int,allocator<unsigned int> > > >::iterator" , 99 , -1 };
G__linked_taginfo G__DictLN_reverse_iteratorlEvectorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcOallocatorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRsPgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<vector<unsigned int,allocator<unsigned int> >,allocator<vector<unsigned int,allocator<unsigned int> > > >::iterator>" , 99 , -1 };
G__linked_taginfo G__DictLN_vectorlEvectorlEunsignedsPlongcOallocatorlEunsignedsPlonggRsPgRcOallocatorlEvectorlEunsignedsPlongcOallocatorlEunsignedsPlonggRsPgRsPgRsPgR = { "vector<vector<unsigned long,allocator<unsigned long> >,allocator<vector<unsigned long,allocator<unsigned long> > > >" , 99 , -1 };
G__linked_taginfo G__DictLN_vectorlEvectorlEunsignedsPlongcOallocatorlEunsignedsPlonggRsPgRcOallocatorlEvectorlEunsignedsPlongcOallocatorlEunsignedsPlonggRsPgRsPgRsPgRcLcLiterator = { "vector<vector<unsigned long,allocator<unsigned long> >,allocator<vector<unsigned long,allocator<unsigned long> > > >::iterator" , 99 , -1 };
G__linked_taginfo G__DictLN_reverse_iteratorlEvectorlEvectorlEunsignedsPlongcOallocatorlEunsignedsPlonggRsPgRcOallocatorlEvectorlEunsignedsPlongcOallocatorlEunsignedsPlonggRsPgRsPgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<vector<unsigned long,allocator<unsigned long> >,allocator<vector<unsigned long,allocator<unsigned long> > > >::iterator>" , 99 , -1 };
G__linked_taginfo G__DictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR = { "vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >" , 99 , -1 };
G__linked_taginfo G__DictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRcLcLiterator = { "vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::iterator" , 99 , -1 };
G__linked_taginfo G__DictLN_reverse_iteratorlEvectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::iterator>" , 99 , -1 };
G__linked_taginfo G__DictLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR = { "vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >" , 99 , -1 };
G__linked_taginfo G__DictLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRcLcLiterator = { "vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::iterator" , 99 , -1 };
G__linked_taginfo G__DictLN_reverse_iteratorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::iterator>" , 99 , -1 };
G__linked_taginfo G__DictLN_vectorlEvectorlEcharmUcOallocatorlEcharmUgRsPgRcOallocatorlEvectorlEcharmUcOallocatorlEcharmUgRsPgRsPgRsPgR = { "vector<vector<char*,allocator<char*> >,allocator<vector<char*,allocator<char*> > > >" , 99 , -1 };
G__linked_taginfo G__DictLN_vectorlEvectorlEcharmUcOallocatorlEcharmUgRsPgRcOallocatorlEvectorlEcharmUcOallocatorlEcharmUgRsPgRsPgRsPgRcLcLiterator = { "vector<vector<char*,allocator<char*> >,allocator<vector<char*,allocator<char*> > > >::iterator" , 99 , -1 };
G__linked_taginfo G__DictLN_reverse_iteratorlEvectorlEvectorlEcharmUcOallocatorlEcharmUgRsPgRcOallocatorlEvectorlEcharmUcOallocatorlEcharmUgRsPgRsPgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<vector<char*,allocator<char*> >,allocator<vector<char*,allocator<char*> > > >::iterator>" , 99 , -1 };
G__linked_taginfo G__DictLN_vectorlEconstsPcharmUcOallocatorlEconstsPcharmUgRsPgR = { "vector<const char*,allocator<const char*> >" , 99 , -1 };
G__linked_taginfo G__DictLN_reverse_iteratorlEvectorlEconstsPcharmUcOallocatorlEconstsPcharmUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<const char*,allocator<const char*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__DictLN_vectorlEvectorlEconstsPcharmUcOallocatorlEconstsPcharmUgRsPgRcOallocatorlEvectorlEconstsPcharmUcOallocatorlEconstsPcharmUgRsPgRsPgRsPgR = { "vector<vector<const char*,allocator<const char*> >,allocator<vector<const char*,allocator<const char*> > > >" , 99 , -1 };
G__linked_taginfo G__DictLN_vectorlEvectorlEconstsPcharmUcOallocatorlEconstsPcharmUgRsPgRcOallocatorlEvectorlEconstsPcharmUcOallocatorlEconstsPcharmUgRsPgRsPgRsPgRcLcLiterator = { "vector<vector<const char*,allocator<const char*> >,allocator<vector<const char*,allocator<const char*> > > >::iterator" , 99 , -1 };
G__linked_taginfo G__DictLN_reverse_iteratorlEvectorlEvectorlEconstsPcharmUcOallocatorlEconstsPcharmUgRsPgRcOallocatorlEvectorlEconstsPcharmUcOallocatorlEconstsPcharmUgRsPgRsPgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<vector<const char*,allocator<const char*> >,allocator<vector<const char*,allocator<const char*> > > >::iterator>" , 99 , -1 };
G__linked_taginfo G__DictLN_vectorlETStringcOallocatorlETStringgRsPgR = { "vector<TString,allocator<TString> >" , 99 , -1 };
G__linked_taginfo G__DictLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TString,allocator<TString> >::iterator>" , 99 , -1 };
G__linked_taginfo G__DictLN_vectorlEvectorlETStringcOallocatorlETStringgRsPgRcOallocatorlEvectorlETStringcOallocatorlETStringgRsPgRsPgRsPgR = { "vector<vector<TString,allocator<TString> >,allocator<vector<TString,allocator<TString> > > >" , 99 , -1 };
G__linked_taginfo G__DictLN_vectorlEvectorlETStringcOallocatorlETStringgRsPgRcOallocatorlEvectorlETStringcOallocatorlETStringgRsPgRsPgRsPgRcLcLiterator = { "vector<vector<TString,allocator<TString> >,allocator<vector<TString,allocator<TString> > > >::iterator" , 99 , -1 };
G__linked_taginfo G__DictLN_reverse_iteratorlEvectorlEvectorlETStringcOallocatorlETStringgRsPgRcOallocatorlEvectorlETStringcOallocatorlETStringgRsPgRsPgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<vector<TString,allocator<TString> >,allocator<vector<TString,allocator<TString> > > >::iterator>" , 99 , -1 };
G__linked_taginfo G__DictLN_vectorlEvectorlElongsPlongcOallocatorlElongsPlonggRsPgRcOallocatorlEvectorlElongsPlongcOallocatorlElongsPlonggRsPgRsPgRsPgR = { "vector<vector<long long,allocator<long long> >,allocator<vector<long long,allocator<long long> > > >" , 99 , -1 };
G__linked_taginfo G__DictLN_vectorlEvectorlElongsPlongcOallocatorlElongsPlonggRsPgRcOallocatorlEvectorlElongsPlongcOallocatorlElongsPlonggRsPgRsPgRsPgRcLcLiterator = { "vector<vector<long long,allocator<long long> >,allocator<vector<long long,allocator<long long> > > >::iterator" , 99 , -1 };
G__linked_taginfo G__DictLN_reverse_iteratorlEvectorlEvectorlElongsPlongcOallocatorlElongsPlonggRsPgRcOallocatorlEvectorlElongsPlongcOallocatorlElongsPlonggRsPgRsPgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<vector<long long,allocator<long long> >,allocator<vector<long long,allocator<long long> > > >::iterator>" , 99 , -1 };
G__linked_taginfo G__DictLN_vectorlEvectorlEunsignedsPlongsPlongcOallocatorlEunsignedsPlongsPlonggRsPgRcOallocatorlEvectorlEunsignedsPlongsPlongcOallocatorlEunsignedsPlongsPlonggRsPgRsPgRsPgR = { "vector<vector<unsigned long long,allocator<unsigned long long> >,allocator<vector<unsigned long long,allocator<unsigned long long> > > >" , 99 , -1 };
G__linked_taginfo G__DictLN_vectorlEvectorlEunsignedsPlongsPlongcOallocatorlEunsignedsPlongsPlonggRsPgRcOallocatorlEvectorlEunsignedsPlongsPlongcOallocatorlEunsignedsPlongsPlonggRsPgRsPgRsPgRcLcLiterator = { "vector<vector<unsigned long long,allocator<unsigned long long> >,allocator<vector<unsigned long long,allocator<unsigned long long> > > >::iterator" , 99 , -1 };
G__linked_taginfo G__DictLN_reverse_iteratorlEvectorlEvectorlEunsignedsPlongsPlongcOallocatorlEunsignedsPlongsPlonggRsPgRcOallocatorlEvectorlEunsignedsPlongsPlongcOallocatorlEunsignedsPlongsPlonggRsPgRsPgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<vector<unsigned long long,allocator<unsigned long long> >,allocator<vector<unsigned long long,allocator<unsigned long long> > > >::iterator>" , 99 , -1 };
G__linked_taginfo G__DictLN_vectorlEvectorlEvoidmUcOallocatorlEvoidmUgRsPgRcOallocatorlEvectorlEvoidmUcOallocatorlEvoidmUgRsPgRsPgRsPgR = { "vector<vector<void*,allocator<void*> >,allocator<vector<void*,allocator<void*> > > >" , 99 , -1 };
G__linked_taginfo G__DictLN_vectorlEvectorlEvoidmUcOallocatorlEvoidmUgRsPgRcOallocatorlEvectorlEvoidmUcOallocatorlEvoidmUgRsPgRsPgRsPgRcLcLiterator = { "vector<vector<void*,allocator<void*> >,allocator<vector<void*,allocator<void*> > > >::iterator" , 99 , -1 };
G__linked_taginfo G__DictLN_reverse_iteratorlEvectorlEvectorlEvoidmUcOallocatorlEvoidmUgRsPgRcOallocatorlEvectorlEvoidmUcOallocatorlEvoidmUgRsPgRsPgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<vector<void*,allocator<void*> >,allocator<vector<void*,allocator<void*> > > >::iterator>" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableDict() {
  G__DictLN_vectorlEcharcOallocatorlEchargRsPgR.tagnum = -1 ;
  G__DictLN_vectorlEshortcOallocatorlEshortgRsPgR.tagnum = -1 ;
  G__DictLN_vectorlElongcOallocatorlElonggRsPgR.tagnum = -1 ;
  G__DictLN_vectorlElongsPlongcOallocatorlElongsPlonggRsPgR.tagnum = -1 ;
  G__DictLN_vectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgR.tagnum = -1 ;
  G__DictLN_vectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgR.tagnum = -1 ;
  G__DictLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR.tagnum = -1 ;
  G__DictLN_vectorlEunsignedsPlongcOallocatorlEunsignedsPlonggRsPgR.tagnum = -1 ;
  G__DictLN_vectorlEunsignedsPlongsPlongcOallocatorlEunsignedsPlongsPlonggRsPgR.tagnum = -1 ;
  G__DictLN_vectorlEfloatcOallocatorlEfloatgRsPgR.tagnum = -1 ;
  G__DictLN_vectorlEdoublecOallocatorlEdoublegRsPgR.tagnum = -1 ;
  G__DictLN_vectorlEvoidmUcOallocatorlEvoidmUgRsPgR.tagnum = -1 ;
  G__DictLN_vectorlEcharmUcOallocatorlEcharmUgRsPgR.tagnum = -1 ;
  G__DictLN_vectorlEboolcOallocatorlEboolgRsPgR.tagnum = -1 ;
  G__DictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__DictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__DictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__DictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__DictLN_vectorlEintcOallocatorlEintgRsPgR.tagnum = -1 ;
  G__DictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__DictLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR.tagnum = -1 ;
  G__DictLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgRcLcLiterator.tagnum = -1 ;
  G__DictLN_reverse_iteratorlEvectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__DictLN_vectorlEvectorlEboolcOallocatorlEboolgRsPgRcOallocatorlEvectorlEboolcOallocatorlEboolgRsPgRsPgRsPgR.tagnum = -1 ;
  G__DictLN_vectorlEvectorlEboolcOallocatorlEboolgRsPgRcOallocatorlEvectorlEboolcOallocatorlEboolgRsPgRsPgRsPgRcLcLiterator.tagnum = -1 ;
  G__DictLN_reverse_iteratorlEvectorlEvectorlEboolcOallocatorlEboolgRsPgRcOallocatorlEvectorlEboolcOallocatorlEboolgRsPgRsPgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__DictLN_vectorlEvectorlEcharcOallocatorlEchargRsPgRcOallocatorlEvectorlEcharcOallocatorlEchargRsPgRsPgRsPgR.tagnum = -1 ;
  G__DictLN_vectorlEvectorlEcharcOallocatorlEchargRsPgRcOallocatorlEvectorlEcharcOallocatorlEchargRsPgRsPgRsPgRcLcLiterator.tagnum = -1 ;
  G__DictLN_reverse_iteratorlEvectorlEvectorlEcharcOallocatorlEchargRsPgRcOallocatorlEvectorlEcharcOallocatorlEchargRsPgRsPgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__DictLN_vectorlEvectorlEshortcOallocatorlEshortgRsPgRcOallocatorlEvectorlEshortcOallocatorlEshortgRsPgRsPgRsPgR.tagnum = -1 ;
  G__DictLN_vectorlEvectorlEshortcOallocatorlEshortgRsPgRcOallocatorlEvectorlEshortcOallocatorlEshortgRsPgRsPgRsPgRcLcLiterator.tagnum = -1 ;
  G__DictLN_reverse_iteratorlEvectorlEvectorlEshortcOallocatorlEshortgRsPgRcOallocatorlEvectorlEshortcOallocatorlEshortgRsPgRsPgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__DictLN_vectorlEvectorlElongcOallocatorlElonggRsPgRcOallocatorlEvectorlElongcOallocatorlElonggRsPgRsPgRsPgR.tagnum = -1 ;
  G__DictLN_vectorlEvectorlElongcOallocatorlElonggRsPgRcOallocatorlEvectorlElongcOallocatorlElonggRsPgRsPgRsPgRcLcLiterator.tagnum = -1 ;
  G__DictLN_reverse_iteratorlEvectorlEvectorlElongcOallocatorlElonggRsPgRcOallocatorlEvectorlElongcOallocatorlElonggRsPgRsPgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__DictLN_vectorlEvectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgRcOallocatorlEvectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgRsPgRsPgR.tagnum = -1 ;
  G__DictLN_vectorlEvectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgRcOallocatorlEvectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgRsPgRsPgRcLcLiterator.tagnum = -1 ;
  G__DictLN_reverse_iteratorlEvectorlEvectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgRcOallocatorlEvectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgRsPgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__DictLN_vectorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcOallocatorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRsPgRsPgR.tagnum = -1 ;
  G__DictLN_vectorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcOallocatorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRsPgRsPgRcLcLiterator.tagnum = -1 ;
  G__DictLN_reverse_iteratorlEvectorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcOallocatorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRsPgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__DictLN_vectorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcOallocatorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRsPgRsPgR.tagnum = -1 ;
  G__DictLN_vectorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcOallocatorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRsPgRsPgRcLcLiterator.tagnum = -1 ;
  G__DictLN_reverse_iteratorlEvectorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcOallocatorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRsPgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__DictLN_vectorlEvectorlEunsignedsPlongcOallocatorlEunsignedsPlonggRsPgRcOallocatorlEvectorlEunsignedsPlongcOallocatorlEunsignedsPlonggRsPgRsPgRsPgR.tagnum = -1 ;
  G__DictLN_vectorlEvectorlEunsignedsPlongcOallocatorlEunsignedsPlonggRsPgRcOallocatorlEvectorlEunsignedsPlongcOallocatorlEunsignedsPlonggRsPgRsPgRsPgRcLcLiterator.tagnum = -1 ;
  G__DictLN_reverse_iteratorlEvectorlEvectorlEunsignedsPlongcOallocatorlEunsignedsPlonggRsPgRcOallocatorlEvectorlEunsignedsPlongcOallocatorlEunsignedsPlonggRsPgRsPgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__DictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR.tagnum = -1 ;
  G__DictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRcLcLiterator.tagnum = -1 ;
  G__DictLN_reverse_iteratorlEvectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__DictLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR.tagnum = -1 ;
  G__DictLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRcLcLiterator.tagnum = -1 ;
  G__DictLN_reverse_iteratorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__DictLN_vectorlEvectorlEcharmUcOallocatorlEcharmUgRsPgRcOallocatorlEvectorlEcharmUcOallocatorlEcharmUgRsPgRsPgRsPgR.tagnum = -1 ;
  G__DictLN_vectorlEvectorlEcharmUcOallocatorlEcharmUgRsPgRcOallocatorlEvectorlEcharmUcOallocatorlEcharmUgRsPgRsPgRsPgRcLcLiterator.tagnum = -1 ;
  G__DictLN_reverse_iteratorlEvectorlEvectorlEcharmUcOallocatorlEcharmUgRsPgRcOallocatorlEvectorlEcharmUcOallocatorlEcharmUgRsPgRsPgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__DictLN_vectorlEconstsPcharmUcOallocatorlEconstsPcharmUgRsPgR.tagnum = -1 ;
  G__DictLN_reverse_iteratorlEvectorlEconstsPcharmUcOallocatorlEconstsPcharmUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__DictLN_vectorlEvectorlEconstsPcharmUcOallocatorlEconstsPcharmUgRsPgRcOallocatorlEvectorlEconstsPcharmUcOallocatorlEconstsPcharmUgRsPgRsPgRsPgR.tagnum = -1 ;
  G__DictLN_vectorlEvectorlEconstsPcharmUcOallocatorlEconstsPcharmUgRsPgRcOallocatorlEvectorlEconstsPcharmUcOallocatorlEconstsPcharmUgRsPgRsPgRsPgRcLcLiterator.tagnum = -1 ;
  G__DictLN_reverse_iteratorlEvectorlEvectorlEconstsPcharmUcOallocatorlEconstsPcharmUgRsPgRcOallocatorlEvectorlEconstsPcharmUcOallocatorlEconstsPcharmUgRsPgRsPgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__DictLN_vectorlETStringcOallocatorlETStringgRsPgR.tagnum = -1 ;
  G__DictLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__DictLN_vectorlEvectorlETStringcOallocatorlETStringgRsPgRcOallocatorlEvectorlETStringcOallocatorlETStringgRsPgRsPgRsPgR.tagnum = -1 ;
  G__DictLN_vectorlEvectorlETStringcOallocatorlETStringgRsPgRcOallocatorlEvectorlETStringcOallocatorlETStringgRsPgRsPgRsPgRcLcLiterator.tagnum = -1 ;
  G__DictLN_reverse_iteratorlEvectorlEvectorlETStringcOallocatorlETStringgRsPgRcOallocatorlEvectorlETStringcOallocatorlETStringgRsPgRsPgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__DictLN_vectorlEvectorlElongsPlongcOallocatorlElongsPlonggRsPgRcOallocatorlEvectorlElongsPlongcOallocatorlElongsPlonggRsPgRsPgRsPgR.tagnum = -1 ;
  G__DictLN_vectorlEvectorlElongsPlongcOallocatorlElongsPlonggRsPgRcOallocatorlEvectorlElongsPlongcOallocatorlElongsPlonggRsPgRsPgRsPgRcLcLiterator.tagnum = -1 ;
  G__DictLN_reverse_iteratorlEvectorlEvectorlElongsPlongcOallocatorlElongsPlonggRsPgRcOallocatorlEvectorlElongsPlongcOallocatorlElongsPlonggRsPgRsPgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__DictLN_vectorlEvectorlEunsignedsPlongsPlongcOallocatorlEunsignedsPlongsPlonggRsPgRcOallocatorlEvectorlEunsignedsPlongsPlongcOallocatorlEunsignedsPlongsPlonggRsPgRsPgRsPgR.tagnum = -1 ;
  G__DictLN_vectorlEvectorlEunsignedsPlongsPlongcOallocatorlEunsignedsPlongsPlonggRsPgRcOallocatorlEvectorlEunsignedsPlongsPlongcOallocatorlEunsignedsPlongsPlonggRsPgRsPgRsPgRcLcLiterator.tagnum = -1 ;
  G__DictLN_reverse_iteratorlEvectorlEvectorlEunsignedsPlongsPlongcOallocatorlEunsignedsPlongsPlonggRsPgRcOallocatorlEvectorlEunsignedsPlongsPlongcOallocatorlEunsignedsPlongsPlonggRsPgRsPgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__DictLN_vectorlEvectorlEvoidmUcOallocatorlEvoidmUgRsPgRcOallocatorlEvectorlEvoidmUcOallocatorlEvoidmUgRsPgRsPgRsPgR.tagnum = -1 ;
  G__DictLN_vectorlEvectorlEvoidmUcOallocatorlEvoidmUgRsPgRcOallocatorlEvectorlEvoidmUcOallocatorlEvoidmUgRsPgRsPgRsPgRcLcLiterator.tagnum = -1 ;
  G__DictLN_reverse_iteratorlEvectorlEvectorlEvoidmUcOallocatorlEvoidmUgRsPgRcOallocatorlEvectorlEvoidmUcOallocatorlEvoidmUgRsPgRsPgRsPgRcLcLiteratorgR.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableDict() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__DictLN_vectorlEcharcOallocatorlEchargRsPgR);
   G__get_linked_tagnum_fwd(&G__DictLN_vectorlEshortcOallocatorlEshortgRsPgR);
   G__get_linked_tagnum_fwd(&G__DictLN_vectorlElongcOallocatorlElonggRsPgR);
   G__get_linked_tagnum_fwd(&G__DictLN_vectorlElongsPlongcOallocatorlElongsPlonggRsPgR);
   G__get_linked_tagnum_fwd(&G__DictLN_vectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgR);
   G__get_linked_tagnum_fwd(&G__DictLN_vectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgR);
   G__get_linked_tagnum_fwd(&G__DictLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR);
   G__get_linked_tagnum_fwd(&G__DictLN_vectorlEunsignedsPlongcOallocatorlEunsignedsPlonggRsPgR);
   G__get_linked_tagnum_fwd(&G__DictLN_vectorlEunsignedsPlongsPlongcOallocatorlEunsignedsPlongsPlonggRsPgR);
   G__get_linked_tagnum_fwd(&G__DictLN_vectorlEfloatcOallocatorlEfloatgRsPgR);
   G__get_linked_tagnum_fwd(&G__DictLN_vectorlEdoublecOallocatorlEdoublegRsPgR);
   G__get_linked_tagnum_fwd(&G__DictLN_vectorlEvoidmUcOallocatorlEvoidmUgRsPgR);
   G__get_linked_tagnum_fwd(&G__DictLN_vectorlEcharmUcOallocatorlEcharmUgRsPgR);
   G__get_linked_tagnum_fwd(&G__DictLN_vectorlEboolcOallocatorlEboolgRsPgR);
   G__get_linked_tagnum_fwd(&G__DictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__DictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__DictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__DictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__DictLN_vectorlEintcOallocatorlEintgRsPgR);
   G__get_linked_tagnum_fwd(&G__DictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__DictLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR),sizeof(vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >),-1,298752,(char*)NULL,G__setup_memvarvectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR,G__setup_memfuncvectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__DictLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgRcLcLiterator);
   G__get_linked_tagnum_fwd(&G__DictLN_reverse_iteratorlEvectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__DictLN_vectorlEvectorlEboolcOallocatorlEboolgRsPgRcOallocatorlEvectorlEboolcOallocatorlEboolgRsPgRsPgRsPgR),sizeof(vector<vector<bool,allocator<bool> >,allocator<vector<bool,allocator<bool> > > >),-1,298752,(char*)NULL,G__setup_memvarvectorlEvectorlEboolcOallocatorlEboolgRsPgRcOallocatorlEvectorlEboolcOallocatorlEboolgRsPgRsPgRsPgR,G__setup_memfuncvectorlEvectorlEboolcOallocatorlEboolgRsPgRcOallocatorlEvectorlEboolcOallocatorlEboolgRsPgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__DictLN_vectorlEvectorlEboolcOallocatorlEboolgRsPgRcOallocatorlEvectorlEboolcOallocatorlEboolgRsPgRsPgRsPgRcLcLiterator);
   G__get_linked_tagnum_fwd(&G__DictLN_reverse_iteratorlEvectorlEvectorlEboolcOallocatorlEboolgRsPgRcOallocatorlEvectorlEboolcOallocatorlEboolgRsPgRsPgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__DictLN_vectorlEvectorlEcharcOallocatorlEchargRsPgRcOallocatorlEvectorlEcharcOallocatorlEchargRsPgRsPgRsPgR),sizeof(vector<vector<char,allocator<char> >,allocator<vector<char,allocator<char> > > >),-1,298752,(char*)NULL,G__setup_memvarvectorlEvectorlEcharcOallocatorlEchargRsPgRcOallocatorlEvectorlEcharcOallocatorlEchargRsPgRsPgRsPgR,G__setup_memfuncvectorlEvectorlEcharcOallocatorlEchargRsPgRcOallocatorlEvectorlEcharcOallocatorlEchargRsPgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__DictLN_vectorlEvectorlEcharcOallocatorlEchargRsPgRcOallocatorlEvectorlEcharcOallocatorlEchargRsPgRsPgRsPgRcLcLiterator);
   G__get_linked_tagnum_fwd(&G__DictLN_reverse_iteratorlEvectorlEvectorlEcharcOallocatorlEchargRsPgRcOallocatorlEvectorlEcharcOallocatorlEchargRsPgRsPgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__DictLN_vectorlEvectorlEshortcOallocatorlEshortgRsPgRcOallocatorlEvectorlEshortcOallocatorlEshortgRsPgRsPgRsPgR),sizeof(vector<vector<short,allocator<short> >,allocator<vector<short,allocator<short> > > >),-1,298752,(char*)NULL,G__setup_memvarvectorlEvectorlEshortcOallocatorlEshortgRsPgRcOallocatorlEvectorlEshortcOallocatorlEshortgRsPgRsPgRsPgR,G__setup_memfuncvectorlEvectorlEshortcOallocatorlEshortgRsPgRcOallocatorlEvectorlEshortcOallocatorlEshortgRsPgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__DictLN_vectorlEvectorlEshortcOallocatorlEshortgRsPgRcOallocatorlEvectorlEshortcOallocatorlEshortgRsPgRsPgRsPgRcLcLiterator);
   G__get_linked_tagnum_fwd(&G__DictLN_reverse_iteratorlEvectorlEvectorlEshortcOallocatorlEshortgRsPgRcOallocatorlEvectorlEshortcOallocatorlEshortgRsPgRsPgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__DictLN_vectorlEvectorlElongcOallocatorlElonggRsPgRcOallocatorlEvectorlElongcOallocatorlElonggRsPgRsPgRsPgR),sizeof(vector<vector<long,allocator<long> >,allocator<vector<long,allocator<long> > > >),-1,298752,(char*)NULL,G__setup_memvarvectorlEvectorlElongcOallocatorlElonggRsPgRcOallocatorlEvectorlElongcOallocatorlElonggRsPgRsPgRsPgR,G__setup_memfuncvectorlEvectorlElongcOallocatorlElonggRsPgRcOallocatorlEvectorlElongcOallocatorlElonggRsPgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__DictLN_vectorlEvectorlElongcOallocatorlElonggRsPgRcOallocatorlEvectorlElongcOallocatorlElonggRsPgRsPgRsPgRcLcLiterator);
   G__get_linked_tagnum_fwd(&G__DictLN_reverse_iteratorlEvectorlEvectorlElongcOallocatorlElonggRsPgRcOallocatorlEvectorlElongcOallocatorlElonggRsPgRsPgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__DictLN_vectorlEvectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgRcOallocatorlEvectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgRsPgRsPgR),sizeof(vector<vector<unsigned char,allocator<unsigned char> >,allocator<vector<unsigned char,allocator<unsigned char> > > >),-1,298752,(char*)NULL,G__setup_memvarvectorlEvectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgRcOallocatorlEvectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgRsPgRsPgR,G__setup_memfuncvectorlEvectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgRcOallocatorlEvectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__DictLN_vectorlEvectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgRcOallocatorlEvectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgRsPgRsPgRcLcLiterator);
   G__get_linked_tagnum_fwd(&G__DictLN_reverse_iteratorlEvectorlEvectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgRcOallocatorlEvectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgRsPgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__DictLN_vectorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcOallocatorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRsPgRsPgR),sizeof(vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >),-1,298752,(char*)NULL,G__setup_memvarvectorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcOallocatorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRsPgRsPgR,G__setup_memfuncvectorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcOallocatorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__DictLN_vectorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcOallocatorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRsPgRsPgRcLcLiterator);
   G__get_linked_tagnum_fwd(&G__DictLN_reverse_iteratorlEvectorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcOallocatorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRsPgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__DictLN_vectorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcOallocatorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRsPgRsPgR),sizeof(vector<vector<unsigned int,allocator<unsigned int> >,allocator<vector<unsigned int,allocator<unsigned int> > > >),-1,298752,(char*)NULL,G__setup_memvarvectorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcOallocatorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRsPgRsPgR,G__setup_memfuncvectorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcOallocatorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__DictLN_vectorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcOallocatorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRsPgRsPgRcLcLiterator);
   G__get_linked_tagnum_fwd(&G__DictLN_reverse_iteratorlEvectorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcOallocatorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRsPgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__DictLN_vectorlEvectorlEunsignedsPlongcOallocatorlEunsignedsPlonggRsPgRcOallocatorlEvectorlEunsignedsPlongcOallocatorlEunsignedsPlonggRsPgRsPgRsPgR),sizeof(vector<vector<unsigned long,allocator<unsigned long> >,allocator<vector<unsigned long,allocator<unsigned long> > > >),-1,298752,(char*)NULL,G__setup_memvarvectorlEvectorlEunsignedsPlongcOallocatorlEunsignedsPlonggRsPgRcOallocatorlEvectorlEunsignedsPlongcOallocatorlEunsignedsPlonggRsPgRsPgRsPgR,G__setup_memfuncvectorlEvectorlEunsignedsPlongcOallocatorlEunsignedsPlonggRsPgRcOallocatorlEvectorlEunsignedsPlongcOallocatorlEunsignedsPlonggRsPgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__DictLN_vectorlEvectorlEunsignedsPlongcOallocatorlEunsignedsPlonggRsPgRcOallocatorlEvectorlEunsignedsPlongcOallocatorlEunsignedsPlonggRsPgRsPgRsPgRcLcLiterator);
   G__get_linked_tagnum_fwd(&G__DictLN_reverse_iteratorlEvectorlEvectorlEunsignedsPlongcOallocatorlEunsignedsPlonggRsPgRcOallocatorlEvectorlEunsignedsPlongcOallocatorlEunsignedsPlonggRsPgRsPgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__DictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR),sizeof(vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >),-1,298752,(char*)NULL,G__setup_memvarvectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR,G__setup_memfuncvectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__DictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRcLcLiterator);
   G__get_linked_tagnum_fwd(&G__DictLN_reverse_iteratorlEvectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__DictLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR),sizeof(vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >),-1,298752,(char*)NULL,G__setup_memvarvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR,G__setup_memfuncvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__DictLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRcLcLiterator);
   G__get_linked_tagnum_fwd(&G__DictLN_reverse_iteratorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__DictLN_vectorlEvectorlEcharmUcOallocatorlEcharmUgRsPgRcOallocatorlEvectorlEcharmUcOallocatorlEcharmUgRsPgRsPgRsPgR),sizeof(vector<vector<char*,allocator<char*> >,allocator<vector<char*,allocator<char*> > > >),-1,298752,(char*)NULL,G__setup_memvarvectorlEvectorlEcharmUcOallocatorlEcharmUgRsPgRcOallocatorlEvectorlEcharmUcOallocatorlEcharmUgRsPgRsPgRsPgR,G__setup_memfuncvectorlEvectorlEcharmUcOallocatorlEcharmUgRsPgRcOallocatorlEvectorlEcharmUcOallocatorlEcharmUgRsPgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__DictLN_vectorlEvectorlEcharmUcOallocatorlEcharmUgRsPgRcOallocatorlEvectorlEcharmUcOallocatorlEcharmUgRsPgRsPgRsPgRcLcLiterator);
   G__get_linked_tagnum_fwd(&G__DictLN_reverse_iteratorlEvectorlEvectorlEcharmUcOallocatorlEcharmUgRsPgRcOallocatorlEvectorlEcharmUcOallocatorlEcharmUgRsPgRsPgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__DictLN_vectorlEconstsPcharmUcOallocatorlEconstsPcharmUgRsPgR);
   G__get_linked_tagnum_fwd(&G__DictLN_reverse_iteratorlEvectorlEconstsPcharmUcOallocatorlEconstsPcharmUgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__DictLN_vectorlEvectorlEconstsPcharmUcOallocatorlEconstsPcharmUgRsPgRcOallocatorlEvectorlEconstsPcharmUcOallocatorlEconstsPcharmUgRsPgRsPgRsPgR),sizeof(vector<vector<const char*,allocator<const char*> >,allocator<vector<const char*,allocator<const char*> > > >),-1,298752,(char*)NULL,G__setup_memvarvectorlEvectorlEconstsPcharmUcOallocatorlEconstsPcharmUgRsPgRcOallocatorlEvectorlEconstsPcharmUcOallocatorlEconstsPcharmUgRsPgRsPgRsPgR,G__setup_memfuncvectorlEvectorlEconstsPcharmUcOallocatorlEconstsPcharmUgRsPgRcOallocatorlEvectorlEconstsPcharmUcOallocatorlEconstsPcharmUgRsPgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__DictLN_vectorlEvectorlEconstsPcharmUcOallocatorlEconstsPcharmUgRsPgRcOallocatorlEvectorlEconstsPcharmUcOallocatorlEconstsPcharmUgRsPgRsPgRsPgRcLcLiterator);
   G__get_linked_tagnum_fwd(&G__DictLN_reverse_iteratorlEvectorlEvectorlEconstsPcharmUcOallocatorlEconstsPcharmUgRsPgRcOallocatorlEvectorlEconstsPcharmUcOallocatorlEconstsPcharmUgRsPgRsPgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__DictLN_vectorlETStringcOallocatorlETStringgRsPgR);
   G__get_linked_tagnum_fwd(&G__DictLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__DictLN_vectorlEvectorlETStringcOallocatorlETStringgRsPgRcOallocatorlEvectorlETStringcOallocatorlETStringgRsPgRsPgRsPgR),sizeof(vector<vector<TString,allocator<TString> >,allocator<vector<TString,allocator<TString> > > >),-1,298752,(char*)NULL,G__setup_memvarvectorlEvectorlETStringcOallocatorlETStringgRsPgRcOallocatorlEvectorlETStringcOallocatorlETStringgRsPgRsPgRsPgR,G__setup_memfuncvectorlEvectorlETStringcOallocatorlETStringgRsPgRcOallocatorlEvectorlETStringcOallocatorlETStringgRsPgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__DictLN_vectorlEvectorlETStringcOallocatorlETStringgRsPgRcOallocatorlEvectorlETStringcOallocatorlETStringgRsPgRsPgRsPgRcLcLiterator);
   G__get_linked_tagnum_fwd(&G__DictLN_reverse_iteratorlEvectorlEvectorlETStringcOallocatorlETStringgRsPgRcOallocatorlEvectorlETStringcOallocatorlETStringgRsPgRsPgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__DictLN_vectorlEvectorlElongsPlongcOallocatorlElongsPlonggRsPgRcOallocatorlEvectorlElongsPlongcOallocatorlElongsPlonggRsPgRsPgRsPgR),sizeof(vector<vector<long long,allocator<long long> >,allocator<vector<long long,allocator<long long> > > >),-1,298752,(char*)NULL,G__setup_memvarvectorlEvectorlElongsPlongcOallocatorlElongsPlonggRsPgRcOallocatorlEvectorlElongsPlongcOallocatorlElongsPlonggRsPgRsPgRsPgR,G__setup_memfuncvectorlEvectorlElongsPlongcOallocatorlElongsPlonggRsPgRcOallocatorlEvectorlElongsPlongcOallocatorlElongsPlonggRsPgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__DictLN_vectorlEvectorlElongsPlongcOallocatorlElongsPlonggRsPgRcOallocatorlEvectorlElongsPlongcOallocatorlElongsPlonggRsPgRsPgRsPgRcLcLiterator);
   G__get_linked_tagnum_fwd(&G__DictLN_reverse_iteratorlEvectorlEvectorlElongsPlongcOallocatorlElongsPlonggRsPgRcOallocatorlEvectorlElongsPlongcOallocatorlElongsPlonggRsPgRsPgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__DictLN_vectorlEvectorlEunsignedsPlongsPlongcOallocatorlEunsignedsPlongsPlonggRsPgRcOallocatorlEvectorlEunsignedsPlongsPlongcOallocatorlEunsignedsPlongsPlonggRsPgRsPgRsPgR),sizeof(vector<vector<unsigned long long,allocator<unsigned long long> >,allocator<vector<unsigned long long,allocator<unsigned long long> > > >),-1,298752,(char*)NULL,G__setup_memvarvectorlEvectorlEunsignedsPlongsPlongcOallocatorlEunsignedsPlongsPlonggRsPgRcOallocatorlEvectorlEunsignedsPlongsPlongcOallocatorlEunsignedsPlongsPlonggRsPgRsPgRsPgR,G__setup_memfuncvectorlEvectorlEunsignedsPlongsPlongcOallocatorlEunsignedsPlongsPlonggRsPgRcOallocatorlEvectorlEunsignedsPlongsPlongcOallocatorlEunsignedsPlongsPlonggRsPgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__DictLN_vectorlEvectorlEunsignedsPlongsPlongcOallocatorlEunsignedsPlongsPlonggRsPgRcOallocatorlEvectorlEunsignedsPlongsPlongcOallocatorlEunsignedsPlongsPlonggRsPgRsPgRsPgRcLcLiterator);
   G__get_linked_tagnum_fwd(&G__DictLN_reverse_iteratorlEvectorlEvectorlEunsignedsPlongsPlongcOallocatorlEunsignedsPlongsPlonggRsPgRcOallocatorlEvectorlEunsignedsPlongsPlongcOallocatorlEunsignedsPlongsPlonggRsPgRsPgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__DictLN_vectorlEvectorlEvoidmUcOallocatorlEvoidmUgRsPgRcOallocatorlEvectorlEvoidmUcOallocatorlEvoidmUgRsPgRsPgRsPgR),sizeof(vector<vector<void*,allocator<void*> >,allocator<vector<void*,allocator<void*> > > >),-1,298752,(char*)NULL,G__setup_memvarvectorlEvectorlEvoidmUcOallocatorlEvoidmUgRsPgRcOallocatorlEvectorlEvoidmUcOallocatorlEvoidmUgRsPgRsPgRsPgR,G__setup_memfuncvectorlEvectorlEvoidmUcOallocatorlEvoidmUgRsPgRcOallocatorlEvectorlEvoidmUcOallocatorlEvoidmUgRsPgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__DictLN_vectorlEvectorlEvoidmUcOallocatorlEvoidmUgRsPgRcOallocatorlEvectorlEvoidmUcOallocatorlEvoidmUgRsPgRsPgRsPgRcLcLiterator);
   G__get_linked_tagnum_fwd(&G__DictLN_reverse_iteratorlEvectorlEvectorlEvoidmUcOallocatorlEvoidmUgRsPgRcOallocatorlEvectorlEvoidmUcOallocatorlEvoidmUgRsPgRsPgRsPgRcLcLiteratorgR);
}
extern "C" void G__cpp_setupDict(void) {
  G__check_setup_version(30051515,"G__cpp_setupDict()");
  G__set_cpp_environmentDict();
  G__cpp_setup_tagtableDict();

  G__cpp_setup_inheritanceDict();

  G__cpp_setup_typetableDict();

  G__cpp_setup_memvarDict();

  G__cpp_setup_memfuncDict();
  G__cpp_setup_globalDict();
  G__cpp_setup_funcDict();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncDict();
  return;
}
class G__cpp_setup_initDict {
  public:
    G__cpp_setup_initDict() { G__add_setup_func("Dict",(G__incsetup)(&G__cpp_setupDict)); G__call_setup_funcs(); }
   ~G__cpp_setup_initDict() { G__remove_setup_func("Dict"); }
};
G__cpp_setup_initDict G__cpp_setup_initializerDict;

